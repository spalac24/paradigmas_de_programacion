Prog "FlatCurryXML" ["FlatCurry","Prelude","XML","XmlConv"] [] [Func ("FlatCurryXML","flatCurryDtd") 0 Private (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (Rule [] (Comb ConsCall ("Prelude",":") [Lit (Charc  'h'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  'p'),Comb ConsCall ("Prelude",":") [Lit (Charc  ':'),Comb ConsCall ("Prelude",":") [Lit (Charc  '/'),Comb ConsCall ("Prelude",":") [Lit (Charc  '/'),Comb ConsCall ("Prelude",":") [Lit (Charc  'w'),Comb ConsCall ("Prelude",":") [Lit (Charc  'w'),Comb ConsCall ("Prelude",":") [Lit (Charc  'w'),Comb ConsCall ("Prelude",":") [Lit (Charc  '.'),Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  'n'),Comb ConsCall ("Prelude",":") [Lit (Charc  'f'),Comb ConsCall ("Prelude",":") [Lit (Charc  'o'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  'm'),Comb ConsCall ("Prelude",":") [Lit (Charc  'a'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  'k'),Comb ConsCall ("Prelude",":") [Lit (Charc  '.'),Comb ConsCall ("Prelude",":") [Lit (Charc  'u'),Comb ConsCall ("Prelude",":") [Lit (Charc  'n'),Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  '-'),Comb ConsCall ("Prelude",":") [Lit (Charc  'k'),Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude",":") [Lit (Charc  '.'),Comb ConsCall ("Prelude",":") [Lit (Charc  'd'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude",":") [Lit (Charc  '/'),Comb ConsCall ("Prelude",":") [Lit (Charc  '~'),Comb ConsCall ("Prelude",":") [Lit (Charc  'c'),Comb ConsCall ("Prelude",":") [Lit (Charc  'u'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  'y'),Comb ConsCall ("Prelude",":") [Lit (Charc  '/'),Comb ConsCall ("Prelude",":") [Lit (Charc  'f'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude",":") [Lit (Charc  'a'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  'c'),Comb ConsCall ("Prelude",":") [Lit (Charc  'u'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  'y'),Comb ConsCall ("Prelude",":") [Lit (Charc  'n'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude",":") [Lit (Charc  'w'),Comb ConsCall ("Prelude",":") [Lit (Charc  '.'),Comb ConsCall ("Prelude",":") [Lit (Charc  'd'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  'd'),Comb ConsCall ("Prelude","[]") []]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])),Func ("FlatCurryXML","flatCurry2XmlFile") 2 Public (FuncType (TCons ("FlatCurry","Prog") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []]))) (Rule [1,2] (Comb FuncCall ("Prelude","$") [Comb (FuncPartCall 1) ("Prelude","writeFile") [Var 2],Comb FuncCall ("XML","showXmlDocWithParams") [Comb ConsCall ("Prelude",":") [Comb ConsCall ("XML","DtdUrl") [Comb FuncCall ("FlatCurryXML","flatCurryDtd") []],Comb ConsCall ("Prelude","[]") []],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("FlatCurryXML","flatCurry2Xml") [],Var 1]]])),Func ("FlatCurryXML","flatCurry2Xml") 0 Public (FuncType (TCons ("FlatCurry","Prog") []) (TCons ("XML","XmlExp") [])) (Rule [] (Comb (FuncPartCall 1) ("XmlConv","xmlShow") [Comb FuncCall ("FlatCurryXML","cProg") []])),Func ("FlatCurryXML","xmlFile2FlatCurry") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("FlatCurry","Prog") []])) (Rule [1] (Comb FuncCall ("Prelude",">>=") [Comb FuncCall ("XML","readXmlFile") [Var 1],Comb FuncCall ("Prelude",".") [Comb (FuncPartCall 1) ("Prelude","return") [],Comb FuncCall ("FlatCurryXML","xml2FlatCurry") []]])),Func ("FlatCurryXML","xml2FlatCurry") 0 Public (FuncType (TCons ("XML","XmlExp") []) (TCons ("FlatCurry","Prog") [])) (Rule [] (Comb (FuncPartCall 1) ("XmlConv","xmlRead") [Comb FuncCall ("FlatCurryXML","cProg") []])),Func ("FlatCurryXML","cProg") 0 Private (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TCons ("XmlConv","Elem") [],TCons ("FlatCurry","Prog") []]) (Rule [] (Comb FuncCall ("XmlConv","eSeq5") [Comb ConsCall ("Prelude",":") [Lit (Charc  'p'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  'o'),Comb ConsCall ("Prelude",":") [Lit (Charc  'g'),Comb ConsCall ("Prelude","[]") []]]]],Comb (ConsPartCall 5) ("FlatCurry","Prog") [],Comb FuncCall ("FlatCurryXML","cModname") [],Comb FuncCall ("FlatCurryXML","cImports") [],Comb FuncCall ("FlatCurryXML","cTypes") [],Comb FuncCall ("FlatCurryXML","cFuncs") [],Comb FuncCall ("FlatCurryXML","cOps") []])),Func ("FlatCurryXML","cModname") 0 Private (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TCons ("XmlConv","Elem") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (Rule [] (Comb FuncCall ("XmlConv","eString") [Comb ConsCall ("Prelude",":") [Lit (Charc  'm'),Comb ConsCall ("Prelude",":") [Lit (Charc  'o'),Comb ConsCall ("Prelude",":") [Lit (Charc  'd'),Comb ConsCall ("Prelude",":") [Lit (Charc  'u'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude","[]") []]]]]]]])),Func ("FlatCurryXML","cImports") 0 Private (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TCons ("XmlConv","Elem") [],TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]) (Rule [] (Comb FuncCall ("XmlConv","eRep") [Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  'm'),Comb ConsCall ("Prelude",":") [Lit (Charc  'p'),Comb ConsCall ("Prelude",":") [Lit (Charc  'o'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude","[]") []]]]]]],Comb FuncCall ("XmlConv","eString") [Comb ConsCall ("Prelude",":") [Lit (Charc  'm'),Comb ConsCall ("Prelude",":") [Lit (Charc  'o'),Comb ConsCall ("Prelude",":") [Lit (Charc  'd'),Comb ConsCall ("Prelude",":") [Lit (Charc  'u'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude","[]") []]]]]]]]])),Func ("FlatCurryXML","cTypes") 0 Private (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TCons ("XmlConv","Elem") [],TCons ("Prelude","[]") [TCons ("FlatCurry","TypeDecl") []]]) (Rule [] (Comb FuncCall ("XmlConv","eRep") [Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  'y'),Comb ConsCall ("Prelude",":") [Lit (Charc  'p'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude",":") [Lit (Charc  's'),Comb ConsCall ("Prelude","[]") []]]]]],Comb FuncCall ("FlatCurryXML","cType") []])),Func ("FlatCurryXML","cType") 0 Private (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TCons ("XmlConv","Elem") [],TCons ("FlatCurry","TypeDecl") []]) (Rule [] (Comb FuncCall ("XmlConv","!") [Comb FuncCall ("XmlConv","eSeq4") [Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  'y'),Comb ConsCall ("Prelude",":") [Lit (Charc  'p'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude","[]") []]]]],Comb (ConsPartCall 4) ("FlatCurry","Type") [],Comb FuncCall ("FlatCurryXML","cQName") [],Comb FuncCall ("FlatCurryXML","cVis") [],Comb FuncCall ("FlatCurryXML","cTParams") [],Comb FuncCall ("XmlConv","rep") [Comb FuncCall ("FlatCurryXML","cConsDecl") []]],Comb FuncCall ("XmlConv","eSeq4") [Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  'y'),Comb ConsCall ("Prelude",":") [Lit (Charc  'p'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude",":") [Lit (Charc  's'),Comb ConsCall ("Prelude",":") [Lit (Charc  'y'),Comb ConsCall ("Prelude",":") [Lit (Charc  'n'),Comb ConsCall ("Prelude","[]") []]]]]]]],Comb (ConsPartCall 4) ("FlatCurry","TypeSyn") [],Comb FuncCall ("FlatCurryXML","cQName") [],Comb FuncCall ("FlatCurryXML","cVis") [],Comb FuncCall ("FlatCurryXML","cTParams") [],Comb FuncCall ("FlatCurryXML","cTypeExpr") []]])),Func ("FlatCurryXML","cQName") 0 Private (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","NotRepeatable") [],TCons ("XmlConv","NoElem") [],TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]) (Rule [] (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("XmlConv","seq2") [],Comb (FuncPartCall 2) ("FlatCurryXML","cQName._#lambda1") []],Comb FuncCall ("XmlConv","aString") [Comb ConsCall ("Prelude",":") [Lit (Charc  'm'),Comb ConsCall ("Prelude",":") [Lit (Charc  'o'),Comb ConsCall ("Prelude",":") [Lit (Charc  'd'),Comb ConsCall ("Prelude",":") [Lit (Charc  'u'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude","[]") []]]]]]]]],Comb FuncCall ("XmlConv","aString") [Comb ConsCall ("Prelude",":") [Lit (Charc  'n'),Comb ConsCall ("Prelude",":") [Lit (Charc  'a'),Comb ConsCall ("Prelude",":") [Lit (Charc  'm'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude","[]") []]]]]]])),Func ("FlatCurryXML","cQName._#lambda1") 2 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]))) (Rule [1,2] (Comb ConsCall ("Prelude","(,)") [Var 1,Var 2])),Func ("FlatCurryXML","cVis") 0 Private (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","NotRepeatable") [],TCons ("XmlConv","NoElem") [],TCons ("FlatCurry","Visibility") []]) (Rule [] (Comb FuncCall ("XmlConv","adapt") [Comb ConsCall ("Prelude","(,)") [Comb (FuncPartCall 1) ("FlatCurryXML","b2v") [],Comb (FuncPartCall 1) ("FlatCurryXML","v2b") []],Comb FuncCall ("XmlConv","aBool") [Comb ConsCall ("Prelude",":") [Lit (Charc  'v'),Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  's'),Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  'b'),Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  'y'),Comb ConsCall ("Prelude","[]") []]]]]]]]]]],Comb ConsCall ("Prelude",":") [Lit (Charc  'p'),Comb ConsCall ("Prelude",":") [Lit (Charc  'u'),Comb ConsCall ("Prelude",":") [Lit (Charc  'b'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  'c'),Comb ConsCall ("Prelude","[]") []]]]]]],Comb ConsCall ("Prelude",":") [Lit (Charc  'p'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  'v'),Comb ConsCall ("Prelude",":") [Lit (Charc  'a'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude","[]") []]]]]]]]]])),Func ("FlatCurryXML","b2v") 1 Private (FuncType (TCons ("Prelude","Bool") []) (TCons ("FlatCurry","Visibility") [])) (Rule [1] (Case  Rigid (Var 1) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("FlatCurry","Public") []),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("FlatCurry","Private") [])])),Func ("FlatCurryXML","v2b") 1 Private (FuncType (TCons ("FlatCurry","Visibility") []) (TCons ("Prelude","Bool") [])) (Rule [1] (Comb FuncCall ("Prelude","==") [Var 1,Comb ConsCall ("FlatCurry","Public") []])),Func ("FlatCurryXML","cTParams") 0 Private (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TCons ("XmlConv","Elem") [],TCons ("Prelude","[]") [TCons ("Prelude","Int") []]]) (Rule [] (Comb FuncCall ("XmlConv","eRep") [Comb ConsCall ("Prelude",":") [Lit (Charc  'p'),Comb ConsCall ("Prelude",":") [Lit (Charc  'a'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  'a'),Comb ConsCall ("Prelude",":") [Lit (Charc  'm'),Comb ConsCall ("Prelude",":") [Lit (Charc  's'),Comb ConsCall ("Prelude","[]") []]]]]]],Comb FuncCall ("XmlConv","eInt") [Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  'v'),Comb ConsCall ("Prelude",":") [Lit (Charc  'a'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude","[]") []]]]]]])),Func ("FlatCurryXML","cConsDecl") 0 Private (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TCons ("XmlConv","Elem") [],TCons ("FlatCurry","ConsDecl") []]) (Rule [] (Comb FuncCall ("XmlConv","eSeq4") [Comb ConsCall ("Prelude",":") [Lit (Charc  'c'),Comb ConsCall ("Prelude",":") [Lit (Charc  'o'),Comb ConsCall ("Prelude",":") [Lit (Charc  'n'),Comb ConsCall ("Prelude",":") [Lit (Charc  's'),Comb ConsCall ("Prelude","[]") []]]]],Comb (ConsPartCall 4) ("FlatCurry","Cons") [],Comb FuncCall ("FlatCurryXML","cQName") [],Comb FuncCall ("FlatCurryXML","cArity") [],Comb FuncCall ("FlatCurryXML","cVis") [],Comb FuncCall ("XmlConv","rep") [Comb FuncCall ("FlatCurryXML","cTypeExpr") []]])),Func ("FlatCurryXML","cArity") 0 Private (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","NotRepeatable") [],TCons ("XmlConv","NoElem") [],TCons ("Prelude","Int") []]) (Rule [] (Comb FuncCall ("XmlConv","aInt") [Comb ConsCall ("Prelude",":") [Lit (Charc  'a'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  'y'),Comb ConsCall ("Prelude","[]") []]]]]]])),Func ("FlatCurryXML","cTypeExpr") 0 Private (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TCons ("XmlConv","Elem") [],TCons ("FlatCurry","TypeExpr") []]) (Rule [] (Comb FuncCall ("XmlConv","!") [Comb FuncCall ("XmlConv","eSeq2") [Comb ConsCall ("Prelude",":") [Lit (Charc  'f'),Comb ConsCall ("Prelude",":") [Lit (Charc  'u'),Comb ConsCall ("Prelude",":") [Lit (Charc  'n'),Comb ConsCall ("Prelude",":") [Lit (Charc  'c'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  'y'),Comb ConsCall ("Prelude",":") [Lit (Charc  'p'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude","[]") []]]]]]]]],Comb (ConsPartCall 2) ("FlatCurry","FuncType") [],Comb FuncCall ("FlatCurryXML","cTypeExpr") [],Comb FuncCall ("FlatCurryXML","cTypeExpr") []],Comb FuncCall ("XmlConv","!") [Comb FuncCall ("XmlConv","eSeq2") [Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  'c'),Comb ConsCall ("Prelude",":") [Lit (Charc  'o'),Comb ConsCall ("Prelude",":") [Lit (Charc  'n'),Comb ConsCall ("Prelude",":") [Lit (Charc  's'),Comb ConsCall ("Prelude","[]") []]]]]],Comb (ConsPartCall 2) ("FlatCurry","TCons") [],Comb FuncCall ("FlatCurryXML","cQName") [],Comb FuncCall ("XmlConv","rep") [Comb FuncCall ("FlatCurryXML","cTypeExpr") []]],Comb FuncCall ("XmlConv","eSeq1") [Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  'v'),Comb ConsCall ("Prelude",":") [Lit (Charc  'a'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude","[]") []]]]],Comb (ConsPartCall 1) ("FlatCurry","TVar") [],Comb FuncCall ("XmlConv","int") []]]])),Func ("FlatCurryXML","cFuncs") 0 Private (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TCons ("XmlConv","Elem") [],TCons ("Prelude","[]") [TCons ("FlatCurry","FuncDecl") []]]) (Rule [] (Comb FuncCall ("XmlConv","eRep") [Comb ConsCall ("Prelude",":") [Lit (Charc  'f'),Comb ConsCall ("Prelude",":") [Lit (Charc  'u'),Comb ConsCall ("Prelude",":") [Lit (Charc  'n'),Comb ConsCall ("Prelude",":") [Lit (Charc  'c'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  'o'),Comb ConsCall ("Prelude",":") [Lit (Charc  'n'),Comb ConsCall ("Prelude",":") [Lit (Charc  's'),Comb ConsCall ("Prelude","[]") []]]]]]]]]],Comb FuncCall ("FlatCurryXML","cFunc") []])),Func ("FlatCurryXML","cFunc") 0 Private (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TCons ("XmlConv","Elem") [],TCons ("FlatCurry","FuncDecl") []]) (Rule [] (Comb FuncCall ("XmlConv","eSeq5") [Comb ConsCall ("Prelude",":") [Lit (Charc  'f'),Comb ConsCall ("Prelude",":") [Lit (Charc  'u'),Comb ConsCall ("Prelude",":") [Lit (Charc  'n'),Comb ConsCall ("Prelude",":") [Lit (Charc  'c'),Comb ConsCall ("Prelude","[]") []]]]],Comb (ConsPartCall 5) ("FlatCurry","Func") [],Comb FuncCall ("FlatCurryXML","cQName") [],Comb FuncCall ("FlatCurryXML","cArity") [],Comb FuncCall ("FlatCurryXML","cVis") [],Comb FuncCall ("FlatCurryXML","cTypeExpr") [],Comb FuncCall ("FlatCurryXML","cRule") []])),Func ("FlatCurryXML","cRule") 0 Private (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TCons ("XmlConv","Elem") [],TCons ("FlatCurry","Rule") []]) (Rule [] (Comb FuncCall ("XmlConv","!") [Comb FuncCall ("XmlConv","eSeq2") [Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  'u'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude","[]") []]]]],Comb (ConsPartCall 2) ("FlatCurry","Rule") [],Comb FuncCall ("FlatCurryXML","cLHS") [],Comb FuncCall ("FlatCurryXML","cRHS") []],Comb FuncCall ("XmlConv","eSeq1") [Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude",":") [Lit (Charc  'x'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  'n'),Comb ConsCall ("Prelude",":") [Lit (Charc  'a'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude","[]") []]]]]]]]],Comb (ConsPartCall 1) ("FlatCurry","External") [],Comb FuncCall ("XmlConv","string") []]])),Func ("FlatCurryXML","cLHS") 0 Private (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TCons ("XmlConv","Elem") [],TCons ("Prelude","[]") [TCons ("Prelude","Int") []]]) (Rule [] (Comb FuncCall ("XmlConv","element") [Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude",":") [Lit (Charc  'h'),Comb ConsCall ("Prelude",":") [Lit (Charc  's'),Comb ConsCall ("Prelude","[]") []]]],Comb FuncCall ("FlatCurryXML","cVars") []])),Func ("FlatCurryXML","cRHS") 0 Private (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TCons ("XmlConv","Elem") [],TCons ("FlatCurry","Expr") []]) (Rule [] (Comb FuncCall ("XmlConv","element") [Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  'h'),Comb ConsCall ("Prelude",":") [Lit (Charc  's'),Comb ConsCall ("Prelude","[]") []]]],Comb FuncCall ("FlatCurryXML","cExpr") []])),Func ("FlatCurryXML","cVars") 0 Private (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","NotRepeatable") [],TCons ("XmlConv","NoElem") [],TCons ("Prelude","[]") [TCons ("Prelude","Int") []]]) (Rule [] (Comb FuncCall ("XmlConv","rep") [Comb FuncCall ("FlatCurryXML","cVar") []])),Func ("FlatCurryXML","cVar") 0 Private (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TCons ("XmlConv","Elem") [],TCons ("Prelude","Int") []]) (Rule [] (Comb FuncCall ("XmlConv","eInt") [Comb ConsCall ("Prelude",":") [Lit (Charc  'v'),Comb ConsCall ("Prelude",":") [Lit (Charc  'a'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude","[]") []]]]])),Func ("FlatCurryXML","cExpr") 0 Private (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TCons ("XmlConv","Elem") [],TCons ("FlatCurry","Expr") []]) (Rule [] (Comb FuncCall ("XmlConv","!") [Comb FuncCall ("XmlConv","eSeq1") [Comb ConsCall ("Prelude",":") [Lit (Charc  'v'),Comb ConsCall ("Prelude",":") [Lit (Charc  'a'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude","[]") []]]],Comb (ConsPartCall 1) ("FlatCurry","Var") [],Comb FuncCall ("XmlConv","int") []],Comb FuncCall ("XmlConv","!") [Comb FuncCall ("XmlConv","eSeq1") [Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude","[]") []]]],Comb (ConsPartCall 1) ("FlatCurry","Lit") [],Comb FuncCall ("FlatCurryXML","cLit") []],Comb FuncCall ("XmlConv","!") [Comb FuncCall ("XmlConv","eSeq2") [Comb ConsCall ("Prelude",":") [Lit (Charc  'f'),Comb ConsCall ("Prelude",":") [Lit (Charc  'u'),Comb ConsCall ("Prelude",":") [Lit (Charc  'n'),Comb ConsCall ("Prelude",":") [Lit (Charc  'c'),Comb ConsCall ("Prelude",":") [Lit (Charc  'c'),Comb ConsCall ("Prelude",":") [Lit (Charc  'a'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude","[]") []]]]]]]]],Comb FuncCall ("FlatCurryXML","fc") [],Comb FuncCall ("FlatCurryXML","cQName") [],Comb FuncCall ("FlatCurryXML","cExps") []],Comb FuncCall ("XmlConv","!") [Comb FuncCall ("XmlConv","eSeq2") [Comb ConsCall ("Prelude",":") [Lit (Charc  'c'),Comb ConsCall ("Prelude",":") [Lit (Charc  'o'),Comb ConsCall ("Prelude",":") [Lit (Charc  'n'),Comb ConsCall ("Prelude",":") [Lit (Charc  's'),Comb ConsCall ("Prelude",":") [Lit (Charc  'c'),Comb ConsCall ("Prelude",":") [Lit (Charc  'a'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude","[]") []]]]]]]]],Comb FuncCall ("FlatCurryXML","cc") [],Comb FuncCall ("FlatCurryXML","cQName") [],Comb FuncCall ("FlatCurryXML","cExps") []],Comb FuncCall ("XmlConv","!") [Comb FuncCall ("XmlConv","eSeq3") [Comb ConsCall ("Prelude",":") [Lit (Charc  'f'),Comb ConsCall ("Prelude",":") [Lit (Charc  'u'),Comb ConsCall ("Prelude",":") [Lit (Charc  'n'),Comb ConsCall ("Prelude",":") [Lit (Charc  'c'),Comb ConsCall ("Prelude",":") [Lit (Charc  'p'),Comb ConsCall ("Prelude",":") [Lit (Charc  'a'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  'c'),Comb ConsCall ("Prelude",":") [Lit (Charc  'a'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude","[]") []]]]]]]]]]]]],Comb (FuncPartCall 2) ("FlatCurryXML","pfc") [],Comb FuncCall ("FlatCurryXML","cQName") [],Comb FuncCall ("FlatCurryXML","cMissing") [],Comb FuncCall ("FlatCurryXML","cExps") []],Comb FuncCall ("XmlConv","!") [Comb FuncCall ("XmlConv","eSeq3") [Comb ConsCall ("Prelude",":") [Lit (Charc  'c'),Comb ConsCall ("Prelude",":") [Lit (Charc  'o'),Comb ConsCall ("Prelude",":") [Lit (Charc  'n'),Comb ConsCall ("Prelude",":") [Lit (Charc  's'),Comb ConsCall ("Prelude",":") [Lit (Charc  'p'),Comb ConsCall ("Prelude",":") [Lit (Charc  'a'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  'c'),Comb ConsCall ("Prelude",":") [Lit (Charc  'a'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude","[]") []]]]]]]]]]]]],Comb (FuncPartCall 2) ("FlatCurryXML","pcc") [],Comb FuncCall ("FlatCurryXML","cQName") [],Comb FuncCall ("FlatCurryXML","cMissing") [],Comb FuncCall ("FlatCurryXML","cExps") []],Comb FuncCall ("XmlConv","!") [Comb FuncCall ("XmlConv","eSeq2") [Comb ConsCall ("Prelude",":") [Lit (Charc  'f'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude","[]") []]]]],Comb (ConsPartCall 2) ("FlatCurry","Free") [],Comb FuncCall ("XmlConv","element") [Comb ConsCall ("Prelude",":") [Lit (Charc  'f'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude",":") [Lit (Charc  'v'),Comb ConsCall ("Prelude",":") [Lit (Charc  'a'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  's'),Comb ConsCall ("Prelude","[]") []]]]]]]]],Comb FuncCall ("FlatCurryXML","cVars") []],Comb FuncCall ("FlatCurryXML","cExpr") []],Comb FuncCall ("XmlConv","!") [Comb FuncCall ("XmlConv","eSeq2") [Comb ConsCall ("Prelude",":") [Lit (Charc  'o'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude","[]") []]],Comb (ConsPartCall 2) ("FlatCurry","Or") [],Comb FuncCall ("FlatCurryXML","cExpr") [],Comb FuncCall ("FlatCurryXML","cExpr") []],Comb FuncCall ("XmlConv","!") [Comb FuncCall ("XmlConv","eSeq2") [Comb ConsCall ("Prelude",":") [Lit (Charc  'c'),Comb ConsCall ("Prelude",":") [Lit (Charc  'a'),Comb ConsCall ("Prelude",":") [Lit (Charc  's'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude","[]") []]]]],Comb FuncCall ("FlatCurryXML","cr") [],Comb FuncCall ("FlatCurryXML","cExpr") [],Comb FuncCall ("XmlConv","rep") [Comb FuncCall ("FlatCurryXML","cBranch") []]],Comb FuncCall ("XmlConv","!") [Comb FuncCall ("XmlConv","eSeq2") [Comb ConsCall ("Prelude",":") [Lit (Charc  'f'),Comb ConsCall ("Prelude",":") [Lit (Charc  'c'),Comb ConsCall ("Prelude",":") [Lit (Charc  'a'),Comb ConsCall ("Prelude",":") [Lit (Charc  's'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude","[]") []]]]]],Comb FuncCall ("FlatCurryXML","cf") [],Comb FuncCall ("FlatCurryXML","cExpr") [],Comb FuncCall ("XmlConv","rep") [Comb FuncCall ("FlatCurryXML","cBranch") []]],Comb FuncCall ("XmlConv","!") [Comb FuncCall ("XmlConv","eSeq2") [Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude",":") [Lit (Charc  'c'),Comb ConsCall ("Prelude","[]") []]]]]]],Comb (ConsPartCall 2) ("FlatCurry","Let") [],Comb FuncCall ("XmlConv","rep") [Comb FuncCall ("FlatCurryXML","cBind") []],Comb FuncCall ("FlatCurryXML","cExpr") []],Comb FuncCall ("XmlConv","eSeq2") [Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  'y'),Comb ConsCall ("Prelude",":") [Lit (Charc  'p'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude",":") [Lit (Charc  'd'),Comb ConsCall ("Prelude","[]") []]]]]],Comb (ConsPartCall 2) ("FlatCurry","Typed") [],Comb FuncCall ("FlatCurryXML","cExpr") [],Comb FuncCall ("FlatCurryXML","cTypeExpr") []]]]]]]]]]]]])),Func ("FlatCurryXML","cLit") 0 Private (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TCons ("XmlConv","Elem") [],TCons ("FlatCurry","Literal") []]) (Rule [] (Comb FuncCall ("XmlConv","!") [Comb FuncCall ("XmlConv","eSeq1") [Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  'n'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  'c'),Comb ConsCall ("Prelude","[]") []]]]],Comb (ConsPartCall 1) ("FlatCurry","Intc") [],Comb FuncCall ("XmlConv","int") []],Comb FuncCall ("XmlConv","!") [Comb FuncCall ("XmlConv","eSeq1") [Comb ConsCall ("Prelude",":") [Lit (Charc  'f'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude",":") [Lit (Charc  'o'),Comb ConsCall ("Prelude",":") [Lit (Charc  'a'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  'c'),Comb ConsCall ("Prelude","[]") []]]]]]],Comb (ConsPartCall 1) ("FlatCurry","Floatc") [],Comb FuncCall ("XmlConv","float") []],Comb FuncCall ("XmlConv","eSeq1") [Comb ConsCall ("Prelude",":") [Lit (Charc  'c'),Comb ConsCall ("Prelude",":") [Lit (Charc  'h'),Comb ConsCall ("Prelude",":") [Lit (Charc  'a'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  'c'),Comb ConsCall ("Prelude","[]") []]]]]],Comb (ConsPartCall 1) ("FlatCurry","Charc") [],Comb FuncCall ("XmlConv","adapt") [Comb ConsCall ("Prelude","(,)") [Comb (FuncPartCall 1) ("Prelude","chr") [],Comb (FuncPartCall 1) ("Prelude","ord") []],Comb FuncCall ("XmlConv","int") []]]]])),Func ("FlatCurryXML","fc") 0 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (FuncType (TCons ("Prelude","[]") [TCons ("FlatCurry","Expr") []]) (TCons ("FlatCurry","Expr") []))) (Rule [] (Comb (ConsPartCall 2) ("FlatCurry","Comb") [Comb ConsCall ("FlatCurry","FuncCall") []])),Func ("FlatCurryXML","cc") 0 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (FuncType (TCons ("Prelude","[]") [TCons ("FlatCurry","Expr") []]) (TCons ("FlatCurry","Expr") []))) (Rule [] (Comb (ConsPartCall 2) ("FlatCurry","Comb") [Comb ConsCall ("FlatCurry","ConsCall") []])),Func ("FlatCurryXML","pfc") 2 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","[]") [TCons ("FlatCurry","Expr") []]) (TCons ("FlatCurry","Expr") [])))) (Rule [1,2] (Comb (ConsPartCall 1) ("FlatCurry","Comb") [Comb ConsCall ("FlatCurry","FuncPartCall") [Var 2],Var 1])),Func ("FlatCurryXML","pcc") 2 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","[]") [TCons ("FlatCurry","Expr") []]) (TCons ("FlatCurry","Expr") [])))) (Rule [1,2] (Comb (ConsPartCall 1) ("FlatCurry","Comb") [Comb ConsCall ("FlatCurry","ConsPartCall") [Var 2],Var 1])),Func ("FlatCurryXML","cExps") 0 Private (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","NotRepeatable") [],TCons ("XmlConv","NoElem") [],TCons ("Prelude","[]") [TCons ("FlatCurry","Expr") []]]) (Rule [] (Comb FuncCall ("XmlConv","rep") [Comb FuncCall ("FlatCurryXML","cExpr") []])),Func ("FlatCurryXML","cMissing") 0 Private (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","NotRepeatable") [],TCons ("XmlConv","NoElem") [],TCons ("Prelude","Int") []]) (Rule [] (Comb FuncCall ("XmlConv","aInt") [Comb ConsCall ("Prelude",":") [Lit (Charc  'm'),Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  's'),Comb ConsCall ("Prelude",":") [Lit (Charc  's'),Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  'n'),Comb ConsCall ("Prelude",":") [Lit (Charc  'g'),Comb ConsCall ("Prelude","[]") []]]]]]]]])),Func ("FlatCurryXML","cr") 0 Private (FuncType (TCons ("FlatCurry","Expr") []) (FuncType (TCons ("Prelude","[]") [TCons ("FlatCurry","BranchExpr") []]) (TCons ("FlatCurry","Expr") []))) (Rule [] (Comb (ConsPartCall 2) ("FlatCurry","Case") [Comb ConsCall ("FlatCurry","Rigid") []])),Func ("FlatCurryXML","cf") 0 Private (FuncType (TCons ("FlatCurry","Expr") []) (FuncType (TCons ("Prelude","[]") [TCons ("FlatCurry","BranchExpr") []]) (TCons ("FlatCurry","Expr") []))) (Rule [] (Comb (ConsPartCall 2) ("FlatCurry","Case") [Comb ConsCall ("FlatCurry","Flex") []])),Func ("FlatCurryXML","cBranch") 0 Private (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TCons ("XmlConv","Elem") [],TCons ("FlatCurry","BranchExpr") []]) (Rule [] (Comb FuncCall ("XmlConv","eSeq2") [Comb ConsCall ("Prelude",":") [Lit (Charc  'b'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  'a'),Comb ConsCall ("Prelude",":") [Lit (Charc  'n'),Comb ConsCall ("Prelude",":") [Lit (Charc  'c'),Comb ConsCall ("Prelude",":") [Lit (Charc  'h'),Comb ConsCall ("Prelude","[]") []]]]]]],Comb (ConsPartCall 2) ("FlatCurry","Branch") [],Comb FuncCall ("FlatCurryXML","cPat") [],Comb FuncCall ("FlatCurryXML","cExpr") []])),Func ("FlatCurryXML","cPat") 0 Private (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TCons ("XmlConv","Elem") [],TCons ("FlatCurry","Pattern") []]) (Rule [] (Comb FuncCall ("XmlConv","!") [Comb FuncCall ("XmlConv","eSeq2") [Comb ConsCall ("Prelude",":") [Lit (Charc  'p'),Comb ConsCall ("Prelude",":") [Lit (Charc  'a'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  'n'),Comb ConsCall ("Prelude","[]") []]]]]]]],Comb (ConsPartCall 2) ("FlatCurry","Pattern") [],Comb FuncCall ("FlatCurryXML","cQName") [],Comb FuncCall ("FlatCurryXML","cVars") []],Comb FuncCall ("XmlConv","eSeq1") [Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude",":") [Lit (Charc  'p'),Comb ConsCall ("Prelude",":") [Lit (Charc  'a'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  'n'),Comb ConsCall ("Prelude","[]") []]]]]]]]],Comb (ConsPartCall 1) ("FlatCurry","LPattern") [],Comb FuncCall ("FlatCurryXML","cLit") []]])),Func ("FlatCurryXML","cBind") 0 Private (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TCons ("XmlConv","Elem") [],TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("FlatCurry","Expr") []]]) (Rule [] (Comb FuncCall ("XmlConv","eSeq2") [Comb ConsCall ("Prelude",":") [Lit (Charc  'b'),Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  'n'),Comb ConsCall ("Prelude",":") [Lit (Charc  'd'),Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  'n'),Comb ConsCall ("Prelude",":") [Lit (Charc  'g'),Comb ConsCall ("Prelude","[]") []]]]]]]],Comb (FuncPartCall 2) ("FlatCurryXML","cBind._#lambda2") [],Comb FuncCall ("FlatCurryXML","cVar") [],Comb FuncCall ("FlatCurryXML","cExpr") []])),Func ("FlatCurryXML","cBind._#lambda2") 2 Private (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("FlatCurry","Expr") []) (TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("FlatCurry","Expr") []]))) (Rule [1,2] (Comb ConsCall ("Prelude","(,)") [Var 1,Var 2])),Func ("FlatCurryXML","cOps") 0 Private (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TCons ("XmlConv","Elem") [],TCons ("Prelude","[]") [TCons ("FlatCurry","OpDecl") []]]) (Rule [] (Comb FuncCall ("XmlConv","eRep") [Comb ConsCall ("Prelude",":") [Lit (Charc  'o'),Comb ConsCall ("Prelude",":") [Lit (Charc  'p'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  'a'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  'o'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  's'),Comb ConsCall ("Prelude","[]") []]]]]]]]]],Comb FuncCall ("FlatCurryXML","cOp") []])),Func ("FlatCurryXML","cOp") 0 Private (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TCons ("XmlConv","Elem") [],TCons ("FlatCurry","OpDecl") []]) (Rule [] (Comb FuncCall ("XmlConv","eSeq3") [Comb ConsCall ("Prelude",":") [Lit (Charc  'o'),Comb ConsCall ("Prelude",":") [Lit (Charc  'p'),Comb ConsCall ("Prelude","[]") []]],Comb (ConsPartCall 3) ("FlatCurry","Op") [],Comb FuncCall ("FlatCurryXML","cQName") [],Comb FuncCall ("FlatCurryXML","cFixity") [],Comb FuncCall ("XmlConv","aInt") [Comb ConsCall ("Prelude",":") [Lit (Charc  'p'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude",":") [Lit (Charc  'c'),Comb ConsCall ("Prelude","[]") []]]]]]])),Func ("FlatCurryXML","cFixity") 0 Private (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","NotRepeatable") [],TCons ("XmlConv","NoElem") [],TCons ("FlatCurry","Fixity") []]) (Rule [] (Comb FuncCall ("XmlConv","adapt") [Comb ConsCall ("Prelude","(,)") [Comb (FuncPartCall 1) ("FlatCurryXML","rf") [],Comb (FuncPartCall 1) ("Prelude","show") []],Comb FuncCall ("XmlConv","aString") [Comb ConsCall ("Prelude",":") [Lit (Charc  'f'),Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  'x'),Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  'y'),Comb ConsCall ("Prelude","[]") []]]]]]]]])),Func ("FlatCurryXML","rf") 1 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("FlatCurry","Fixity") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude",":") [2,3]) (Case  Flex (Var 2) [Branch (LPattern (Charc  'I')) (Case  Flex (Var 3) [Branch (Pattern ("Prelude",":") [4,5]) (Case  Flex (Var 4) [Branch (LPattern (Charc  'n')) (Case  Flex (Var 5) [Branch (Pattern ("Prelude",":") [6,7]) (Case  Flex (Var 6) [Branch (LPattern (Charc  'f')) (Case  Flex (Var 7) [Branch (Pattern ("Prelude",":") [8,9]) (Case  Flex (Var 8) [Branch (LPattern (Charc  'i')) (Case  Flex (Var 9) [Branch (Pattern ("Prelude",":") [10,11]) (Case  Flex (Var 10) [Branch (LPattern (Charc  'x')) (Case  Flex (Var 11) [Branch (Pattern ("Prelude",":") [12,13]) (Case  Flex (Var 12) [Branch (LPattern (Charc  'O')) (Case  Flex (Var 13) [Branch (Pattern ("Prelude",":") [14,15]) (Case  Flex (Var 14) [Branch (LPattern (Charc  'p')) (Case  Flex (Var 15) [Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("FlatCurry","InfixOp") [])])])]),Branch (LPattern (Charc  'l')) (Case  Flex (Var 13) [Branch (Pattern ("Prelude",":") [16,17]) (Case  Flex (Var 16) [Branch (LPattern (Charc  'O')) (Case  Flex (Var 17) [Branch (Pattern ("Prelude",":") [18,19]) (Case  Flex (Var 18) [Branch (LPattern (Charc  'p')) (Case  Flex (Var 19) [Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("FlatCurry","InfixlOp") [])])])])])]),Branch (LPattern (Charc  'r')) (Case  Flex (Var 13) [Branch (Pattern ("Prelude",":") [20,21]) (Case  Flex (Var 20) [Branch (LPattern (Charc  'O')) (Case  Flex (Var 21) [Branch (Pattern ("Prelude",":") [22,23]) (Case  Flex (Var 22) [Branch (LPattern (Charc  'p')) (Case  Flex (Var 23) [Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("FlatCurry","InfixrOp") [])])])])])])])])])])])])])])])])])]))] []