Prog "AnnotatedFlatCurry" ["FlatCurry","Prelude"] [TypeSyn ("AnnotatedFlatCurry","Arity") Public [] (TCons ("Prelude","Int") []),Type ("AnnotatedFlatCurry","AProg") Public [0] [Cons ("AnnotatedFlatCurry","AProg") 5 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","[]") [TCons ("FlatCurry","TypeDecl") []],TCons ("Prelude","[]") [TCons ("AnnotatedFlatCurry","AFuncDecl") [TVar 0]],TCons ("Prelude","[]") [TCons ("FlatCurry","OpDecl") []]]],Type ("AnnotatedFlatCurry","AFuncDecl") Public [0] [Cons ("AnnotatedFlatCurry","AFunc") 5 Public [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","Int") [],TCons ("FlatCurry","Visibility") [],TCons ("FlatCurry","TypeExpr") [],TCons ("AnnotatedFlatCurry","ARule") [TVar 0]]],Type ("AnnotatedFlatCurry","ARule") Public [0] [Cons ("AnnotatedFlatCurry","ARule") 3 Public [TVar 0,TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TVar 0]],TCons ("AnnotatedFlatCurry","AExpr") [TVar 0]],Cons ("AnnotatedFlatCurry","AExternal") 2 Public [TVar 0,TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],Type ("AnnotatedFlatCurry","AExpr") Public [0] [Cons ("AnnotatedFlatCurry","AVar") 2 Public [TVar 0,TCons ("Prelude","Int") []],Cons ("AnnotatedFlatCurry","ALit") 2 Public [TVar 0,TCons ("FlatCurry","Literal") []],Cons ("AnnotatedFlatCurry","AComb") 4 Public [TVar 0,TCons ("FlatCurry","CombType") [],TCons ("Prelude","(,)") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TVar 0],TCons ("Prelude","[]") [TCons ("AnnotatedFlatCurry","AExpr") [TVar 0]]],Cons ("AnnotatedFlatCurry","ALet") 3 Public [TVar 0,TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("AnnotatedFlatCurry","AExpr") [TVar 0]]],TCons ("AnnotatedFlatCurry","AExpr") [TVar 0]],Cons ("AnnotatedFlatCurry","AFree") 3 Public [TVar 0,TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TVar 0]],TCons ("AnnotatedFlatCurry","AExpr") [TVar 0]],Cons ("AnnotatedFlatCurry","AOr") 3 Public [TVar 0,TCons ("AnnotatedFlatCurry","AExpr") [TVar 0],TCons ("AnnotatedFlatCurry","AExpr") [TVar 0]],Cons ("AnnotatedFlatCurry","ACase") 4 Public [TVar 0,TCons ("FlatCurry","CaseType") [],TCons ("AnnotatedFlatCurry","AExpr") [TVar 0],TCons ("Prelude","[]") [TCons ("AnnotatedFlatCurry","ABranchExpr") [TVar 0]]],Cons ("AnnotatedFlatCurry","ATyped") 3 Public [TVar 0,TCons ("AnnotatedFlatCurry","AExpr") [TVar 0],TCons ("FlatCurry","TypeExpr") []]],Type ("AnnotatedFlatCurry","ABranchExpr") Public [0] [Cons ("AnnotatedFlatCurry","ABranch") 2 Public [TCons ("AnnotatedFlatCurry","APattern") [TVar 0],TCons ("AnnotatedFlatCurry","AExpr") [TVar 0]]],Type ("AnnotatedFlatCurry","APattern") Public [0] [Cons ("AnnotatedFlatCurry","APattern") 3 Public [TVar 0,TCons ("Prelude","(,)") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TVar 0],TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TVar 0]]],Cons ("AnnotatedFlatCurry","ALPattern") 2 Public [TVar 0,TCons ("FlatCurry","Literal") []]]] [] []