Prog "PrettyAbstract" ["AbstractCurry","List","Maybe","Prelude","Pretty","System","Char"] [TypeSyn ("PrettyAbstract","Precs") Private [] (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","(,)") [TCons ("AbstractCurry","CFixity") [],TCons ("Prelude","Int") []]]])] [Func ("PrettyAbstract","preludePrecs") 0 Public (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","(,)") [TCons ("AbstractCurry","CFixity") [],TCons ("Prelude","Int") []]]]) (Rule [] (Var 0)),Func ("PrettyAbstract","prettyCProg") 1 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("AbstractCurry","CurryProg") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]))) (Rule [] (Var 0)),Func ("PrettyAbstract","prettyCTypeExpr") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("AbstractCurry","CTypeExpr") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]))) (Rule [] (Var 0)),Func ("PrettyAbstract","prettyCTypes") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("AbstractCurry","CTypeDecl") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]))) (Rule [] (Var 0)),Func ("PrettyAbstract","prettyCOps") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("AbstractCurry","COpDecl") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Var 0)),Func ("PrettyAbstract","showCProg") 0 Public (FuncType (TCons ("AbstractCurry","CurryProg") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Var 0)),Func ("PrettyAbstract","printCProg") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])) (Rule [] (Var 0)),Func ("PrettyAbstract","printUCProg") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])) (Rule [] (Var 0)),Func ("PrettyAbstract","cprogDoc") 0 Public (FuncType (TCons ("AbstractCurry","CurryProg") []) (TCons ("Pretty","Doc") [])) (Rule [] (Var 0)),Func ("PrettyAbstract","cprogDocWithPrecedences") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","(,)") [TCons ("AbstractCurry","CFixity") [],TCons ("Prelude","Int") []]]]) (FuncType (TCons ("AbstractCurry","CurryProg") []) (TCons ("Pretty","Doc") []))) (Rule [] (Var 0)),Func ("PrettyAbstract","precs") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("AbstractCurry","COpDecl") []]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","(,)") [TCons ("AbstractCurry","CFixity") [],TCons ("Prelude","Int") []]]])) (Rule [] (Var 0))] []