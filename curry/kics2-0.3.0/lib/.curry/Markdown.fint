Prog "Markdown" ["Char","HTML","HtmlParser","IO","List","Prelude","System"] [TypeSyn ("Markdown","MarkdownDoc") Public [] (TCons ("Prelude","[]") [TCons ("Markdown","MarkdownElem") []]),Type ("Markdown","MarkdownElem") Public [] [Cons ("Markdown","Text") 1 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],Cons ("Markdown","Emph") 1 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],Cons ("Markdown","Strong") 1 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],Cons ("Markdown","Code") 1 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],Cons ("Markdown","HRef") 2 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],Cons ("Markdown","Par") 1 Public [TCons ("Prelude","[]") [TCons ("Markdown","MarkdownElem") []]],Cons ("Markdown","CodeBlock") 1 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],Cons ("Markdown","UList") 1 Public [TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Markdown","MarkdownElem") []]]],Cons ("Markdown","OList") 1 Public [TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Markdown","MarkdownElem") []]]],Cons ("Markdown","Quote") 1 Public [TCons ("Prelude","[]") [TCons ("Markdown","MarkdownElem") []]],Cons ("Markdown","HRule") 0 Public [],Cons ("Markdown","Header") 2 Public [TCons ("Prelude","Int") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]] [Func ("Markdown","fromMarkdownText") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Markdown","MarkdownElem") []])) (Rule [] (Var 0)),Func ("Markdown","removeEscapes") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Var 0)),Func ("Markdown","markdownText2HTML") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []])) (Rule [] (Var 0)),Func ("Markdown","markdownText2CompleteHTML") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]))) (Rule [] (Var 0)),Func ("Markdown","markdownText2LaTeX") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Var 0)),Func ("Markdown","markdownText2LaTeXWithFormat") 1 Public (FuncType (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]))) (Rule [] (Var 0)),Func ("Markdown","markdownText2CompleteLaTeX") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Var 0)),Func ("Markdown","formatMarkdownInputAsPDF") 0 Public (TCons ("Prelude","IO") [TCons ("Prelude","()") []]) (Rule [] (Var 0)),Func ("Markdown","formatMarkdownFileAsPDF") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])) (Rule [] (Var 0))] []