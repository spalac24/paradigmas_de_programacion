Prog "Function" ["Prelude"] [] [Func ("Function","fix") 1 Public (FuncType (FuncType (TVar 0) (TVar 0)) (TVar 0)) (Rule [] (Var 0)),Func ("Function","on") 4 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TVar 1))) (FuncType (FuncType (TVar 2) (TVar 0)) (FuncType (TVar 2) (FuncType (TVar 2) (TVar 1))))) (Rule [] (Var 0)),Func ("Function","first") 2 Public (FuncType (FuncType (TVar 0) (TVar 1)) (FuncType (TCons ("Prelude","(,)") [TVar 0,TVar 2]) (TCons ("Prelude","(,)") [TVar 1,TVar 2]))) (Rule [] (Var 0)),Func ("Function","second") 2 Public (FuncType (FuncType (TVar 0) (TVar 1)) (FuncType (TCons ("Prelude","(,)") [TVar 2,TVar 0]) (TCons ("Prelude","(,)") [TVar 2,TVar 1]))) (Rule [] (Var 0)),Func ("Function","***") 3 Public (FuncType (FuncType (TVar 0) (TVar 1)) (FuncType (FuncType (TVar 2) (TVar 3)) (FuncType (TCons ("Prelude","(,)") [TVar 0,TVar 2]) (TCons ("Prelude","(,)") [TVar 1,TVar 3])))) (Rule [] (Var 0)),Func ("Function","&&&") 3 Public (FuncType (FuncType (TVar 0) (TVar 1)) (FuncType (FuncType (TVar 0) (TVar 2)) (FuncType (TVar 0) (TCons ("Prelude","(,)") [TVar 1,TVar 2])))) (Rule [] (Var 0)),Func ("Function","both") 2 Public (FuncType (FuncType (TVar 0) (TVar 1)) (FuncType (TCons ("Prelude","(,)") [TVar 0,TVar 0]) (TCons ("Prelude","(,)") [TVar 1,TVar 1]))) (Rule [] (Var 0))] []