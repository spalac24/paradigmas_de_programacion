CurryProg "Random"
 ["Prelude","Time","System"]
 []
 [CFunc ("Random","zfact") 0 Private (CTCons ("Prelude","Int") []) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CLit (CIntc 36969))] []]),
  CFunc ("Random","wfact") 0 Private (CTCons ("Prelude","Int") []) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CLit (CIntc 18000))] []]),
  CFunc ("Random","two16") 0 Private (CTCons ("Prelude","Int") []) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CLit (CIntc 65536))] []]),
  CFunc ("Random","large") 0 Private (CTCons ("Prelude","Int") []) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CLit (CIntc 536870911))] []]),
  CFunc ("Random","nextInt") 1 Public (CFuncType (CTCons ("Prelude","Int") []) (CTCons ("Prelude","[]") [CTCons ("Prelude","Int") []])) (CRules CFlex [CRule [CPVar (0,"seed")] [(CSymbol ("Prelude","success"),CLetDecl [CLocalPat (CPVar (1,"ns")) (CApply (CApply (CApply (CSymbol ("Prelude","if_then_else")) (CApply (CApply (CSymbol ("Prelude","==")) (CVar (0,"seed"))) (CLit (CIntc 0)))) (CLit (CIntc 1))) (CVar (0,"seed"))) [],CLocalFunc (CFunc ("Random","next2") 2 Private (CFuncType (CTCons ("Prelude","Int") []) (CFuncType (CTCons ("Prelude","Int") []) (CTCons ("Prelude","[]") [CTCons ("Prelude","Int") []]))) (CRules CFlex [CRule [CPVar (2,"mw"),CPVar (3,"mz")] [(CSymbol ("Prelude","success"),CLetDecl [CLocalPat (CPVar (4,"mza")) (CApply (CApply (CSymbol ("Prelude","+")) (CApply (CApply (CSymbol ("Prelude","*")) (CSymbol ("Random","zfact"))) (CApply (CApply (CSymbol ("Prelude","mod")) (CVar (3,"mz"))) (CSymbol ("Random","two16"))))) (CApply (CApply (CSymbol ("Prelude","*")) (CVar (3,"mz"))) (CSymbol ("Random","two16")))) [],CLocalPat (CPVar (5,"mwa")) (CApply (CApply (CSymbol ("Prelude","+")) (CApply (CApply (CSymbol ("Prelude","*")) (CSymbol ("Random","wfact"))) (CApply (CApply (CSymbol ("Prelude","mod")) (CVar (2,"mw"))) (CSymbol ("Random","two16"))))) (CApply (CApply (CSymbol ("Prelude","*")) (CVar (2,"mw"))) (CSymbol ("Random","two16")))) [],CLocalPat (CPVar (6,"tmp")) (CApply (CApply (CSymbol ("Prelude","+")) (CApply (CApply (CSymbol ("Prelude","div")) (CVar (4,"mza"))) (CSymbol ("Random","two16")))) (CVar (5,"mwa"))) [],CLocalPat (CPVar (7,"res")) (CApply (CApply (CApply (CSymbol ("Prelude","if_then_else")) (CApply (CApply (CSymbol ("Prelude","<")) (CVar (6,"tmp"))) (CLit (CIntc 0)))) (CApply (CApply (CSymbol ("Prelude","+")) (CVar (6,"tmp"))) (CSymbol ("Random","large")))) (CVar (6,"tmp"))) []] (CApply (CApply (CSymbol ("Prelude",":")) (CVar (7,"res"))) (CApply (CApply (CSymbol ("Random","next2")) (CVar (5,"mwa"))) (CVar (4,"mza")))))] []]))] (CApply (CApply (CSymbol ("Random","next2")) (CVar (1,"ns"))) (CVar (1,"ns"))))] []]),
  CFunc ("Random","nextIntRange") 2 Public (CFuncType (CTCons ("Prelude","Int") []) (CFuncType (CTCons ("Prelude","Int") []) (CTCons ("Prelude","[]") [CTCons ("Prelude","Int") []]))) (CRules CFlex [CRule [CPVar (0,"seed"),CPVar (1,"n")] [(CApply (CApply (CSymbol ("Prelude",">")) (CVar (1,"n"))) (CLit (CIntc 0)),CApply (CApply (CSymbol ("Prelude","map")) (CLambda [CPVar (2,"x0")] (CApply (CApply (CSymbol ("Prelude","mod")) (CVar (2,"x0"))) (CVar (1,"n"))))) (CApply (CSymbol ("Random","nextInt")) (CVar (0,"seed"))))] []]),
  CFunc ("Random","nextBoolean") 1 Public (CFuncType (CTCons ("Prelude","Int") []) (CTCons ("Prelude","[]") [CTCons ("Prelude","Bool") []])) (CRules CFlex [CRule [CPVar (0,"seed")] [(CSymbol ("Prelude","success"),CApply (CApply (CSymbol ("Prelude","map")) (CLambda [CPVar (1,"x0")] (CApply (CApply (CSymbol ("Prelude","/=")) (CVar (1,"x0"))) (CLit (CIntc 0))))) (CApply (CSymbol ("Random","nextInt")) (CVar (0,"seed"))))] []]),
  CFunc ("Random","getRandomSeed") 0 Public (CTCons ("Prelude","IO") [CTCons ("Prelude","Int") []]) (CRules CFlex [CRule [] [(CSymbol ("Prelude","success"),CApply (CApply (CSymbol ("Prelude",">>=")) (CSymbol ("Time","getClockTime"))) (CLambda [CPVar (0,"time")] (CApply (CApply (CSymbol ("Prelude",">>=")) (CSymbol ("System","getCPUTime"))) (CLambda [CPVar (1,"msecs")] (CLetDecl [CLocalPat (CPComb ("Time","CalendarTime") [CPVar (2,"y"),CPVar (3,"mo"),CPVar (4,"d"),CPVar (5,"h"),CPVar (6,"m"),CPVar (7,"s"),CPVar (8,"_")]) (CApply (CSymbol ("Time","toUTCTime")) (CVar (0,"time"))) []] (CApply (CSymbol ("Prelude","return")) (CApply (CApply (CSymbol ("Prelude","mod")) (CApply (CApply (CSymbol ("Prelude","+")) (CApply (CApply (CSymbol ("Prelude","+")) (CApply (CApply (CSymbol ("Prelude","+")) (CApply (CApply (CSymbol ("Prelude","+")) (CVar (2,"y"))) (CVar (3,"mo")))) (CVar (4,"d")))) (CVar (5,"h")))) (CApply (CApply (CSymbol ("Prelude","*")) (CApply (CApply (CSymbol ("Prelude","*")) (CVar (6,"m"))) (CVar (7,"s")))) (CApply (CApply (CSymbol ("Prelude","+")) (CVar (1,"msecs"))) (CLit (CIntc 1)))))) (CSymbol ("Random","two16")))))))))] []])]
 []
