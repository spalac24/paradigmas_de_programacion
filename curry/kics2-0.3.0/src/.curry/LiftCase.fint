Prog "LiftCase" ["AnnotatedFlatCurry","AnnotatedFlatCurryGoodies","FlatCurry","List","Prelude","FiniteMap"] [TypeSyn ("LiftCase","FuncList") Private [] (FuncType (TCons ("Prelude","[]") [TCons ("AnnotatedFlatCurry","AFuncDecl") [TCons ("FlatCurry","TypeExpr") []]]) (TCons ("Prelude","[]") [TCons ("AnnotatedFlatCurry","AFuncDecl") [TCons ("FlatCurry","TypeExpr") []]])),TypeSyn ("LiftCase","TypedVar") Private [] (TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]),TypeSyn ("LiftCase","Result") Private [] (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("AnnotatedFlatCurry","AFuncDecl") [TCons ("FlatCurry","TypeExpr") []]]) (TCons ("Prelude","[]") [TCons ("AnnotatedFlatCurry","AFuncDecl") [TCons ("FlatCurry","TypeExpr") []]]),TCons ("Prelude","Int") [],FuncType (TCons ("Prelude","[]") [TCons ("AnnotatedFlatCurry","AFuncDecl") [TCons ("FlatCurry","TypeExpr") []]]) (TCons ("Prelude","[]") [TCons ("AnnotatedFlatCurry","AFuncDecl") [TCons ("FlatCurry","TypeExpr") []]])]),TypeSyn ("LiftCase","M") Private [0] (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","(,,,)") [TVar 0,TCons ("Prelude","Int") [],FuncType (TCons ("Prelude","[]") [TCons ("AnnotatedFlatCurry","AFuncDecl") [TCons ("FlatCurry","TypeExpr") []]]) (TCons ("Prelude","[]") [TCons ("AnnotatedFlatCurry","AFuncDecl") [TCons ("FlatCurry","TypeExpr") []]]),TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]]]))] [Func ("LiftCase","liftCases") 2 Public (FuncType (TCons ("Prelude","Bool") []) (FuncType (TCons ("AnnotatedFlatCurry","AProg") [TCons ("FlatCurry","TypeExpr") []]) (TCons ("AnnotatedFlatCurry","AProg") [TCons ("FlatCurry","TypeExpr") []]))) (Rule [] (Var 0))] []