Prog "DefaultPolymorphic" ["AFCSubst","AnnotatedFlatCurry","AnnotatedFlatCurryGoodies","FiniteMap","FlatCurry","List","Prelude","State"] [TypeSyn ("DefaultPolymorphic","DPM") Public [0] (FuncType (TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]) (TCons ("Prelude","(,)") [TVar 0,TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]]))] [Func ("DefaultPolymorphic","defaultType") 0 Public (TCons ("FlatCurry","TypeExpr") []) (Rule [] (Comb ConsCall ("FlatCurry","TCons") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude",":") [Lit (Charc  'P'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude",":") [Lit (Charc  'u'),Comb ConsCall ("Prelude",":") [Lit (Charc  'd'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude","[]") []]]]]]]],Comb ConsCall ("Prelude",":") [Lit (Charc  '('),Comb ConsCall ("Prelude",":") [Lit (Charc  ')'),Comb ConsCall ("Prelude","[]") []]]],Comb ConsCall ("Prelude","[]") []])),Func ("DefaultPolymorphic","defaultPolymorphic") 0 Public (FuncType (TCons ("AnnotatedFlatCurry","AProg") [TCons ("FlatCurry","TypeExpr") []]) (TCons ("AnnotatedFlatCurry","AProg") [TCons ("FlatCurry","TypeExpr") []])) (Rule [] (Comb FuncCall ("AnnotatedFlatCurryGoodies","updProgFuncs") [Comb (FuncPartCall 1) ("Prelude","map") [Comb (FuncPartCall 1) ("DefaultPolymorphic","dpFunc") []]])),Func ("DefaultPolymorphic","dpFunc") 1 Public (FuncType (TCons ("AnnotatedFlatCurry","AFuncDecl") [TCons ("FlatCurry","TypeExpr") []]) (TCons ("AnnotatedFlatCurry","AFuncDecl") [TCons ("FlatCurry","TypeExpr") []])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("AnnotatedFlatCurry","AFunc") [2,3,4,5,6]) (Let [(7,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("DefaultPolymorphic","tyVars") [],Var 5]),(8,Comb FuncCall ("State","runState") [Comb FuncCall ("DefaultPolymorphic","dpRule") [Var 6],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("FiniteMap","listToFM") [Comb (FuncPartCall 2) ("Prelude","<") []],Comb FuncCall ("Prelude","zip") [Var 7,Comb FuncCall ("Prelude","map") [Comb (ConsPartCall 1) ("FlatCurry","TVar") [],Var 7]]]]),(9,Comb FuncCall ("DefaultPolymorphic","dpFunc._#selFP2#r'") [Var 8]),(10,Comb FuncCall ("DefaultPolymorphic","dpFunc._#selFP3#sigma") [Var 8])] (Comb FuncCall ("AFCSubst","substFunc") [Var 10,Comb ConsCall ("AnnotatedFlatCurry","AFunc") [Var 2,Var 3,Var 4,Var 5,Var 9]]))])),Func ("DefaultPolymorphic","dpFunc._#selFP2#r'") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("AnnotatedFlatCurry","ARule") [TCons ("FlatCurry","TypeExpr") []],TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]]) (TCons ("AnnotatedFlatCurry","ARule") [TCons ("FlatCurry","TypeExpr") []])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 2)])),Func ("DefaultPolymorphic","dpFunc._#selFP3#sigma") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("AnnotatedFlatCurry","ARule") [TCons ("FlatCurry","TypeExpr") []],TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]]) (TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 3)])),Func ("DefaultPolymorphic","dpRule") 1 Public (FuncType (TCons ("AnnotatedFlatCurry","ARule") [TCons ("FlatCurry","TypeExpr") []]) (FuncType (TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]) (TCons ("Prelude","(,)") [TCons ("AnnotatedFlatCurry","ARule") [TCons ("FlatCurry","TypeExpr") []],TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]]))) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("AnnotatedFlatCurry","ARule") [2,3,4]) (Comb FuncCall ("State","liftS") [Comb (ConsPartCall 1) ("AnnotatedFlatCurry","ARule") [Var 2,Var 3],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("DefaultPolymorphic","dpExpr") [],Var 4]]),Branch (Pattern ("AnnotatedFlatCurry","AExternal") [5,6]) (Comb (FuncPartCall 1) ("State","returnS") [Var 1])])),Func ("DefaultPolymorphic","dpExpr") 0 Public (FuncType (TCons ("AnnotatedFlatCurry","AExpr") [TCons ("FlatCurry","TypeExpr") []]) (FuncType (TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]) (TCons ("Prelude","(,)") [TCons ("AnnotatedFlatCurry","AExpr") [TCons ("FlatCurry","TypeExpr") []],TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]]))) (Rule [] (Comb (FuncPartCall 1) ("AnnotatedFlatCurryGoodies","trExpr") [Comb (FuncPartCall 2) ("DefaultPolymorphic","dpExpr.var.17") [],Comb (FuncPartCall 2) ("DefaultPolymorphic","dpExpr.lit.17") [],Comb (FuncPartCall 4) ("DefaultPolymorphic","dpExpr.cmb.17") [],Comb (FuncPartCall 3) ("DefaultPolymorphic","dpExpr.lat.17") [],Comb (FuncPartCall 3) ("DefaultPolymorphic","dpExpr.fre.17") [],Comb (FuncPartCall 3) ("DefaultPolymorphic","dpExpr.orr.17") [],Comb (FuncPartCall 4) ("DefaultPolymorphic","dpExpr.cse.17") [],Comb (FuncPartCall 2) ("DefaultPolymorphic","dpExpr.bra.17") [],Comb (FuncPartCall 3) ("DefaultPolymorphic","dpExpr.typ.17") []])),Func ("DefaultPolymorphic","dpExpr.var.17") 2 Private (FuncType (TCons ("FlatCurry","TypeExpr") []) (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]) (TCons ("Prelude","(,)") [TCons ("AnnotatedFlatCurry","AExpr") [TCons ("FlatCurry","TypeExpr") []],TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]])))) (Rule [1,2] (Comb FuncCall ("Prelude","$") [Comb (FuncPartCall 1) ("DefaultPolymorphic","default") [Var 1],Comb ConsCall ("AnnotatedFlatCurry","AVar") [Var 1,Var 2]])),Func ("DefaultPolymorphic","dpExpr.lit.17") 2 Private (FuncType (TCons ("FlatCurry","TypeExpr") []) (FuncType (TCons ("FlatCurry","Literal") []) (FuncType (TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]) (TCons ("Prelude","(,)") [TCons ("AnnotatedFlatCurry","AExpr") [TCons ("FlatCurry","TypeExpr") []],TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]])))) (Rule [1,2] (Comb FuncCall ("Prelude","$") [Comb (FuncPartCall 1) ("DefaultPolymorphic","default") [Var 1],Comb ConsCall ("AnnotatedFlatCurry","ALit") [Var 1,Var 2]])),Func ("DefaultPolymorphic","dpExpr.cmb.17") 4 Private (FuncType (TCons ("FlatCurry","TypeExpr") []) (FuncType (TCons ("FlatCurry","CombType") []) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("FlatCurry","TypeExpr") []]) (FuncType (TCons ("Prelude","[]") [FuncType (TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]) (TCons ("Prelude","(,)") [TCons ("AnnotatedFlatCurry","AExpr") [TCons ("FlatCurry","TypeExpr") []],TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]])]) (FuncType (TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]) (TCons ("Prelude","(,)") [TCons ("AnnotatedFlatCurry","AExpr") [TCons ("FlatCurry","TypeExpr") []],TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]])))))) (Rule [1,2,3,4] (Comb (FuncPartCall 1) ("State","bindS") [Comb FuncCall ("State","liftS") [Comb (ConsPartCall 1) ("AnnotatedFlatCurry","AComb") [Var 1,Var 2,Var 3],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("State","sequenceS") [],Var 4]],Comb (FuncPartCall 1) ("DefaultPolymorphic","default") [Var 1]])),Func ("DefaultPolymorphic","dpExpr.lat.17") 3 Private (FuncType (TCons ("FlatCurry","TypeExpr") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],FuncType (TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]) (TCons ("Prelude","(,)") [TCons ("AnnotatedFlatCurry","AExpr") [TCons ("FlatCurry","TypeExpr") []],TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]])]]) (FuncType (FuncType (TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]) (TCons ("Prelude","(,)") [TCons ("AnnotatedFlatCurry","AExpr") [TCons ("FlatCurry","TypeExpr") []],TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]])) (FuncType (TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]) (TCons ("Prelude","(,)") [TCons ("AnnotatedFlatCurry","AExpr") [TCons ("FlatCurry","TypeExpr") []],TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]]))))) (Rule [1,2,3] (Let [(4,Comb FuncCall ("Prelude","unzip") [Var 2]),(5,Comb FuncCall ("DefaultPolymorphic","dpExpr.lat.17._#selFP5#vs") [Var 4]),(6,Comb FuncCall ("DefaultPolymorphic","dpExpr.lat.17._#selFP6#es") [Var 4])] (Comb (FuncPartCall 1) ("State","bindS") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("State","sequenceS") [],Var 6],Comb (FuncPartCall 1) ("DefaultPolymorphic","dpExpr.lat.17._#lambda1") [Var 3,Var 1,Var 5]]))),Func ("DefaultPolymorphic","dpExpr.lat.17._#selFP5#vs") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Int") []],TCons ("Prelude","[]") [FuncType (TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]) (TCons ("Prelude","(,)") [TCons ("AnnotatedFlatCurry","AExpr") [TCons ("FlatCurry","TypeExpr") []],TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]])]]) (TCons ("Prelude","[]") [TCons ("Prelude","Int") []])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 2)])),Func ("DefaultPolymorphic","dpExpr.lat.17._#selFP6#es") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Int") []],TCons ("Prelude","[]") [FuncType (TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]) (TCons ("Prelude","(,)") [TCons ("AnnotatedFlatCurry","AExpr") [TCons ("FlatCurry","TypeExpr") []],TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]])]]) (TCons ("Prelude","[]") [FuncType (TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]) (TCons ("Prelude","(,)") [TCons ("AnnotatedFlatCurry","AExpr") [TCons ("FlatCurry","TypeExpr") []],TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]])])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 3)])),Func ("DefaultPolymorphic","dpExpr.lat.17._#lambda1") 4 Private (FuncType (FuncType (TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]) (TCons ("Prelude","(,)") [TCons ("AnnotatedFlatCurry","AExpr") [TCons ("FlatCurry","TypeExpr") []],TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]])) (FuncType (TCons ("FlatCurry","TypeExpr") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Int") []]) (FuncType (TCons ("Prelude","[]") [TCons ("AnnotatedFlatCurry","AExpr") [TCons ("FlatCurry","TypeExpr") []]]) (FuncType (TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]) (TCons ("Prelude","(,)") [TCons ("AnnotatedFlatCurry","AExpr") [TCons ("FlatCurry","TypeExpr") []],TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]])))))) (Rule [1,2,3,4] (Comb (FuncPartCall 1) ("State","bindS") [Var 1,Comb (FuncPartCall 1) ("DefaultPolymorphic","dpExpr.lat.17._#lambda1._#lambda2") [Var 4,Var 2,Var 3]])),Func ("DefaultPolymorphic","dpExpr.lat.17._#lambda1._#lambda2") 4 Private (FuncType (TCons ("Prelude","[]") [TCons ("AnnotatedFlatCurry","AExpr") [TCons ("FlatCurry","TypeExpr") []]]) (FuncType (TCons ("FlatCurry","TypeExpr") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Int") []]) (FuncType (TCons ("AnnotatedFlatCurry","AExpr") [TCons ("FlatCurry","TypeExpr") []]) (FuncType (TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]) (TCons ("Prelude","(,)") [TCons ("AnnotatedFlatCurry","AExpr") [TCons ("FlatCurry","TypeExpr") []],TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]])))))) (Rule [1,2,3,4] (Comb FuncCall ("Prelude","$") [Comb (FuncPartCall 1) ("DefaultPolymorphic","default") [Var 2],Comb ConsCall ("AnnotatedFlatCurry","ALet") [Var 2,Comb FuncCall ("Prelude","zip") [Var 3,Var 1],Var 4]])),Func ("DefaultPolymorphic","dpExpr.fre.17") 3 Private (FuncType (TCons ("FlatCurry","TypeExpr") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]]) (FuncType (FuncType (TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]) (TCons ("Prelude","(,)") [TCons ("AnnotatedFlatCurry","AExpr") [TCons ("FlatCurry","TypeExpr") []],TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]])) (FuncType (TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]) (TCons ("Prelude","(,)") [TCons ("AnnotatedFlatCurry","AExpr") [TCons ("FlatCurry","TypeExpr") []],TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]]))))) (Rule [1,2,3] (Comb (FuncPartCall 1) ("State","bindS") [Var 3,Comb FuncCall ("Prelude",".") [Comb (FuncPartCall 1) ("DefaultPolymorphic","default") [Var 1],Comb (ConsPartCall 1) ("AnnotatedFlatCurry","AFree") [Var 1,Var 2]]])),Func ("DefaultPolymorphic","dpExpr.orr.17") 3 Private (FuncType (TCons ("FlatCurry","TypeExpr") []) (FuncType (FuncType (TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]) (TCons ("Prelude","(,)") [TCons ("AnnotatedFlatCurry","AExpr") [TCons ("FlatCurry","TypeExpr") []],TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]])) (FuncType (FuncType (TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]) (TCons ("Prelude","(,)") [TCons ("AnnotatedFlatCurry","AExpr") [TCons ("FlatCurry","TypeExpr") []],TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]])) (FuncType (TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]) (TCons ("Prelude","(,)") [TCons ("AnnotatedFlatCurry","AExpr") [TCons ("FlatCurry","TypeExpr") []],TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]]))))) (Rule [1,2,3] (Comb (FuncPartCall 1) ("State","bindS") [Comb FuncCall ("State","liftS2") [Comb (ConsPartCall 2) ("AnnotatedFlatCurry","AOr") [Var 1],Var 2,Var 3],Comb (FuncPartCall 1) ("DefaultPolymorphic","default") [Var 1]])),Func ("DefaultPolymorphic","dpExpr.cse.17") 4 Private (FuncType (TVar 0) (FuncType (TCons ("FlatCurry","CaseType") []) (FuncType (FuncType (TVar 1) (TCons ("Prelude","(,)") [TCons ("AnnotatedFlatCurry","AExpr") [TVar 0],TVar 1])) (FuncType (TCons ("Prelude","[]") [FuncType (TVar 1) (TCons ("Prelude","(,)") [TCons ("AnnotatedFlatCurry","ABranchExpr") [TVar 0],TVar 1])]) (FuncType (TVar 1) (TCons ("Prelude","(,)") [TCons ("AnnotatedFlatCurry","AExpr") [TVar 0],TVar 1])))))) (Rule [1,2,3,4] (Comb FuncCall ("State","liftS2") [Comb (ConsPartCall 2) ("AnnotatedFlatCurry","ACase") [Var 1,Var 2],Var 3,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("State","sequenceS") [],Var 4]])),Func ("DefaultPolymorphic","dpExpr.bra.17") 2 Private (FuncType (TCons ("AnnotatedFlatCurry","APattern") [TVar 0]) (FuncType (FuncType (TVar 1) (TCons ("Prelude","(,)") [TCons ("AnnotatedFlatCurry","AExpr") [TVar 0],TVar 1])) (FuncType (TVar 1) (TCons ("Prelude","(,)") [TCons ("AnnotatedFlatCurry","ABranchExpr") [TVar 0],TVar 1])))) (Rule [1,2] (Comb FuncCall ("State","liftS") [Comb (ConsPartCall 1) ("AnnotatedFlatCurry","ABranch") [Var 1],Var 2])),Func ("DefaultPolymorphic","dpExpr.typ.17") 3 Private (FuncType (TCons ("FlatCurry","TypeExpr") []) (FuncType (FuncType (TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]) (TCons ("Prelude","(,)") [TCons ("AnnotatedFlatCurry","AExpr") [TCons ("FlatCurry","TypeExpr") []],TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]])) (FuncType (TCons ("FlatCurry","TypeExpr") []) (FuncType (TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]) (TCons ("Prelude","(,)") [TCons ("AnnotatedFlatCurry","AExpr") [TCons ("FlatCurry","TypeExpr") []],TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]]))))) (Rule [1,2,3] (Comb (FuncPartCall 1) ("State","bindS") [Comb FuncCall ("State","liftS") [Comb (FuncPartCall 1) ("DefaultPolymorphic","dpExpr.typ.17._#lambda3") [Var 1,Var 3],Var 2],Comb (FuncPartCall 1) ("DefaultPolymorphic","default") [Var 1]])),Func ("DefaultPolymorphic","dpExpr.typ.17._#lambda3") 3 Private (FuncType (TCons ("FlatCurry","TypeExpr") []) (FuncType (TCons ("FlatCurry","TypeExpr") []) (FuncType (TCons ("AnnotatedFlatCurry","AExpr") [TCons ("FlatCurry","TypeExpr") []]) (TCons ("AnnotatedFlatCurry","AExpr") [TCons ("FlatCurry","TypeExpr") []])))) (Rule [1,2,3] (Comb ConsCall ("AnnotatedFlatCurry","ATyped") [Var 1,Var 3,Var 2])),Func ("DefaultPolymorphic","default") 2 Public (FuncType (TCons ("FlatCurry","TypeExpr") []) (FuncType (TCons ("AnnotatedFlatCurry","AExpr") [TCons ("FlatCurry","TypeExpr") []]) (FuncType (TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]) (TCons ("Prelude","(,)") [TCons ("AnnotatedFlatCurry","AExpr") [TCons ("FlatCurry","TypeExpr") []],TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]])))) (Rule [1,2] (Let [(3,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("DefaultPolymorphic","tyVars") [],Var 1])] (Comb (FuncPartCall 1) ("State","bindS") [Comb (FuncPartCall 1) ("State","getS") [],Comb (FuncPartCall 1) ("DefaultPolymorphic","default._#lambda4") [Var 2,Var 1,Var 3]]))),Func ("DefaultPolymorphic","default._#lambda4") 4 Private (FuncType (TCons ("AnnotatedFlatCurry","AExpr") [TCons ("FlatCurry","TypeExpr") []]) (FuncType (TCons ("FlatCurry","TypeExpr") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Int") []]) (FuncType (TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]) (FuncType (TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]) (TCons ("Prelude","(,)") [TCons ("AnnotatedFlatCurry","AExpr") [TCons ("FlatCurry","TypeExpr") []],TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]])))))) (Rule [1,2,3,4] (Let [(5,Comb FuncCall ("Prelude","filter") [Comb (FuncPartCall 1) ("DefaultPolymorphic","default._#lambda4._#lambda5") [Var 4],Var 3])] (Case  Rigid (Comb FuncCall ("Prelude","null") [Var 5]) [Branch (Pattern ("Prelude","True") []) (Comb (FuncPartCall 1) ("State","returnS") [Var 1]),Branch (Pattern ("Prelude","False") []) (Let [(6,Comb FuncCall ("Prelude","$") [Comb FuncCall ("FiniteMap","listToFM") [Comb (FuncPartCall 2) ("Prelude","<") []],Comb FuncCall ("Prelude","zip") [Var 5,Comb FuncCall ("Prelude","repeat") [Comb FuncCall ("DefaultPolymorphic","defaultType") []]]])] (Comb FuncCall ("State","bindS_") [Comb (FuncPartCall 1) ("State","modifyS") [Comb (FuncPartCall 1) ("FiniteMap","plusFM") [Var 6]],Comb (FuncPartCall 1) ("State","returnS") [Comb ConsCall ("AnnotatedFlatCurry","ATyped") [Var 2,Var 1,Var 2]]]))]))),Func ("DefaultPolymorphic","default._#lambda4._#lambda5") 2 Private (FuncType (TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]) (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Comb FuncCall ("Prelude","not") [Comb FuncCall ("FiniteMap","elemFM") [Var 2,Var 1]])),Func ("DefaultPolymorphic","tyVars") 0 Public (FuncType (TCons ("FlatCurry","TypeExpr") []) (TCons ("Prelude","[]") [TCons ("Prelude","Int") []])) (Rule [] (Comb FuncCall ("Prelude",".") [Comb (FuncPartCall 1) ("List","nub") [],Comb (FuncPartCall 1) ("AnnotatedFlatCurryGoodies","trTypeExpr") [Comb (FuncPartCall 1) ("Prelude","flip") [Comb (ConsPartCall 2) ("Prelude",":") [],Comb ConsCall ("Prelude","[]") []],Comb (FuncPartCall 1) ("DefaultPolymorphic","tyVars._#lambda6") [],Comb (FuncPartCall 2) ("Prelude","++") []]])),Func ("DefaultPolymorphic","tyVars._#lambda6") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TVar 137]]) (TCons ("Prelude","[]") [TVar 137]))) (Rule [1] (Comb (FuncPartCall 1) ("Prelude","concat") []))] []