Prog "AFCSubst" ["AnnotatedFlatCurry","FiniteMap","FlatCurry","Prelude"] [TypeSyn ("AFCSubst","AFCSubst") Public [] (TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []])] [Func ("AFCSubst","showAFCSubst") 0 Public (FuncType (TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Comb FuncCall ("Prelude",".") [Comb (FuncPartCall 1) ("Prelude","unlines") [],Comb FuncCall ("Prelude",".") [Comb (FuncPartCall 1) ("Prelude","map") [Comb (FuncPartCall 1) ("AFCSubst","showAFCSubst.showOne.2") []],Comb (FuncPartCall 1) ("FiniteMap","fmToList") []]])),Func ("AFCSubst","showAFCSubst.showOne.2") 1 Private (FuncType (TCons ("Prelude","(,)") [TVar 0,TVar 1]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Comb FuncCall ("Prelude","++") [Comb FuncCall ("Prelude","show") [Var 2],Comb FuncCall ("Prelude","++") [Comb ConsCall ("Prelude",":") [Lit (Charc  ' '),Comb ConsCall ("Prelude",":") [Lit (Charc  '-'),Comb ConsCall ("Prelude",":") [Lit (Charc  '>'),Comb ConsCall ("Prelude",":") [Lit (Charc  ' '),Comb ConsCall ("Prelude","[]") []]]]],Comb FuncCall ("Prelude","show") [Var 3]]])])),Func ("AFCSubst","emptyAFCSubst") 0 Public (TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]) (Rule [] (Comb FuncCall ("FiniteMap","emptyFM") [Comb (FuncPartCall 2) ("Prelude","<") []])),Func ("AFCSubst","lookupAFCSubst") 0 Public (FuncType (TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]) (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","Maybe") [TCons ("FlatCurry","TypeExpr") []]))) (Rule [] (Comb (FuncPartCall 2) ("FiniteMap","lookupFM") [])),Func ("AFCSubst","substFunc") 2 Public (FuncType (TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]) (FuncType (TCons ("AnnotatedFlatCurry","AFuncDecl") [TCons ("FlatCurry","TypeExpr") []]) (TCons ("AnnotatedFlatCurry","AFuncDecl") [TCons ("FlatCurry","TypeExpr") []]))) (Rule [1,2] (Case  Flex (Var 2) [Branch (Pattern ("AnnotatedFlatCurry","AFunc") [3,4,5,6,7]) (Comb ConsCall ("AnnotatedFlatCurry","AFunc") [Var 3,Var 4,Var 5,Comb FuncCall ("AFCSubst","subst") [Var 1,Var 6],Comb FuncCall ("AFCSubst","substRule") [Var 1,Var 7]])])),Func ("AFCSubst","substRule") 2 Public (FuncType (TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]) (FuncType (TCons ("AnnotatedFlatCurry","ARule") [TCons ("FlatCurry","TypeExpr") []]) (TCons ("AnnotatedFlatCurry","ARule") [TCons ("FlatCurry","TypeExpr") []]))) (Rule [1,2] (Case  Flex (Var 2) [Branch (Pattern ("AnnotatedFlatCurry","ARule") [3,4,5]) (Comb ConsCall ("AnnotatedFlatCurry","ARule") [Comb FuncCall ("AFCSubst","subst") [Var 1,Var 3],Comb FuncCall ("Prelude","map") [Comb (FuncPartCall 1) ("AFCSubst","substSnd") [Var 1],Var 4],Comb FuncCall ("AFCSubst","substExpr") [Var 1,Var 5]]),Branch (Pattern ("AnnotatedFlatCurry","AExternal") [6,7]) (Comb ConsCall ("AnnotatedFlatCurry","AExternal") [Comb FuncCall ("AFCSubst","subst") [Var 1,Var 6],Var 7])])),Func ("AFCSubst","substExpr") 2 Public (FuncType (TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]) (FuncType (TCons ("AnnotatedFlatCurry","AExpr") [TCons ("FlatCurry","TypeExpr") []]) (TCons ("AnnotatedFlatCurry","AExpr") [TCons ("FlatCurry","TypeExpr") []]))) (Rule [1,2] (Case  Flex (Var 2) [Branch (Pattern ("AnnotatedFlatCurry","AComb") [3,4,5,6]) (Comb ConsCall ("AnnotatedFlatCurry","AComb") [Comb FuncCall ("AFCSubst","subst") [Var 1,Var 3],Var 4,Comb FuncCall ("AFCSubst","substSnd") [Var 1,Var 5],Comb FuncCall ("Prelude","map") [Comb (FuncPartCall 1) ("AFCSubst","substExpr") [Var 1],Var 6]]),Branch (Pattern ("AnnotatedFlatCurry","AVar") [7,8]) (Comb ConsCall ("AnnotatedFlatCurry","AVar") [Comb FuncCall ("AFCSubst","subst") [Var 1,Var 7],Var 8]),Branch (Pattern ("AnnotatedFlatCurry","ACase") [9,10,11,12]) (Comb ConsCall ("AnnotatedFlatCurry","ACase") [Comb FuncCall ("AFCSubst","subst") [Var 1,Var 9],Var 10,Comb FuncCall ("AFCSubst","substExpr") [Var 1,Var 11],Comb FuncCall ("Prelude","map") [Comb (FuncPartCall 1) ("AFCSubst","substBranch") [Var 1],Var 12]]),Branch (Pattern ("AnnotatedFlatCurry","ALit") [13,14]) (Comb ConsCall ("AnnotatedFlatCurry","ALit") [Comb FuncCall ("AFCSubst","subst") [Var 1,Var 13],Var 14]),Branch (Pattern ("AnnotatedFlatCurry","AOr") [15,16,17]) (Comb ConsCall ("AnnotatedFlatCurry","AOr") [Comb FuncCall ("AFCSubst","subst") [Var 1,Var 15],Comb FuncCall ("AFCSubst","substExpr") [Var 1,Var 16],Comb FuncCall ("AFCSubst","substExpr") [Var 1,Var 17]]),Branch (Pattern ("AnnotatedFlatCurry","ALet") [18,19,20]) (Comb ConsCall ("AnnotatedFlatCurry","ALet") [Comb FuncCall ("AFCSubst","subst") [Var 1,Var 18],Comb FuncCall ("Prelude","map") [Comb (FuncPartCall 1) ("AFCSubst","substExpr.substBinding.26") [Var 1],Var 19],Comb FuncCall ("AFCSubst","substExpr") [Var 1,Var 20]]),Branch (Pattern ("AnnotatedFlatCurry","AFree") [21,22,23]) (Comb ConsCall ("AnnotatedFlatCurry","AFree") [Comb FuncCall ("AFCSubst","subst") [Var 1,Var 21],Comb FuncCall ("Prelude","map") [Comb (FuncPartCall 1) ("AFCSubst","substSnd") [Var 1],Var 22],Comb FuncCall ("AFCSubst","substExpr") [Var 1,Var 23]]),Branch (Pattern ("AnnotatedFlatCurry","ATyped") [24,25,26]) (Comb ConsCall ("AnnotatedFlatCurry","ATyped") [Comb FuncCall ("AFCSubst","subst") [Var 1,Var 24],Comb FuncCall ("AFCSubst","substExpr") [Var 1,Var 25],Comb FuncCall ("AFCSubst","subst") [Var 1,Var 26]])])),Func ("AFCSubst","substExpr.substBinding.26") 2 Private (FuncType (TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]) (FuncType (TCons ("Prelude","(,)") [TVar 0,TCons ("AnnotatedFlatCurry","AExpr") [TCons ("FlatCurry","TypeExpr") []]]) (TCons ("Prelude","(,)") [TVar 0,TCons ("AnnotatedFlatCurry","AExpr") [TCons ("FlatCurry","TypeExpr") []]]))) (Rule [1,2] (Case  Flex (Var 2) [Branch (Pattern ("Prelude","(,)") [3,4]) (Comb ConsCall ("Prelude","(,)") [Var 3,Comb FuncCall ("AFCSubst","substExpr") [Var 1,Var 4]])])),Func ("AFCSubst","substSnd") 2 Public (FuncType (TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]) (FuncType (TCons ("Prelude","(,)") [TVar 0,TCons ("FlatCurry","TypeExpr") []]) (TCons ("Prelude","(,)") [TVar 0,TCons ("FlatCurry","TypeExpr") []]))) (Rule [1,2] (Case  Flex (Var 2) [Branch (Pattern ("Prelude","(,)") [3,4]) (Comb ConsCall ("Prelude","(,)") [Var 3,Comb FuncCall ("AFCSubst","subst") [Var 1,Var 4]])])),Func ("AFCSubst","substBranch") 2 Public (FuncType (TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]) (FuncType (TCons ("AnnotatedFlatCurry","ABranchExpr") [TCons ("FlatCurry","TypeExpr") []]) (TCons ("AnnotatedFlatCurry","ABranchExpr") [TCons ("FlatCurry","TypeExpr") []]))) (Rule [1,2] (Case  Flex (Var 2) [Branch (Pattern ("AnnotatedFlatCurry","ABranch") [3,4]) (Comb ConsCall ("AnnotatedFlatCurry","ABranch") [Comb FuncCall ("AFCSubst","substPattern") [Var 1,Var 3],Comb FuncCall ("AFCSubst","substExpr") [Var 1,Var 4]])])),Func ("AFCSubst","substPattern") 2 Public (FuncType (TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]) (FuncType (TCons ("AnnotatedFlatCurry","APattern") [TCons ("FlatCurry","TypeExpr") []]) (TCons ("AnnotatedFlatCurry","APattern") [TCons ("FlatCurry","TypeExpr") []]))) (Rule [1,2] (Case  Flex (Var 2) [Branch (Pattern ("AnnotatedFlatCurry","APattern") [3,4,5]) (Comb ConsCall ("AnnotatedFlatCurry","APattern") [Comb FuncCall ("AFCSubst","subst") [Var 1,Var 3],Comb FuncCall ("AFCSubst","substSnd") [Var 1,Var 4],Comb FuncCall ("Prelude","map") [Comb (FuncPartCall 1) ("AFCSubst","substSnd") [Var 1],Var 5]]),Branch (Pattern ("AnnotatedFlatCurry","ALPattern") [6,7]) (Comb ConsCall ("AnnotatedFlatCurry","ALPattern") [Comb FuncCall ("AFCSubst","subst") [Var 1,Var 6],Var 7])])),Func ("AFCSubst","subst") 2 Public (FuncType (TCons ("FiniteMap","FM") [TCons ("Prelude","Int") [],TCons ("FlatCurry","TypeExpr") []]) (FuncType (TCons ("FlatCurry","TypeExpr") []) (TCons ("FlatCurry","TypeExpr") []))) (Rule [1,2] (Case  Flex (Var 2) [Branch (Pattern ("FlatCurry","TVar") [3]) (Comb FuncCall ("Prelude","maybe") [Var 2,Comb (FuncPartCall 1) ("Prelude","id") [],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("AFCSubst","lookupAFCSubst") [],Var 1],Var 3]]),Branch (Pattern ("FlatCurry","TCons") [4,5]) (Comb ConsCall ("FlatCurry","TCons") [Var 4,Comb FuncCall ("Prelude","map") [Comb (FuncPartCall 1) ("AFCSubst","subst") [Var 1],Var 5]]),Branch (Pattern ("FlatCurry","FuncType") [6,7]) (Comb ConsCall ("FlatCurry","FuncType") [Comb FuncCall ("AFCSubst","subst") [Var 1,Var 6],Comb FuncCall ("AFCSubst","subst") [Var 1,Var 7]])]))] []