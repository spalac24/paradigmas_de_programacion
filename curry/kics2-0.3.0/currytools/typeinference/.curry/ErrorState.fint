Prog "ErrorState" ["Prelude"] [TypeSyn ("ErrorState","ES") Public [0,1,2] (FuncType (TVar 1) (TCons ("Prelude","Either") [TVar 0,TCons ("Prelude","(,)") [TVar 2,TVar 1]]))] [Func ("ErrorState","evalES") 2 Public (FuncType (FuncType (TVar 0) (TCons ("Prelude","Either") [TVar 1,TCons ("Prelude","(,)") [TVar 2,TVar 0]])) (FuncType (TVar 0) (TCons ("Prelude","Either") [TVar 1,TVar 2]))) (Rule [] (Var 0)),Func ("ErrorState","returnES") 2 Public (FuncType (TVar 0) (FuncType (TVar 1) (TCons ("Prelude","Either") [TVar 2,TCons ("Prelude","(,)") [TVar 0,TVar 1]]))) (Rule [] (Var 0)),Func ("ErrorState",">+=") 3 Public (FuncType (FuncType (TVar 0) (TCons ("Prelude","Either") [TVar 1,TCons ("Prelude","(,)") [TVar 2,TVar 0]])) (FuncType (FuncType (TVar 2) (FuncType (TVar 0) (TCons ("Prelude","Either") [TVar 1,TCons ("Prelude","(,)") [TVar 3,TVar 0]]))) (FuncType (TVar 0) (TCons ("Prelude","Either") [TVar 1,TCons ("Prelude","(,)") [TVar 3,TVar 0]])))) (Rule [] (Var 0)),Func ("ErrorState",">+") 2 Public (FuncType (FuncType (TVar 0) (TCons ("Prelude","Either") [TVar 1,TCons ("Prelude","(,)") [TVar 2,TVar 0]])) (FuncType (FuncType (TVar 0) (TCons ("Prelude","Either") [TVar 1,TCons ("Prelude","(,)") [TVar 3,TVar 0]])) (FuncType (TVar 0) (TCons ("Prelude","Either") [TVar 1,TCons ("Prelude","(,)") [TVar 3,TVar 0]])))) (Rule [] (Var 0)),Func ("ErrorState","failES") 2 Public (FuncType (TVar 0) (FuncType (TVar 1) (TCons ("Prelude","Either") [TVar 0,TCons ("Prelude","(,)") [TVar 2,TVar 1]]))) (Rule [] (Var 0)),Func ("ErrorState","gets") 1 Public (FuncType (TVar 0) (TCons ("Prelude","Either") [TVar 1,TCons ("Prelude","(,)") [TVar 0,TVar 0]])) (Rule [] (Var 0)),Func ("ErrorState","puts") 2 Public (FuncType (TVar 0) (FuncType (TVar 0) (TCons ("Prelude","Either") [TVar 1,TCons ("Prelude","(,)") [TCons ("Prelude","()") [],TVar 0]]))) (Rule [] (Var 0)),Func ("ErrorState","modify") 2 Public (FuncType (FuncType (TVar 0) (TVar 0)) (FuncType (TVar 0) (TCons ("Prelude","Either") [TVar 1,TCons ("Prelude","(,)") [TCons ("Prelude","()") [],TVar 0]]))) (Rule [] (Var 0)),Func ("ErrorState","liftES") 2 Public (FuncType (FuncType (TVar 0) (TVar 1)) (FuncType (FuncType (TVar 2) (TCons ("Prelude","Either") [TVar 3,TCons ("Prelude","(,)") [TVar 0,TVar 2]])) (FuncType (TVar 2) (TCons ("Prelude","Either") [TVar 3,TCons ("Prelude","(,)") [TVar 1,TVar 2]])))) (Rule [] (Var 0)),Func ("ErrorState","liftES2") 3 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (TVar 2))) (FuncType (FuncType (TVar 3) (TCons ("Prelude","Either") [TVar 4,TCons ("Prelude","(,)") [TVar 0,TVar 3]])) (FuncType (FuncType (TVar 3) (TCons ("Prelude","Either") [TVar 4,TCons ("Prelude","(,)") [TVar 1,TVar 3]])) (FuncType (TVar 3) (TCons ("Prelude","Either") [TVar 4,TCons ("Prelude","(,)") [TVar 2,TVar 3]]))))) (Rule [] (Var 0)),Func ("ErrorState","liftES3") 4 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (FuncType (TVar 2) (TVar 3)))) (FuncType (FuncType (TVar 4) (TCons ("Prelude","Either") [TVar 5,TCons ("Prelude","(,)") [TVar 0,TVar 4]])) (FuncType (FuncType (TVar 4) (TCons ("Prelude","Either") [TVar 5,TCons ("Prelude","(,)") [TVar 1,TVar 4]])) (FuncType (FuncType (TVar 4) (TCons ("Prelude","Either") [TVar 5,TCons ("Prelude","(,)") [TVar 2,TVar 4]])) (FuncType (TVar 4) (TCons ("Prelude","Either") [TVar 5,TCons ("Prelude","(,)") [TVar 3,TVar 4]])))))) (Rule [] (Var 0)),Func ("ErrorState","mapES") 2 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (TCons ("Prelude","Either") [TVar 2,TCons ("Prelude","(,)") [TVar 3,TVar 1]]))) (FuncType (TCons ("Prelude","[]") [TVar 0]) (FuncType (TVar 1) (TCons ("Prelude","Either") [TVar 2,TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TVar 3],TVar 1]])))) (Rule [] (Var 0)),Func ("ErrorState","concatMapES") 2 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (TCons ("Prelude","Either") [TVar 2,TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TVar 3],TVar 1]]))) (FuncType (TCons ("Prelude","[]") [TVar 0]) (FuncType (TVar 1) (TCons ("Prelude","Either") [TVar 2,TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TVar 3],TVar 1]])))) (Rule [] (Var 0)),Func ("ErrorState","mapAccumES") 3 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (FuncType (TVar 2) (TCons ("Prelude","Either") [TVar 3,TCons ("Prelude","(,)") [TCons ("Prelude","(,)") [TVar 0,TVar 4],TVar 2]])))) (FuncType (TVar 0) (FuncType (TCons ("Prelude","[]") [TVar 1]) (FuncType (TVar 2) (TCons ("Prelude","Either") [TVar 3,TCons ("Prelude","(,)") [TCons ("Prelude","(,)") [TVar 0,TCons ("Prelude","[]") [TVar 4]],TVar 2]]))))) (Rule [] (Var 0))] []