Prog "CurryTest" ["Assertion","Directory","Distribution","FileGoodies","FlatCurry","GUI","IO","IOExts","List","Prelude","Read","ReadShowTerm","Socket","System"] [] [Func ("CurryTest","main") 0 Public (TCons ("Prelude","IO") [TCons ("Prelude","()") []]) (Rule [] (Var 0)),Func ("CurryTest","forwardMessages") 1 Public (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])) (Rule [] (Var 0)),Func ("CurryTest","terminateForwardMessages") 1 Public (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])) (Rule [] (Var 0)),Func ("CurryTest","startGUI") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])) (Rule [] (Var 0)),Func ("CurryTest","TextEditVScroll") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("GUI","ConfItem") []]) (TCons ("GUI","Widget") [])) (Rule [] (Var 0)),Func ("CurryTest","addModule") 2 Public (FuncType (TCons ("IOExts","IORef") [TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("Prelude","[]") [TVar 0]]]) (FuncType (TVar 0) (TCons ("Prelude","IO") [TCons ("Prelude","()") []]))) (Rule [] (Var 0)),Func ("CurryTest","deleteModules") 1 Public (FuncType (TCons ("IOExts","IORef") [TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("Prelude","[]") [TVar 0]]]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])) (Rule [] (Var 0)),Func ("CurryTest","getModules") 1 Public (FuncType (TCons ("IOExts","IORef") [TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]]) (TCons ("Prelude","IO") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]])) (Rule [] (Var 0)),Func ("CurryTest","initModuleIndex") 1 Public (FuncType (TCons ("IOExts","IORef") [TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TVar 0]]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])) (Rule [] (Var 0)),Func ("CurryTest","getNextTestModule") 1 Public (FuncType (TCons ("IOExts","IORef") [TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("Prelude","[]") [TVar 0]]]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TVar 0]])) (Rule [] (Var 0)),Func ("CurryTest","getCurrentTestModule") 1 Public (FuncType (TCons ("IOExts","IORef") [TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("Prelude","[]") [TVar 0]]]) (TCons ("Prelude","IO") [TVar 0])) (Rule [] (Var 0)),Func ("CurryTest","protocolGUI") 3 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("IOExts","IORef") [TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]]) (TCons ("Prelude","(,)") [TCons ("GUI","Widget") [],TCons ("Prelude","[]") [FuncType (TCons ("IO","Handle") []) (FuncType (TCons ("GUI","GuiPort") []) (TCons ("Prelude","IO") [TCons ("Prelude","[]") [TVar 0]]))]])))) (Rule [] (Var 0)),Func ("CurryTest","curryFileTypes") 0 Public (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]) (Rule [] (Var 0)),Func ("CurryTest","incrText") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Var 0)),Func ("CurryTest","testModule") 3 Public (FuncType (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TVar 0])) (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Int") []])))) (Rule [] (Var 0)),Func ("CurryTest","testModuleIfPossible") 4 Public (FuncType (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TVar 0])) (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","Either") [TCons ("FlatCurry","Prog") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (TCons ("Prelude","IO") [TCons ("Prelude","Int") []]))))) (Rule [] (Var 0)),Func ("CurryTest","execTestFunctions") 4 Public (FuncType (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TVar 0])) (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (TCons ("Prelude","IO") [TCons ("Prelude","Int") []]))))) (Rule [] (Var 0)),Func ("CurryTest","getTestFunctionNames") 1 Public (FuncType (TCons ("FlatCurry","Prog") []) (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]])) (Rule [] (Var 0)),Func ("CurryTest","hasAssertType") 1 Public (FuncType (TCons ("FlatCurry","FuncDecl") []) (TCons ("Prelude","Bool") [])) (Rule [] (Var 0)),Func ("CurryTest","tryReadFlatCurry") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Either") [TCons ("FlatCurry","Prog") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]])) (Rule [] (Var 0))] []