#!/bin/sh
cleancurry -r
cat << EOM | ../bin/tastecurry
opt.

read rev.
append([1,2],[3,4]).
rev([1,2,3,4,5,6,7,8,9,10]).

read higher.
g1.
g2.
g3.
g4.
g5.

read quicksort.
qsort([2,3,1,0]).

read qsortlet.
qsort([2,3,1,0]).

read inflists.
goal1.
goal2.
goal3.

read family_rel.
father('John',Child).
grandfather(G,C).

read family_fun.
father(Child)='John'.
grandfather(G,C).

read horseman.
horseman(M,H,'S'('S'('S'('O'))),'S'('S'('S'('S'('S'('S'('S'('S'('O'))))))))).
horseman(M,H,int2nat(8),int2nat(20)).
horseman(M,H,'S'('S'('O')),F).

read first.
first('S'('S'('O')),from('O')).
{first(X,from(Y))=['O']}.

read member.
goal2(X).

read rigidadd.
trace.
goal.
notrace.

time.
read colormap.
goal1(L1,L2,L3,L4).
goal2(L1,L2,L3,L4).
notime.

read account.
goal1(B).
goal2(B).
goal3(S).

read maxtree.
maxtree('Node'('Node'('Leaf'(1),'Leaf'(0)),'Node'('Leaf'(3),'Leaf'(2)))).

read assembler.
assembler(['Label'('L0'),'Jump'('L1'),'Jump'('L0'),'Label'('L1')],[],0).

read ralign.
time.
goal1.
goal2.
notime.

read tctest.
type f.
type i.
type k.

read iodemo.
dialog.
michael

read england.
q1(X).
q2(X,Y).
q7(X).
q10.

read queens.
queens([1,2,3,4]).

EOM
