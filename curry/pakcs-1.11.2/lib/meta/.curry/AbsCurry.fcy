Prog "AbsCurry" ["Prelude"] [TypeSyn ("AbsCurry","CTVarIndex") Public [] (TCons ("Prelude","Int") []),TypeSyn ("AbsCurry","CVarIndex") Public [] (TCons ("Prelude","Int") []),Type ("AbsCurry","CProg") Public [] [Cons ("AbsCurry","CProg") 5 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","[]") [TCons ("AbsCurry","CTypeDecl") []],TCons ("Prelude","[]") [TCons ("AbsCurry","CFuncDecl") []],TCons ("Prelude","[]") [TCons ("AbsCurry","COpDecl") []]]],Type ("AbsCurry","CVisibility") Public [] [Cons ("AbsCurry","CExported") 0 Public [],Cons ("AbsCurry","CPrivate") 0 Public []],Type ("AbsCurry","CTypeDecl") Public [] [Cons ("AbsCurry","CType") 4 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("AbsCurry","CVisibility") [],TCons ("Prelude","[]") [TCons ("Prelude","Int") []],TCons ("Prelude","[]") [TCons ("AbsCurry","CConsDecl") []]],Cons ("AbsCurry","CTypeSyn") 4 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("AbsCurry","CVisibility") [],TCons ("Prelude","[]") [TCons ("Prelude","Int") []],TCons ("AbsCurry","CTypeExpr") []]],Type ("AbsCurry","CConsDecl") Public [] [Cons ("AbsCurry","CCons") 4 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","Int") [],TCons ("AbsCurry","CVisibility") [],TCons ("Prelude","[]") [TCons ("AbsCurry","CTypeExpr") []]]],Type ("AbsCurry","CTypeExpr") Public [] [Cons ("AbsCurry","CTVar") 1 Public [TCons ("Prelude","Int") []],Cons ("AbsCurry","CFuncType") 2 Public [TCons ("AbsCurry","CTypeExpr") [],TCons ("AbsCurry","CTypeExpr") []],Cons ("AbsCurry","CTCons") 3 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("AbsCurry","CTypeExpr") []]]],Type ("AbsCurry","COpDecl") Public [] [Cons ("AbsCurry","COp") 3 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("AbsCurry","CFixity") [],TCons ("Prelude","Int") []]],Type ("AbsCurry","CFixity") Public [] [Cons ("AbsCurry","CInfixOp") 0 Public [],Cons ("AbsCurry","CInfixlOp") 0 Public [],Cons ("AbsCurry","CInfixrOp") 0 Public []],Type ("AbsCurry","CFuncDecl") Public [] [Cons ("AbsCurry","CFunc") 5 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","Int") [],TCons ("AbsCurry","CVisibility") [],TCons ("AbsCurry","CTypeExpr") [],TCons ("AbsCurry","CRules") []]],Type ("AbsCurry","CRules") Public [] [Cons ("AbsCurry","CRules") 2 Public [TCons ("AbsCurry","CEvalAnnot") [],TCons ("Prelude","[]") [TCons ("AbsCurry","CRule") []]],Cons ("AbsCurry","CExternal") 1 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],Type ("AbsCurry","CEvalAnnot") Public [] [Cons ("AbsCurry","CFlex") 0 Public [],Cons ("AbsCurry","CRigid") 0 Public [],Cons ("AbsCurry","CChoice") 0 Public []],Type ("AbsCurry","CRule") Public [] [Cons ("AbsCurry","CRule") 3 Public [TCons ("Prelude","[]") [TCons ("AbsCurry","CPattern") []],TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("AbsCurry","CExpr") [],TCons ("AbsCurry","CExpr") []]],TCons ("Prelude","[]") [TCons ("AbsCurry","CLocalDecl") []]]],Type ("AbsCurry","CLocalDecl") Public [] [Cons ("AbsCurry","CLocalFunc") 1 Public [TCons ("AbsCurry","CFuncDecl") []],Cons ("AbsCurry","CLocalPat") 4 Public [TCons ("AbsCurry","CTypeExpr") [],TCons ("AbsCurry","CPattern") [],TCons ("AbsCurry","CExpr") [],TCons ("Prelude","[]") [TCons ("AbsCurry","CLocalDecl") []]],Cons ("AbsCurry","CLocalVar") 2 Public [TCons ("AbsCurry","CTypeExpr") [],TCons ("Prelude","Int") []]],Type ("AbsCurry","CExpr") Public [] [Cons ("AbsCurry","CVar") 1 Public [TCons ("Prelude","Int") []],Cons ("AbsCurry","CLit") 1 Public [TCons ("AbsCurry","CLiteral") []],Cons ("AbsCurry","CSymbol") 2 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],Cons ("AbsCurry","CApply") 2 Public [TCons ("AbsCurry","CExpr") [],TCons ("AbsCurry","CExpr") []],Cons ("AbsCurry","CLambda") 2 Public [TCons ("Prelude","[]") [TCons ("AbsCurry","CPattern") []],TCons ("AbsCurry","CExpr") []],Cons ("AbsCurry","CLetDecl") 2 Public [TCons ("Prelude","[]") [TCons ("AbsCurry","CLocalDecl") []],TCons ("AbsCurry","CExpr") []],Cons ("AbsCurry","CDoExpr") 1 Public [TCons ("Prelude","[]") [TCons ("AbsCurry","CStatement") []]],Cons ("AbsCurry","CListComp") 2 Public [TCons ("AbsCurry","CExpr") [],TCons ("Prelude","[]") [TCons ("AbsCurry","CStatement") []]],Cons ("AbsCurry","CCase") 2 Public [TCons ("AbsCurry","CExpr") [],TCons ("Prelude","[]") [TCons ("AbsCurry","CBranchExpr") []]]],Type ("AbsCurry","CStatement") Public [] [Cons ("AbsCurry","CSExpr") 1 Public [TCons ("AbsCurry","CExpr") []],Cons ("AbsCurry","CSPat") 2 Public [TCons ("AbsCurry","CPattern") [],TCons ("AbsCurry","CExpr") []],Cons ("AbsCurry","CSLet") 1 Public [TCons ("Prelude","[]") [TCons ("AbsCurry","CLocalDecl") []]]],Type ("AbsCurry","CPattern") Public [] [Cons ("AbsCurry","CPVar") 1 Public [TCons ("Prelude","Int") []],Cons ("AbsCurry","CPLit") 1 Public [TCons ("AbsCurry","CLiteral") []],Cons ("AbsCurry","CPComb") 3 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("AbsCurry","CPattern") []]]],Type ("AbsCurry","CBranchExpr") Public [] [Cons ("AbsCurry","CBranch") 2 Public [TCons ("AbsCurry","CPattern") [],TCons ("AbsCurry","CExpr") []]],Type ("AbsCurry","CLiteral") Public [] [Cons ("AbsCurry","CIntc") 1 Public [TCons ("Prelude","Int") []],Cons ("AbsCurry","CFloatc") 1 Public [TCons ("Prelude","Float") []],Cons ("AbsCurry","CCharc") 1 Public [TCons ("Prelude","Char") []]]] [] []