CurryProg "AbsCurry"
 ["Prelude"]
 [CType ("AbsCurry","CProg") Public [] [CCons ("AbsCurry","CProg") 5 Public [CTCons ("Prelude","String") [],CTCons ("Prelude","[]") [CTCons ("Prelude","String") []],CTCons ("Prelude","[]") [CTCons ("AbsCurry","CTypeDecl") []],CTCons ("Prelude","[]") [CTCons ("AbsCurry","CFuncDecl") []],CTCons ("Prelude","[]") [CTCons ("AbsCurry","COpDecl") []]]],
  CType ("AbsCurry","CVisibility") Public [] [CCons ("AbsCurry","CExported") 0 Public [],CCons ("AbsCurry","CPrivate") 0 Public []],
  CTypeSyn ("AbsCurry","CTVarIndex") Public [] (CTCons ("Prelude","Int") []),
  CType ("AbsCurry","CTypeDecl") Public [] [CCons ("AbsCurry","CType") 4 Public [CTCons ("Prelude","String") [],CTCons ("AbsCurry","CVisibility") [],CTCons ("Prelude","[]") [CTCons ("AbsCurry","CTVarIndex") []],CTCons ("Prelude","[]") [CTCons ("AbsCurry","CConsDecl") []]],CCons ("AbsCurry","CTypeSyn") 4 Public [CTCons ("Prelude","String") [],CTCons ("AbsCurry","CVisibility") [],CTCons ("Prelude","[]") [CTCons ("AbsCurry","CTVarIndex") []],CTCons ("AbsCurry","CTypeExpr") []]],
  CType ("AbsCurry","CConsDecl") Public [] [CCons ("AbsCurry","CCons") 4 Public [CTCons ("Prelude","String") [],CTCons ("Prelude","Int") [],CTCons ("AbsCurry","CVisibility") [],CTCons ("Prelude","[]") [CTCons ("AbsCurry","CTypeExpr") []]]],
  CType ("AbsCurry","CTypeExpr") Public [] [CCons ("AbsCurry","CTVar") 1 Public [CTCons ("AbsCurry","CTVarIndex") []],CCons ("AbsCurry","CFuncType") 2 Public [CTCons ("AbsCurry","CTypeExpr") [],CTCons ("AbsCurry","CTypeExpr") []],CCons ("AbsCurry","CTCons") 3 Public [CTCons ("Prelude","String") [],CTCons ("Prelude","String") [],CTCons ("Prelude","[]") [CTCons ("AbsCurry","CTypeExpr") []]]],
  CType ("AbsCurry","COpDecl") Public [] [CCons ("AbsCurry","COp") 3 Public [CTCons ("Prelude","String") [],CTCons ("AbsCurry","CFixity") [],CTCons ("Prelude","Int") []]],
  CType ("AbsCurry","CFixity") Public [] [CCons ("AbsCurry","CInfixOp") 0 Public [],CCons ("AbsCurry","CInfixlOp") 0 Public [],CCons ("AbsCurry","CInfixrOp") 0 Public []],
  CTypeSyn ("AbsCurry","CVarIndex") Public [] (CTCons ("Prelude","Int") []),
  CType ("AbsCurry","CFuncDecl") Public [] [CCons ("AbsCurry","CFunc") 5 Public [CTCons ("Prelude","String") [],CTCons ("Prelude","Int") [],CTCons ("AbsCurry","CVisibility") [],CTCons ("AbsCurry","CTypeExpr") [],CTCons ("AbsCurry","CRules") []]],
  CType ("AbsCurry","CRules") Public [] [CCons ("AbsCurry","CRules") 2 Public [CTCons ("AbsCurry","CEvalAnnot") [],CTCons ("Prelude","[]") [CTCons ("AbsCurry","CRule") []]],CCons ("AbsCurry","CExternal") 1 Public [CTCons ("Prelude","String") []]],
  CType ("AbsCurry","CEvalAnnot") Public [] [CCons ("AbsCurry","CFlex") 0 Public [],CCons ("AbsCurry","CRigid") 0 Public [],CCons ("AbsCurry","CChoice") 0 Public []],
  CType ("AbsCurry","CRule") Public [] [CCons ("AbsCurry","CRule") 3 Public [CTCons ("Prelude","[]") [CTCons ("AbsCurry","CPattern") []],CTCons ("Prelude","[]") [CTCons ("Prelude","(,)") [CTCons ("AbsCurry","CExpr") [],CTCons ("AbsCurry","CExpr") []]],CTCons ("Prelude","[]") [CTCons ("AbsCurry","CLocalDecl") []]]],
  CType ("AbsCurry","CLocalDecl") Public [] [CCons ("AbsCurry","CLocalFunc") 1 Public [CTCons ("AbsCurry","CFuncDecl") []],CCons ("AbsCurry","CLocalPat") 4 Public [CTCons ("AbsCurry","CTypeExpr") [],CTCons ("AbsCurry","CPattern") [],CTCons ("AbsCurry","CExpr") [],CTCons ("Prelude","[]") [CTCons ("AbsCurry","CLocalDecl") []]],CCons ("AbsCurry","CLocalVar") 2 Public [CTCons ("AbsCurry","CTypeExpr") [],CTCons ("AbsCurry","CVarIndex") []]],
  CType ("AbsCurry","CExpr") Public [] [CCons ("AbsCurry","CVar") 1 Public [CTCons ("AbsCurry","CVarIndex") []],CCons ("AbsCurry","CLit") 1 Public [CTCons ("AbsCurry","CLiteral") []],CCons ("AbsCurry","CSymbol") 2 Public [CTCons ("Prelude","String") [],CTCons ("Prelude","String") []],CCons ("AbsCurry","CApply") 2 Public [CTCons ("AbsCurry","CExpr") [],CTCons ("AbsCurry","CExpr") []],CCons ("AbsCurry","CLambda") 2 Public [CTCons ("Prelude","[]") [CTCons ("AbsCurry","CPattern") []],CTCons ("AbsCurry","CExpr") []],CCons ("AbsCurry","CLetDecl") 2 Public [CTCons ("Prelude","[]") [CTCons ("AbsCurry","CLocalDecl") []],CTCons ("AbsCurry","CExpr") []],CCons ("AbsCurry","CDoExpr") 1 Public [CTCons ("Prelude","[]") [CTCons ("AbsCurry","CStatement") []]],CCons ("AbsCurry","CListComp") 2 Public [CTCons ("AbsCurry","CExpr") [],CTCons ("Prelude","[]") [CTCons ("AbsCurry","CStatement") []]],CCons ("AbsCurry","CCase") 2 Public [CTCons ("AbsCurry","CExpr") [],CTCons ("Prelude","[]") [CTCons ("AbsCurry","CBranchExpr") []]]],
  CType ("AbsCurry","CStatement") Public [] [CCons ("AbsCurry","CSExpr") 1 Public [CTCons ("AbsCurry","CExpr") []],CCons ("AbsCurry","CSPat") 2 Public [CTCons ("AbsCurry","CPattern") [],CTCons ("AbsCurry","CExpr") []],CCons ("AbsCurry","CSLet") 1 Public [CTCons ("Prelude","[]") [CTCons ("AbsCurry","CLocalDecl") []]]],
  CType ("AbsCurry","CPattern") Public [] [CCons ("AbsCurry","CPVar") 1 Public [CTCons ("AbsCurry","CVarIndex") []],CCons ("AbsCurry","CPLit") 1 Public [CTCons ("AbsCurry","CLiteral") []],CCons ("AbsCurry","CPComb") 3 Public [CTCons ("Prelude","String") [],CTCons ("Prelude","String") [],CTCons ("Prelude","[]") [CTCons ("AbsCurry","CPattern") []]]],
  CType ("AbsCurry","CBranchExpr") Public [] [CCons ("AbsCurry","CBranch") 2 Public [CTCons ("AbsCurry","CPattern") [],CTCons ("AbsCurry","CExpr") []]],
  CType ("AbsCurry","CLiteral") Public [] [CCons ("AbsCurry","CIntc") 1 Public [CTCons ("Prelude","Int") []],CCons ("AbsCurry","CFloatc") 1 Public [CTCons ("Prelude","Float") []],CCons ("AbsCurry","CCharc") 1 Public [CTCons ("Prelude","Char") []]]]
 []
 []
