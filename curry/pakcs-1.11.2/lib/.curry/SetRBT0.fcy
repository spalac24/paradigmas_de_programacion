Prog "SetRBT0" ["Prelude"] [Type ("SetRBT0","RBSColor") Private [] [Cons ("SetRBT0","RBSRed") 0 Private [],Cons ("SetRBT0","RBSBlack") 0 Private []],Type ("SetRBT0","SetRBT") Public [0] [Cons ("SetRBT0","RBS") 4 Private [TCons ("SetRBT0","RBSColor") [],TVar 0,TCons ("SetRBT0","SetRBT") [TVar 0],TCons ("SetRBT0","SetRBT") [TVar 0]],Cons ("SetRBT0","RBSEmpty") 0 Private []]] [Func ("SetRBT0","emptySetRBT") 0 Public (TCons ("SetRBT0","SetRBT") [TVar 0]) (Rule [] (Comb ConsCall ("SetRBT0","RBSEmpty") [])),Func ("SetRBT0","elemRBT") 3 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons ("Prelude","Bool") []))) (FuncType (TVar 0) (FuncType (TCons ("SetRBT0","SetRBT") [TVar 0]) (TCons ("Prelude","Bool") [])))) (Rule [1,2,3] (Case  Flex (Var 3) [Branch (Pattern ("SetRBT0","RBSEmpty") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("SetRBT0","RBS") [4,5,6,7]) (Case  Rigid (Comb FuncCall ("Prelude","==") [Var 5,Var 2]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 1,Var 2],Var 5]) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("SetRBT0","elemRBT") [Var 1,Var 2,Var 6]),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Prelude","otherwise") []) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("SetRBT0","elemRBT") [Var 1,Var 2,Var 7]),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("Prelude","failed") [])])])])])),Func ("SetRBT0","insertRBT") 3 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons ("Prelude","Bool") []))) (FuncType (TVar 0) (FuncType (TCons ("SetRBT0","SetRBT") [TVar 0]) (TCons ("SetRBT0","SetRBT") [TVar 0])))) (Rule [1,2,3] (Let [(4,Comb FuncCall ("SetRBT0","insertRBT.ins.11") [Var 1,Var 2,Var 3]),(5,Comb FuncCall ("SetRBT0","insertRBT._#selFP2#e2") [Var 4]),(6,Comb FuncCall ("SetRBT0","insertRBT._#selFP3#l") [Var 4]),(7,Comb FuncCall ("SetRBT0","insertRBT._#selFP4#r") [Var 4])] (Comb ConsCall ("SetRBT0","RBS") [Comb ConsCall ("SetRBT0","RBSBlack") [],Var 5,Var 6,Var 7]))),Func ("SetRBT0","insertRBT.ins.11") 3 Private (FuncType (FuncType (TVar 239) (FuncType (TVar 239) (TCons ("Prelude","Bool") []))) (FuncType (TVar 239) (FuncType (TCons ("SetRBT0","SetRBT") [TVar 239]) (TCons ("SetRBT0","SetRBT") [TVar 239])))) (Rule [1,2,3] (Case  Flex (Var 3) [Branch (Pattern ("SetRBT0","RBSEmpty") []) (Comb ConsCall ("SetRBT0","RBS") [Comb ConsCall ("SetRBT0","RBSRed") [],Var 2,Comb ConsCall ("SetRBT0","RBSEmpty") [],Comb ConsCall ("SetRBT0","RBSEmpty") []]),Branch (Pattern ("SetRBT0","RBS") [4,5,6,7]) (Case  Rigid (Comb FuncCall ("Prelude","==") [Var 2,Var 5]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("SetRBT0","RBS") [Var 4,Var 5,Var 6,Var 7]),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 1,Var 2],Var 5]) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("SetRBT0","rbsBalanceL") [Comb ConsCall ("SetRBT0","RBS") [Var 4,Var 5,Comb FuncCall ("SetRBT0","insertRBT.ins.11") [Var 1,Var 2,Var 6],Var 7]]),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Prelude","otherwise") []) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("SetRBT0","rbsBalanceR") [Comb ConsCall ("SetRBT0","RBS") [Var 4,Var 5,Var 6,Comb FuncCall ("SetRBT0","insertRBT.ins.11") [Var 1,Var 2,Var 7]]]),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("Prelude","failed") [])])])])])),Func ("SetRBT0","insertRBT._#selFP2#e2") 1 Private (FuncType (TCons ("SetRBT0","SetRBT") [TVar 239]) (TVar 239)) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("SetRBT0","RBS") [2,3,4,5]) (Var 3)])),Func ("SetRBT0","insertRBT._#selFP3#l") 1 Private (FuncType (TCons ("SetRBT0","SetRBT") [TVar 239]) (TCons ("SetRBT0","SetRBT") [TVar 239])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("SetRBT0","RBS") [2,3,4,5]) (Var 4)])),Func ("SetRBT0","insertRBT._#selFP4#r") 1 Private (FuncType (TCons ("SetRBT0","SetRBT") [TVar 239]) (TCons ("SetRBT0","SetRBT") [TVar 239])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("SetRBT0","RBS") [2,3,4,5]) (Var 5)])),Func ("SetRBT0","insertMultiRBT") 3 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons ("Prelude","Bool") []))) (FuncType (TVar 0) (FuncType (TCons ("SetRBT0","SetRBT") [TVar 0]) (TCons ("SetRBT0","SetRBT") [TVar 0])))) (Rule [1,2,3] (Let [(4,Comb FuncCall ("SetRBT0","insertMultiRBT.ins.20") [Var 1,Var 2,Var 3]),(5,Comb FuncCall ("SetRBT0","insertMultiRBT._#selFP6#e2") [Var 4]),(6,Comb FuncCall ("SetRBT0","insertMultiRBT._#selFP7#l") [Var 4]),(7,Comb FuncCall ("SetRBT0","insertMultiRBT._#selFP8#r") [Var 4])] (Comb ConsCall ("SetRBT0","RBS") [Comb ConsCall ("SetRBT0","RBSBlack") [],Var 5,Var 6,Var 7]))),Func ("SetRBT0","insertMultiRBT.ins.20") 3 Private (FuncType (FuncType (TVar 272) (FuncType (TVar 272) (TCons ("Prelude","Bool") []))) (FuncType (TVar 272) (FuncType (TCons ("SetRBT0","SetRBT") [TVar 272]) (TCons ("SetRBT0","SetRBT") [TVar 272])))) (Rule [1,2,3] (Case  Flex (Var 3) [Branch (Pattern ("SetRBT0","RBSEmpty") []) (Comb ConsCall ("SetRBT0","RBS") [Comb ConsCall ("SetRBT0","RBSRed") [],Var 2,Comb ConsCall ("SetRBT0","RBSEmpty") [],Comb ConsCall ("SetRBT0","RBSEmpty") []]),Branch (Pattern ("SetRBT0","RBS") [4,5,6,7]) (Case  Rigid (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 1,Var 2],Var 5]) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("SetRBT0","rbsBalanceL") [Comb ConsCall ("SetRBT0","RBS") [Var 4,Var 5,Comb FuncCall ("SetRBT0","insertMultiRBT.ins.20") [Var 1,Var 2,Var 6],Var 7]]),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Prelude","otherwise") []) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("SetRBT0","rbsBalanceR") [Comb ConsCall ("SetRBT0","RBS") [Var 4,Var 5,Var 6,Comb FuncCall ("SetRBT0","insertMultiRBT.ins.20") [Var 1,Var 2,Var 7]]]),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("Prelude","failed") [])])])])),Func ("SetRBT0","insertMultiRBT._#selFP6#e2") 1 Private (FuncType (TCons ("SetRBT0","SetRBT") [TVar 272]) (TVar 272)) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("SetRBT0","RBS") [2,3,4,5]) (Var 3)])),Func ("SetRBT0","insertMultiRBT._#selFP7#l") 1 Private (FuncType (TCons ("SetRBT0","SetRBT") [TVar 272]) (TCons ("SetRBT0","SetRBT") [TVar 272])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("SetRBT0","RBS") [2,3,4,5]) (Var 4)])),Func ("SetRBT0","insertMultiRBT._#selFP8#r") 1 Private (FuncType (TCons ("SetRBT0","SetRBT") [TVar 272]) (TCons ("SetRBT0","SetRBT") [TVar 272])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("SetRBT0","RBS") [2,3,4,5]) (Var 5)])),Func ("SetRBT0","setRBT2list") 1 Public (FuncType (TCons ("SetRBT0","SetRBT") [TVar 0]) (TCons ("Prelude","[]") [TVar 0])) (Rule [1] (Comb FuncCall ("SetRBT0","setRBT2list.s2l.29") [Var 1,Comb ConsCall ("Prelude","[]") []])),Func ("SetRBT0","setRBT2list.s2l.29") 2 Private (FuncType (TCons ("SetRBT0","SetRBT") [TVar 0]) (FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("Prelude","[]") [TVar 0]))) (Rule [1,2] (Case  Flex (Var 1) [Branch (Pattern ("SetRBT0","RBSEmpty") []) (Var 2),Branch (Pattern ("SetRBT0","RBS") [3,4,5,6]) (Comb FuncCall ("SetRBT0","setRBT2list.s2l.29") [Var 5,Comb ConsCall ("Prelude",":") [Var 4,Comb FuncCall ("SetRBT0","setRBT2list.s2l.29") [Var 6,Var 2]]])])),Func ("SetRBT0","unionRBT") 3 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons ("Prelude","Bool") []))) (FuncType (TCons ("SetRBT0","SetRBT") [TVar 0]) (FuncType (TCons ("SetRBT0","SetRBT") [TVar 0]) (TCons ("SetRBT0","SetRBT") [TVar 0])))) (Rule [1,2,3] (Comb FuncCall ("Prelude","foldr") [Comb (FuncPartCall 2) ("SetRBT0","insertRBT") [Var 1],Var 3,Comb FuncCall ("SetRBT0","setRBT2list") [Var 2]])),Func ("SetRBT0","intersectRBT") 3 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons ("Prelude","Bool") []))) (FuncType (TCons ("SetRBT0","SetRBT") [TVar 0]) (FuncType (TCons ("SetRBT0","SetRBT") [TVar 0]) (TCons ("SetRBT0","SetRBT") [TVar 0])))) (Rule [1,2,3] (Comb FuncCall ("Prelude","foldr") [Comb (FuncPartCall 2) ("SetRBT0","insertRBT") [Var 1],Comb FuncCall ("SetRBT0","emptySetRBT") [],Comb FuncCall ("Prelude","filter") [Comb (FuncPartCall 1) ("SetRBT0","intersectRBT._#lambda1") [Var 1,Var 3],Comb FuncCall ("SetRBT0","setRBT2list") [Var 2]]])),Func ("SetRBT0","intersectRBT._#lambda1") 3 Private (FuncType (FuncType (TVar 329) (FuncType (TVar 329) (TCons ("Prelude","Bool") []))) (FuncType (TCons ("SetRBT0","SetRBT") [TVar 329]) (FuncType (TVar 329) (TCons ("Prelude","Bool") [])))) (Rule [1,2,3] (Comb FuncCall ("SetRBT0","elemRBT") [Var 1,Var 3,Var 2])),Func ("SetRBT0","sortRBT") 2 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons ("Prelude","Bool") []))) (FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("Prelude","[]") [TVar 0]))) (Rule [1,2] (Comb FuncCall ("SetRBT0","setRBT2list") [Comb FuncCall ("Prelude","foldr") [Comb (FuncPartCall 2) ("SetRBT0","insertMultiRBT") [Var 1],Comb FuncCall ("SetRBT0","emptySetRBT") [],Var 2]])),Func ("SetRBT0","rbsBalance") 1 Private (FuncType (TCons ("SetRBT0","SetRBT") [TVar 0]) (TCons ("SetRBT0","SetRBT") [TVar 0])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("SetRBT0","RBSEmpty") []) (Comb ConsCall ("SetRBT0","RBSEmpty") []),Branch (Pattern ("SetRBT0","RBS") [2,3,4,5]) (Let [(6,Comb FuncCall ("SetRBT0","rbsBalanceL") [Comb ConsCall ("SetRBT0","RBS") [Var 2,Var 3,Var 4,Var 5]]),(7,Comb FuncCall ("SetRBT0","rbsBalance._#selFP10#c2") [Var 6]),(8,Comb FuncCall ("SetRBT0","rbsBalance._#selFP11#e2") [Var 6]),(9,Comb FuncCall ("SetRBT0","rbsBalance._#selFP12#l2") [Var 6]),(10,Comb FuncCall ("SetRBT0","rbsBalance._#selFP13#r2") [Var 6])] (Case  Rigid (Comb FuncCall ("Prelude","/=") [Var 2,Comb ConsCall ("SetRBT0","RBSBlack") []]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("SetRBT0","RBS") [Var 2,Var 3,Var 4,Var 5]),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Prelude","==") [Var 7,Comb ConsCall ("SetRBT0","RBSRed") []]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("SetRBT0","RBS") [Var 7,Var 8,Var 9,Var 10]),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Prelude","otherwise") []) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("SetRBT0","rbsBalanceR") [Comb ConsCall ("SetRBT0","RBS") [Var 2,Var 3,Var 4,Var 5]]),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("Prelude","failed") [])])])]))])),Func ("SetRBT0","rbsBalance._#selFP10#c2") 1 Private (FuncType (TCons ("SetRBT0","SetRBT") [TVar 343]) (TCons ("SetRBT0","RBSColor") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("SetRBT0","RBS") [2,3,4,5]) (Var 2)])),Func ("SetRBT0","rbsBalance._#selFP11#e2") 1 Private (FuncType (TCons ("SetRBT0","SetRBT") [TVar 343]) (TVar 343)) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("SetRBT0","RBS") [2,3,4,5]) (Var 3)])),Func ("SetRBT0","rbsBalance._#selFP12#l2") 1 Private (FuncType (TCons ("SetRBT0","SetRBT") [TVar 343]) (TCons ("SetRBT0","SetRBT") [TVar 343])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("SetRBT0","RBS") [2,3,4,5]) (Var 4)])),Func ("SetRBT0","rbsBalance._#selFP13#r2") 1 Private (FuncType (TCons ("SetRBT0","SetRBT") [TVar 343]) (TCons ("SetRBT0","SetRBT") [TVar 343])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("SetRBT0","RBS") [2,3,4,5]) (Var 5)])),Func ("SetRBT0","rbsBalanceL") 1 Private (FuncType (TCons ("SetRBT0","SetRBT") [TVar 0]) (TCons ("SetRBT0","SetRBT") [TVar 0])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("SetRBT0","RBS") [2,3,4,5]) (Case  Flex (Var 4) [Branch (Pattern ("SetRBT0","RBSEmpty") []) (Comb ConsCall ("SetRBT0","RBS") [Var 2,Var 3,Comb ConsCall ("SetRBT0","RBSEmpty") [],Var 5]),Branch (Pattern ("SetRBT0","RBS") [6,7,8,9]) (Case  Flex (Var 8) [Branch (Pattern ("SetRBT0","RBSEmpty") []) (Case  Flex (Var 9) [Branch (Pattern ("SetRBT0","RBSEmpty") []) (Comb ConsCall ("SetRBT0","RBS") [Var 2,Var 3,Comb ConsCall ("SetRBT0","RBS") [Var 6,Var 7,Comb ConsCall ("SetRBT0","RBSEmpty") [],Comb ConsCall ("SetRBT0","RBSEmpty") []],Var 5]),Branch (Pattern ("SetRBT0","RBS") [10,11,12,13]) (Case  Rigid (Comb FuncCall ("Prelude","&&") [Comb FuncCall ("Prelude","==") [Var 6,Comb ConsCall ("SetRBT0","RBSRed") []],Comb FuncCall ("Prelude","==") [Var 10,Comb ConsCall ("SetRBT0","RBSRed") []]]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("SetRBT0","RBS") [Comb ConsCall ("SetRBT0","RBSRed") [],Var 11,Comb ConsCall ("SetRBT0","RBS") [Comb ConsCall ("SetRBT0","RBSBlack") [],Var 7,Comb ConsCall ("SetRBT0","RBSEmpty") [],Var 12],Comb ConsCall ("SetRBT0","RBS") [Comb ConsCall ("SetRBT0","RBSBlack") [],Var 3,Var 13,Var 5]]),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Prelude","otherwise") []) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("SetRBT0","RBS") [Var 2,Var 3,Comb ConsCall ("SetRBT0","RBS") [Var 6,Var 7,Comb ConsCall ("SetRBT0","RBSEmpty") [],Comb ConsCall ("SetRBT0","RBS") [Var 10,Var 11,Var 12,Var 13]],Var 5]),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("Prelude","failed") [])])])]),Branch (Pattern ("SetRBT0","RBS") [14,15,16,17]) (Case  Flex (Var 9) [Branch (Pattern ("SetRBT0","RBSEmpty") []) (Case  Rigid (Comb FuncCall ("Prelude","&&") [Comb FuncCall ("Prelude","==") [Var 6,Comb ConsCall ("SetRBT0","RBSRed") []],Comb FuncCall ("Prelude","==") [Var 14,Comb ConsCall ("SetRBT0","RBSRed") []]]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("SetRBT0","RBS") [Comb ConsCall ("SetRBT0","RBSRed") [],Var 7,Comb ConsCall ("SetRBT0","RBS") [Comb ConsCall ("SetRBT0","RBSBlack") [],Var 15,Var 16,Var 17],Comb ConsCall ("SetRBT0","RBS") [Comb ConsCall ("SetRBT0","RBSBlack") [],Var 3,Comb ConsCall ("SetRBT0","RBSEmpty") [],Var 5]]),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Prelude","otherwise") []) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("SetRBT0","RBS") [Var 2,Var 3,Comb ConsCall ("SetRBT0","RBS") [Var 6,Var 7,Comb ConsCall ("SetRBT0","RBS") [Var 14,Var 15,Var 16,Var 17],Comb ConsCall ("SetRBT0","RBSEmpty") []],Var 5]),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("Prelude","failed") [])])]),Branch (Pattern ("SetRBT0","RBS") [18,19,20,21]) (Case  Rigid (Comb FuncCall ("Prelude","&&") [Comb FuncCall ("Prelude","==") [Var 6,Comb ConsCall ("SetRBT0","RBSRed") []],Comb FuncCall ("Prelude","==") [Var 14,Comb ConsCall ("SetRBT0","RBSRed") []]]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("SetRBT0","RBS") [Comb ConsCall ("SetRBT0","RBSRed") [],Var 7,Comb ConsCall ("SetRBT0","RBS") [Comb ConsCall ("SetRBT0","RBSBlack") [],Var 15,Var 16,Var 17],Comb ConsCall ("SetRBT0","RBS") [Comb ConsCall ("SetRBT0","RBSBlack") [],Var 3,Comb ConsCall ("SetRBT0","RBS") [Var 18,Var 19,Var 20,Var 21],Var 5]]),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Prelude","&&") [Comb FuncCall ("Prelude","==") [Var 6,Comb ConsCall ("SetRBT0","RBSRed") []],Comb FuncCall ("Prelude","==") [Var 18,Comb ConsCall ("SetRBT0","RBSRed") []]]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("SetRBT0","RBS") [Comb ConsCall ("SetRBT0","RBSRed") [],Var 19,Comb ConsCall ("SetRBT0","RBS") [Comb ConsCall ("SetRBT0","RBSBlack") [],Var 7,Comb ConsCall ("SetRBT0","RBS") [Var 14,Var 15,Var 16,Var 17],Var 20],Comb ConsCall ("SetRBT0","RBS") [Comb ConsCall ("SetRBT0","RBSBlack") [],Var 3,Var 21,Var 5]]),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Prelude","otherwise") []) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("SetRBT0","RBS") [Var 2,Var 3,Comb ConsCall ("SetRBT0","RBS") [Var 6,Var 7,Comb ConsCall ("SetRBT0","RBS") [Var 14,Var 15,Var 16,Var 17],Comb ConsCall ("SetRBT0","RBS") [Var 18,Var 19,Var 20,Var 21]],Var 5]),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("Prelude","failed") [])])])])])])])])),Func ("SetRBT0","rbsBalanceR") 1 Private (FuncType (TCons ("SetRBT0","SetRBT") [TVar 0]) (TCons ("SetRBT0","SetRBT") [TVar 0])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("SetRBT0","RBS") [2,3,4,5]) (Case  Flex (Var 5) [Branch (Pattern ("SetRBT0","RBSEmpty") []) (Comb ConsCall ("SetRBT0","RBS") [Var 2,Var 3,Var 4,Comb ConsCall ("SetRBT0","RBSEmpty") []]),Branch (Pattern ("SetRBT0","RBS") [6,7,8,9]) (Case  Flex (Var 8) [Branch (Pattern ("SetRBT0","RBSEmpty") []) (Case  Flex (Var 9) [Branch (Pattern ("SetRBT0","RBSEmpty") []) (Comb ConsCall ("SetRBT0","RBS") [Var 2,Var 3,Var 4,Comb ConsCall ("SetRBT0","RBS") [Var 6,Var 7,Comb ConsCall ("SetRBT0","RBSEmpty") [],Comb ConsCall ("SetRBT0","RBSEmpty") []]]),Branch (Pattern ("SetRBT0","RBS") [10,11,12,13]) (Case  Rigid (Comb FuncCall ("Prelude","&&") [Comb FuncCall ("Prelude","==") [Var 6,Comb ConsCall ("SetRBT0","RBSRed") []],Comb FuncCall ("Prelude","==") [Var 10,Comb ConsCall ("SetRBT0","RBSRed") []]]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("SetRBT0","RBS") [Comb ConsCall ("SetRBT0","RBSRed") [],Var 7,Comb ConsCall ("SetRBT0","RBS") [Comb ConsCall ("SetRBT0","RBSBlack") [],Var 3,Var 4,Comb ConsCall ("SetRBT0","RBSEmpty") []],Comb ConsCall ("SetRBT0","RBS") [Comb ConsCall ("SetRBT0","RBSBlack") [],Var 11,Var 12,Var 13]]),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Prelude","otherwise") []) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("SetRBT0","RBS") [Var 2,Var 3,Var 4,Comb ConsCall ("SetRBT0","RBS") [Var 6,Var 7,Comb ConsCall ("SetRBT0","RBSEmpty") [],Comb ConsCall ("SetRBT0","RBS") [Var 10,Var 11,Var 12,Var 13]]]),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("Prelude","failed") [])])])]),Branch (Pattern ("SetRBT0","RBS") [14,15,16,17]) (Case  Flex (Var 9) [Branch (Pattern ("SetRBT0","RBSEmpty") []) (Case  Rigid (Comb FuncCall ("Prelude","&&") [Comb FuncCall ("Prelude","==") [Var 6,Comb ConsCall ("SetRBT0","RBSRed") []],Comb FuncCall ("Prelude","==") [Var 14,Comb ConsCall ("SetRBT0","RBSRed") []]]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("SetRBT0","RBS") [Comb ConsCall ("SetRBT0","RBSRed") [],Var 15,Comb ConsCall ("SetRBT0","RBS") [Comb ConsCall ("SetRBT0","RBSBlack") [],Var 3,Var 4,Var 16],Comb ConsCall ("SetRBT0","RBS") [Comb ConsCall ("SetRBT0","RBSBlack") [],Var 7,Var 17,Comb ConsCall ("SetRBT0","RBSEmpty") []]]),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Prelude","otherwise") []) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("SetRBT0","RBS") [Var 2,Var 3,Var 4,Comb ConsCall ("SetRBT0","RBS") [Var 6,Var 7,Comb ConsCall ("SetRBT0","RBS") [Var 14,Var 15,Var 16,Var 17],Comb ConsCall ("SetRBT0","RBSEmpty") []]]),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("Prelude","failed") [])])]),Branch (Pattern ("SetRBT0","RBS") [18,19,20,21]) (Case  Rigid (Comb FuncCall ("Prelude","&&") [Comb FuncCall ("Prelude","==") [Var 6,Comb ConsCall ("SetRBT0","RBSRed") []],Comb FuncCall ("Prelude","==") [Var 14,Comb ConsCall ("SetRBT0","RBSRed") []]]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("SetRBT0","RBS") [Comb ConsCall ("SetRBT0","RBSRed") [],Var 15,Comb ConsCall ("SetRBT0","RBS") [Comb ConsCall ("SetRBT0","RBSBlack") [],Var 3,Var 4,Var 16],Comb ConsCall ("SetRBT0","RBS") [Comb ConsCall ("SetRBT0","RBSBlack") [],Var 7,Var 17,Comb ConsCall ("SetRBT0","RBS") [Var 18,Var 19,Var 20,Var 21]]]),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Prelude","&&") [Comb FuncCall ("Prelude","==") [Var 6,Comb ConsCall ("SetRBT0","RBSRed") []],Comb FuncCall ("Prelude","==") [Var 18,Comb ConsCall ("SetRBT0","RBSRed") []]]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("SetRBT0","RBS") [Comb ConsCall ("SetRBT0","RBSRed") [],Var 7,Comb ConsCall ("SetRBT0","RBS") [Comb ConsCall ("SetRBT0","RBSBlack") [],Var 3,Var 4,Comb ConsCall ("SetRBT0","RBS") [Var 14,Var 15,Var 16,Var 17]],Comb ConsCall ("SetRBT0","RBS") [Comb ConsCall ("SetRBT0","RBSBlack") [],Var 19,Var 20,Var 21]]),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Prelude","otherwise") []) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("SetRBT0","RBS") [Var 2,Var 3,Var 4,Comb ConsCall ("SetRBT0","RBS") [Var 6,Var 7,Comb ConsCall ("SetRBT0","RBS") [Var 14,Var 15,Var 16,Var 17],Comb ConsCall ("SetRBT0","RBS") [Var 18,Var 19,Var 20,Var 21]]]),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("Prelude","failed") [])])])])])])])]))] []