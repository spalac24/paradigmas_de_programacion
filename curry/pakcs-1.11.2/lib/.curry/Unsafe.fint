Prog "Unsafe" ["Char","Prelude"] [] [Func ("Unsafe","unsafePerformIO") 1 Public (FuncType (TCons ("Prelude","IO") [TVar 0]) (TVar 0)) (External "Unsafe.unsafePerformIO"),Func ("Unsafe","trace") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TVar 0) (TVar 0))) (Rule [] (Var 0)),Func ("Unsafe","spawnConstraint") 2 Public (FuncType (TCons ("Prelude","Success") []) (FuncType (TVar 0) (TVar 0))) (External "Unsafe.spawnConstraint"),Func ("Unsafe","isVar") 1 Public (FuncType (TVar 0) (TCons ("Prelude","Bool") [])) (Rule [] (Var 0)),Func ("Unsafe","identicalVar") 2 Public (FuncType (TVar 0) (FuncType (TVar 0) (TCons ("Prelude","Bool") []))) (Rule [] (Var 0)),Func ("Unsafe","showAnyTerm") 1 Public (FuncType (TVar 0) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Var 0)),Func ("Unsafe","showAnyQTerm") 1 Public (FuncType (TVar 0) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Var 0)),Func ("Unsafe","readsAnyUnqualifiedTerm") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TVar 0,TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]))) (Rule [] (Var 0)),Func ("Unsafe","readAnyUnqualifiedTerm") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TVar 0))) (Rule [] (Var 0)),Func ("Unsafe","readsAnyQTerm") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TVar 0,TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]])) (Rule [] (Var 0)),Func ("Unsafe","readAnyQTerm") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TVar 0)) (Rule [] (Var 0)),Func ("Unsafe","showAnyExpression") 1 Public (FuncType (TVar 0) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (External "Unsafe.showAnyExpression"),Func ("Unsafe","showAnyQExpression") 1 Public (FuncType (TVar 0) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (External "Unsafe.showAnyQExpression"),Func ("Unsafe","readsAnyQExpression") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TVar 0,TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]])) (Rule [] (Var 0)),Func ("Unsafe","readAnyQExpression") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TVar 0)) (Rule [] (Var 0))] []