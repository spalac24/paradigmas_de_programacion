Prog "XmlConv" ["Prelude","Read","ReadShowTerm","XML"] [TypeSyn ("XmlConv","Attrs") Private [] (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]),TypeSyn ("XmlConv","Childs") Private [] (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]),TypeSyn ("XmlConv","XmlReads") Public [0] (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TVar 0,TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]])),TypeSyn ("XmlConv","XmlShows") Public [0] (FuncType (TVar 0) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]))),TypeSyn ("XmlConv","ValConv") Private [0] (TCons ("Prelude","(,)") [FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TVar 0),FuncType (TVar 0) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])]),TypeSyn ("XmlConv","XElemConv") Public [0] (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TCons ("XmlConv","Elem") [],TVar 0]),TypeSyn ("XmlConv","XAttrConv") Public [0] (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","NotRepeatable") [],TCons ("XmlConv","NoElem") [],TVar 0]),TypeSyn ("XmlConv","XPrimConv") Public [0] (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","NotRepeatable") [],TCons ("XmlConv","NoElem") [],TVar 0]),TypeSyn ("XmlConv","XOptConv") Public [0] (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","NotRepeatable") [],TCons ("XmlConv","NoElem") [],TVar 0]),TypeSyn ("XmlConv","XRepConv") Public [0] (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","NotRepeatable") [],TCons ("XmlConv","NoElem") [],TVar 0]),TypeSyn ("XmlConv","XSeqConv") Private [0] (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","NotRepeatable") [],TCons ("XmlConv","NoElem") [],TVar 0]),Type ("XmlConv","Repeatable") Private [] [],Type ("XmlConv","NotRepeatable") Private [] [],Type ("XmlConv","Elem") Private [] [],Type ("XmlConv","NoElem") Private [] [],Type ("XmlConv","XmlConv") Private [0,1,2] [Cons ("XmlConv","Conv") 2 Private [FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TVar 2,TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]]),FuncType (TVar 2) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]))]]] [Func ("XmlConv","/>=") 2 Private (FuncType (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TVar 0,TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]])) (FuncType (FuncType (TVar 0) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TVar 1,TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]]))) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TVar 1,TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]])))) (Rule [1,2] (Comb (FuncPartCall 1) ("XmlConv","/>=._#lambda1") [Var 2,Var 1])),Func ("XmlConv","/>=._#lambda1") 3 Private (FuncType (FuncType (TVar 9) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TVar 2,TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]]))) (FuncType (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TVar 9,TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]])) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TVar 2,TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]])))) (Rule [1,2,3] (Case  Rigid (Comb FuncCall ("Prelude","apply") [Var 2,Var 3]) [Branch (Pattern ("Prelude","(,)") [4,5]) (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 1,Var 4],Var 5])])),Func ("XmlConv","ret") 2 Private (FuncType (TVar 0) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TVar 0,TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]]))) (Rule [1,2] (Comb ConsCall ("Prelude","(,)") [Var 1,Var 2])),Func ("XmlConv","xmlReads") 1 Public (FuncType (TCons ("XmlConv","XmlConv") [TVar 0,TVar 1,TVar 2]) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TVar 2,TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]]))) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("XmlConv","Conv") [2,3]) (Var 2)])),Func ("XmlConv","xmlShows") 1 Public (FuncType (TCons ("XmlConv","XmlConv") [TVar 0,TVar 1,TVar 2]) (FuncType (TVar 2) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]])))) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("XmlConv","Conv") [2,3]) (Var 3)])),Func ("XmlConv","xmlRead") 2 Public (FuncType (TCons ("XmlConv","XmlConv") [TVar 0,TCons ("XmlConv","Elem") [],TVar 1]) (FuncType (TCons ("XML","XmlExp") []) (TVar 1))) (Rule [1,2] (Let [(3,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("XmlConv","xmlReads") [Var 1],Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude","[]") [],Comb ConsCall ("Prelude",":") [Var 2,Comb ConsCall ("Prelude","[]") []]]])] (Comb FuncCall ("XmlConv","xmlRead._#selFP2#a") [Var 3]))),Func ("XmlConv","xmlRead._#selFP2#a") 1 Private (FuncType (TCons ("Prelude","(,)") [TVar 43,TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TVar 1501],TCons ("Prelude","[]") [TVar 1502]]]) (TVar 43)) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Case  Flex (Var 4) [Branch (Pattern ("Prelude","[]") []) (Case  Flex (Var 5) [Branch (Pattern ("Prelude","[]") []) (Var 2)])])])])),Func ("XmlConv","xmlShow") 2 Public (FuncType (TCons ("XmlConv","XmlConv") [TVar 0,TCons ("XmlConv","Elem") [],TVar 1]) (FuncType (TVar 1) (TCons ("XML","XmlExp") []))) (Rule [1,2] (Let [(3,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("XmlConv","xmlShows") [Var 1],Var 2],Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude","[]") [],Comb ConsCall ("Prelude","[]") []]])] (Comb FuncCall ("XmlConv","xmlShow._#selFP4#x") [Var 3]))),Func ("XmlConv","xmlShow._#selFP4#x") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TVar 1504],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("XML","XmlExp") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 2) [Branch (Pattern ("Prelude","[]") []) (Case  Flex (Var 3) [Branch (Pattern ("Prelude",":") [4,5]) (Case  Flex (Var 5) [Branch (Pattern ("Prelude","[]") []) (Var 4)])])])])),Func ("XmlConv","int_") 0 Private (TCons ("Prelude","(,)") [FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","Int") []),FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])]) (Rule [] (Comb ConsCall ("Prelude","(,)") [Comb (FuncPartCall 1) ("Read","readInt") [],Comb (FuncPartCall 1) ("Prelude","show") []])),Func ("XmlConv","float_") 0 Private (TCons ("Prelude","(,)") [FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","Float") []),FuncType (TCons ("Prelude","Float") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])]) (Rule [] (Comb ConsCall ("Prelude","(,)") [Comb (FuncPartCall 1) ("ReadShowTerm","readQTerm") [],Comb (FuncPartCall 1) ("Prelude","show") []])),Func ("XmlConv","char_") 0 Private (TCons ("Prelude","(,)") [FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","Char") []),FuncType (TCons ("Prelude","Char") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])]) (Rule [] (Comb ConsCall ("Prelude","(,)") [Comb (FuncPartCall 1) ("Prelude","head") [],Comb (FuncPartCall 1) ("Prelude","flip") [Comb (ConsPartCall 2) ("Prelude",":") [],Comb ConsCall ("Prelude","[]") []]])),Func ("XmlConv","string_") 0 Private (TCons ("Prelude","(,)") [FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]),FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])]) (Rule [] (Comb ConsCall ("Prelude","(,)") [Comb (FuncPartCall 1) ("Prelude","id") [],Comb (FuncPartCall 1) ("Prelude","id") []])),Func ("XmlConv","bool_") 2 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","(,)") [FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","Bool") []),FuncType (TCons ("Prelude","Bool") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])]))) (Rule [1,2] (Comb ConsCall ("Prelude","(,)") [Comb (FuncPartCall 1) ("XmlConv","bool_.readBool.29") [Var 2,Var 1],Comb (FuncPartCall 1) ("XmlConv","bool_.showBool.29") [Var 2,Var 1]])),Func ("XmlConv","bool_.fromJust.29") 1 Private (FuncType (TCons ("Prelude","Maybe") [TVar 0]) (TVar 0)) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","Just") [2]) (Var 2)])),Func ("XmlConv","bool_.readBool.29") 3 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","Bool") [])))) (Rule [1,2,3] (Comb FuncCall ("XmlConv","bool_.fromJust.29") [Comb FuncCall ("Prelude","lookup") [Var 3,Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Var 2,Comb ConsCall ("Prelude","True") []],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Var 1,Comb ConsCall ("Prelude","False") []],Comb ConsCall ("Prelude","[]") []]]]])),Func ("XmlConv","bool_.showBool.29") 3 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","Bool") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])))) (Rule [1,2,3] (Case  Rigid (Var 3) [Branch (Pattern ("Prelude","True") []) (Var 2),Branch (Pattern ("Prelude","False") []) (Var 1)])),Func ("XmlConv","val_") 1 Private (FuncType (TCons ("Prelude","(,)") [FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TVar 0),FuncType (TVar 0) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])]) (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","NotRepeatable") [],TCons ("XmlConv","NoElem") [],TVar 0])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Comb ConsCall ("XmlConv","Conv") [Comb (FuncPartCall 1) ("XmlConv","val_.rd.37") [Var 2],Comb (FuncPartCall 2) ("XmlConv","val_.sh.37") [Var 3]])])),Func ("XmlConv","val_.rd.37") 2 Private (FuncType (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TVar 91)) (FuncType (TCons ("Prelude","(,)") [TVar 0,TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TVar 91,TCons ("Prelude","(,)") [TVar 0,TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]]))) (Rule [1,2] (Let [(3,Comb FuncCall ("XmlConv","val_.rd.37._#selFP6#attrs") [Var 2]),(4,Comb FuncCall ("XmlConv","val_.rd.37._#selFP7#a") [Var 2]),(5,Comb FuncCall ("XmlConv","val_.rd.37._#selFP8#elems") [Var 2])] (Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("Prelude","apply") [Var 1,Var 4],Comb ConsCall ("Prelude","(,)") [Var 3,Var 5]]))),Func ("XmlConv","val_.rd.37._#selFP6#attrs") 1 Private (FuncType (TCons ("Prelude","(,)") [TVar 84,TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TVar 84)) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude",":") [4,5]) (Case  Flex (Var 4) [Branch (Pattern ("XML","XText") [6]) (Var 2)])])])),Func ("XmlConv","val_.rd.37._#selFP7#a") 1 Private (FuncType (TCons ("Prelude","(,)") [TVar 84,TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude",":") [4,5]) (Case  Flex (Var 4) [Branch (Pattern ("XML","XText") [6]) (Var 6)])])])),Func ("XmlConv","val_.rd.37._#selFP8#elems") 1 Private (FuncType (TCons ("Prelude","(,)") [TVar 84,TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","[]") [TCons ("XML","XmlExp") []])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude",":") [4,5]) (Case  Flex (Var 4) [Branch (Pattern ("XML","XText") [6]) (Var 5)])])])),Func ("XmlConv","val_.sh.37") 3 Private (FuncType (FuncType (TVar 91) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (FuncType (TVar 91) (FuncType (TCons ("Prelude","(,)") [TVar 0,TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TVar 0,TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]])))) (Rule [1,2,3] (Let [(4,Comb FuncCall ("XmlConv","val_.sh.37._#selFP10#attrs") [Var 3]),(5,Comb FuncCall ("XmlConv","val_.sh.37._#selFP11#elems") [Var 3])] (Comb ConsCall ("Prelude","(,)") [Var 4,Comb ConsCall ("Prelude",":") [Comb ConsCall ("XML","XText") [Comb FuncCall ("Prelude","apply") [Var 1,Var 2]],Var 5]]))),Func ("XmlConv","val_.sh.37._#selFP10#attrs") 1 Private (FuncType (TCons ("Prelude","(,)") [TVar 93,TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TVar 93)) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 2)])),Func ("XmlConv","val_.sh.37._#selFP11#elems") 1 Private (FuncType (TCons ("Prelude","(,)") [TVar 93,TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","[]") [TCons ("XML","XmlExp") []])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 3)])),Func ("XmlConv","int") 0 Public (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","NotRepeatable") [],TCons ("XmlConv","NoElem") [],TCons ("Prelude","Int") []]) (Rule [] (Comb FuncCall ("XmlConv","val_") [Comb FuncCall ("XmlConv","int_") []])),Func ("XmlConv","float") 0 Public (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","NotRepeatable") [],TCons ("XmlConv","NoElem") [],TCons ("Prelude","Float") []]) (Rule [] (Comb FuncCall ("XmlConv","val_") [Comb FuncCall ("XmlConv","float_") []])),Func ("XmlConv","char") 0 Public (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","NotRepeatable") [],TCons ("XmlConv","NoElem") [],TCons ("Prelude","Char") []]) (Rule [] (Comb FuncCall ("XmlConv","val_") [Comb FuncCall ("XmlConv","char_") []])),Func ("XmlConv","string") 0 Public (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","NotRepeatable") [],TCons ("XmlConv","NoElem") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (Rule [] (Comb ConsCall ("XmlConv","Conv") [Comb (FuncPartCall 1) ("XmlConv","string.rd.51") [],Comb (FuncPartCall 2) ("XmlConv","string.sh.51") []])),Func ("XmlConv","string.rd.51") 1 Private (FuncType (TCons ("Prelude","(,)") [TVar 0,TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","(,)") [TVar 0,TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]])) (Rule [1] (Let [(2,Comb FuncCall ("XmlConv","string.rd.51._#selFP13#attrs") [Var 1]),(3,Comb FuncCall ("XmlConv","string.rd.51._#selFP14#elems") [Var 1])] (Comb FuncCall ("Prelude","?") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude","[]") [],Var 1],Case  Rigid (Var 3) [Branch (Pattern ("Prelude",":") [4,5]) (Case  Rigid (Var 4) [Branch (Pattern ("XML","XText") [6]) (Comb ConsCall ("Prelude","(,)") [Var 6,Comb ConsCall ("Prelude","(,)") [Var 2,Var 5]]),Branch (Pattern ("XML","XElem") [7,8,9]) (Comb FuncCall ("Prelude","failed") [])]),Branch (Pattern ("Prelude","[]") []) (Comb FuncCall ("Prelude","failed") [])]]))),Func ("XmlConv","string.rd.51._#selFP13#attrs") 1 Private (FuncType (TCons ("Prelude","(,)") [TVar 108,TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TVar 108)) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 2)])),Func ("XmlConv","string.rd.51._#selFP14#elems") 1 Private (FuncType (TCons ("Prelude","(,)") [TVar 108,TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","[]") [TCons ("XML","XmlExp") []])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 3)])),Func ("XmlConv","string.sh.51") 2 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","(,)") [TVar 0,TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TVar 0,TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]))) (Rule [1,2] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","[]") []) (Var 2),Branch (Pattern ("Prelude",":") [3,4]) (Let [(5,Comb FuncCall ("XmlConv","string.sh.51._#selFP16#attrs") [Var 2]),(6,Comb FuncCall ("XmlConv","string.sh.51._#selFP17#elems") [Var 2])] (Comb ConsCall ("Prelude","(,)") [Var 5,Comb ConsCall ("Prelude",":") [Comb ConsCall ("XML","XText") [Var 1],Var 6]]))])),Func ("XmlConv","string.sh.51._#selFP16#attrs") 1 Private (FuncType (TCons ("Prelude","(,)") [TVar 122,TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TVar 122)) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 2)])),Func ("XmlConv","string.sh.51._#selFP17#elems") 1 Private (FuncType (TCons ("Prelude","(,)") [TVar 122,TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","[]") [TCons ("XML","XmlExp") []])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 3)])),Func ("XmlConv","!") 2 Public (FuncType (TCons ("XmlConv","XmlConv") [TVar 0,TVar 1,TVar 2]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 0,TVar 1,TVar 2]) (TCons ("XmlConv","XmlConv") [TVar 0,TVar 1,TVar 2]))) (Rule [1,2] (Case  Flex (Var 1) [Branch (Pattern ("XmlConv","Conv") [3,4]) (Case  Flex (Var 2) [Branch (Pattern ("XmlConv","Conv") [5,6]) (Comb ConsCall ("XmlConv","Conv") [Comb (FuncPartCall 1) ("XmlConv","!.rd.65") [Var 3,Var 5],Comb (FuncPartCall 1) ("XmlConv","!.sh.65") [Var 4,Var 6]])])])),Func ("XmlConv","!.rd.65") 3 Private (FuncType (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TVar 147,TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]])) (FuncType (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TVar 147,TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]])) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TVar 147,TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]])))) (Rule [1,2,3] (Comb FuncCall ("Prelude","?") [Comb FuncCall ("Prelude","apply") [Var 1,Var 3],Comb FuncCall ("Prelude","apply") [Var 2,Var 3]])),Func ("XmlConv","!.sh.65") 3 Private (FuncType (FuncType (TVar 147) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]))) (FuncType (FuncType (TVar 147) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]))) (FuncType (TVar 147) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]))))) (Rule [1,2,3] (Comb FuncCall ("Prelude","?") [Comb FuncCall ("Prelude","apply") [Var 1,Var 3],Comb FuncCall ("Prelude","apply") [Var 2,Var 3]])),Func ("XmlConv","element") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 0,TVar 1,TVar 2]) (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TCons ("XmlConv","Elem") [],TVar 2]))) (Rule [1,2] (Comb ConsCall ("XmlConv","Conv") [Comb (FuncPartCall 1) ("XmlConv","element.rd.71") [Var 1,Var 2],Comb (FuncPartCall 2) ("XmlConv","element.sh.71") [Var 1,Var 2]])),Func ("XmlConv","element.rd.71") 3 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 168,TVar 169,TVar 176]) (FuncType (TCons ("Prelude","(,)") [TVar 0,TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TVar 176,TCons ("Prelude","(,)") [TVar 0,TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]])))) (Rule [1,2,3] (Let [(4,Comb FuncCall ("XmlConv","element.rd.71._#selFP19#attrs") [Var 3]),(5,Comb FuncCall ("XmlConv","element.rd.71._#selFP20#myName") [Var 3]),(6,Comb FuncCall ("XmlConv","element.rd.71._#selFP21#myAttrs") [Var 3]),(7,Comb FuncCall ("XmlConv","element.rd.71._#selFP22#myElems") [Var 3]),(8,Comb FuncCall ("XmlConv","element.rd.71._#selFP23#elems") [Var 3])] (Case  Rigid (Comb FuncCall ("Prelude","==") [Var 5,Var 1]) [Branch (Pattern ("Prelude","True") []) (Case  Rigid (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("XmlConv","xmlReads") [Var 2],Comb ConsCall ("Prelude","(,)") [Var 6,Var 7]]) [Branch (Pattern ("Prelude","(,)") [9,10]) (Case  Rigid (Var 10) [Branch (Pattern ("Prelude","(,)") [11,12]) (Case  Rigid (Var 11) [Branch (Pattern ("Prelude","[]") []) (Case  Rigid (Var 12) [Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude","(,)") [Var 9,Comb ConsCall ("Prelude","(,)") [Var 4,Var 8]]),Branch (Pattern ("Prelude",":") [13,14]) (Comb FuncCall ("Prelude","failed") [])]),Branch (Pattern ("Prelude",":") [15,16]) (Comb FuncCall ("Prelude","failed") [])])])]),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("Prelude","failed") [])]))),Func ("XmlConv","element.rd.71._#selFP19#attrs") 1 Private (FuncType (TCons ("Prelude","(,)") [TVar 159,TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TVar 159)) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude",":") [4,5]) (Case  Flex (Var 4) [Branch (Pattern ("XML","XElem") [6,7,8]) (Var 2)])])])),Func ("XmlConv","element.rd.71._#selFP20#myName") 1 Private (FuncType (TCons ("Prelude","(,)") [TVar 159,TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude",":") [4,5]) (Case  Flex (Var 4) [Branch (Pattern ("XML","XElem") [6,7,8]) (Var 6)])])])),Func ("XmlConv","element.rd.71._#selFP21#myAttrs") 1 Private (FuncType (TCons ("Prelude","(,)") [TVar 159,TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude",":") [4,5]) (Case  Flex (Var 4) [Branch (Pattern ("XML","XElem") [6,7,8]) (Var 7)])])])),Func ("XmlConv","element.rd.71._#selFP22#myElems") 1 Private (FuncType (TCons ("Prelude","(,)") [TVar 159,TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","[]") [TCons ("XML","XmlExp") []])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude",":") [4,5]) (Case  Flex (Var 4) [Branch (Pattern ("XML","XElem") [6,7,8]) (Var 8)])])])),Func ("XmlConv","element.rd.71._#selFP23#elems") 1 Private (FuncType (TCons ("Prelude","(,)") [TVar 159,TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","[]") [TCons ("XML","XmlExp") []])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude",":") [4,5]) (Case  Flex (Var 4) [Branch (Pattern ("XML","XElem") [6,7,8]) (Var 5)])])])),Func ("XmlConv","element.sh.71") 4 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 168,TVar 169,TVar 176]) (FuncType (TVar 176) (FuncType (TCons ("Prelude","(,)") [TVar 0,TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TVar 0,TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]))))) (Rule [1,2,3,4] (Let [(5,Comb FuncCall ("XmlConv","element.sh.71._#selFP25#attrs") [Var 4]),(6,Comb FuncCall ("XmlConv","element.sh.71._#selFP26#elems") [Var 4])] (Case  Rigid (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("XmlConv","xmlShows") [Var 2],Var 3],Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude","[]") [],Comb ConsCall ("Prelude","[]") []]]) [Branch (Pattern ("Prelude","(,)") [7,8]) (Comb ConsCall ("Prelude","(,)") [Var 5,Comb ConsCall ("Prelude",":") [Comb ConsCall ("XML","XElem") [Var 1,Var 7,Var 8],Var 6]])]))),Func ("XmlConv","element.sh.71._#selFP25#attrs") 1 Private (FuncType (TCons ("Prelude","(,)") [TVar 178,TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TVar 178)) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 2)])),Func ("XmlConv","element.sh.71._#selFP26#elems") 1 Private (FuncType (TCons ("Prelude","(,)") [TVar 178,TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","[]") [TCons ("XML","XmlExp") []])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 3)])),Func ("XmlConv","empty") 1 Public (FuncType (TVar 0) (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","NotRepeatable") [],TCons ("XmlConv","NoElem") [],TVar 0])) (Rule [1] (Let [(2,Comb (FuncPartCall 1) ("XmlConv","ret") [Var 1])] (Comb ConsCall ("XmlConv","Conv") [Var 2,Comb (FuncPartCall 2) ("XmlConv","empty.sh.83") [Var 1]]))),Func ("XmlConv","empty.sh.83") 3 Private (FuncType (TVar 195) (FuncType (TVar 195) (FuncType (TVar 0) (TVar 0)))) (Rule [1,2,3] (Comb FuncCall ("Prelude","cond") [Comb FuncCall ("Prelude","=:=") [Var 2,Var 1],Var 3])),Func ("XmlConv","attr") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","(,)") [FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TVar 0),FuncType (TVar 0) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])]) (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","NotRepeatable") [],TCons ("XmlConv","NoElem") [],TVar 0]))) (Rule [1,2] (Case  Flex (Var 2) [Branch (Pattern ("Prelude","(,)") [3,4]) (Comb ConsCall ("XmlConv","Conv") [Comb (FuncPartCall 1) ("XmlConv","attr.rd.88") [Var 1,Var 3],Comb (FuncPartCall 2) ("XmlConv","attr.sh.88") [Var 1,Var 4]])])),Func ("XmlConv","attr.rd.88") 3 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TVar 238)) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TVar 0]) (TCons ("Prelude","(,)") [TVar 238,TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TVar 0]])))) (Rule [1,2,3] (Let [(4,Comb FuncCall ("XmlConv","attr.rd.88._#selFP31#attrs") [Var 3]),(5,Comb FuncCall ("XmlConv","attr.rd.88._#selFP32#elems") [Var 3]),(6,Comb FuncCall ("XmlConv","exposeBy") [Comb FuncCall ("Prelude",".") [Comb (FuncPartCall 1) ("Prelude","==") [Var 1],Comb (FuncPartCall 1) ("Prelude","fst") []],Var 4]),(7,Comb FuncCall ("XmlConv","attr.rd.88._#selFP29#value") [Var 6]),(8,Comb FuncCall ("XmlConv","attr.rd.88._#selFP30#attrs'") [Var 6])] (Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("Prelude","apply") [Var 2,Var 7],Comb ConsCall ("Prelude","(,)") [Var 8,Var 5]]))),Func ("XmlConv","attr.rd.88._#selFP31#attrs") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TVar 224]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 2)])),Func ("XmlConv","attr.rd.88._#selFP32#elems") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TVar 224]) (TVar 224)) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 3)])),Func ("XmlConv","attr.rd.88._#selFP29#value") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 2) [Branch (Pattern ("Prelude","(,)") [4,5]) (Var 5)])])),Func ("XmlConv","attr.rd.88._#selFP30#attrs'") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 2) [Branch (Pattern ("Prelude","(,)") [4,5]) (Var 3)])])),Func ("XmlConv","attr.sh.88") 4 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (FuncType (TVar 238) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (FuncType (TVar 238) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TVar 0]) (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TVar 0]))))) (Rule [1,2,3,4] (Let [(5,Comb FuncCall ("XmlConv","attr.sh.88._#selFP34#attrs") [Var 4]),(6,Comb FuncCall ("XmlConv","attr.sh.88._#selFP35#elems") [Var 4])] (Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Var 1,Comb FuncCall ("Prelude","apply") [Var 2,Var 3]],Var 5],Var 6]))),Func ("XmlConv","attr.sh.88._#selFP34#attrs") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TVar 241]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 2)])),Func ("XmlConv","attr.sh.88._#selFP35#elems") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TVar 241]) (TVar 241)) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 3)])),Func ("XmlConv","exposeBy") 2 Private (FuncType (FuncType (TVar 0) (TCons ("Prelude","Bool") [])) (FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("Prelude","(,)") [TVar 0,TCons ("Prelude","[]") [TVar 0]]))) (Rule [1,2] (Case  Flex (Var 2) [Branch (Pattern ("Prelude",":") [3,4]) (Let [(5,Comb FuncCall ("XmlConv","exposeBy") [Var 1,Var 4]),(6,Comb FuncCall ("XmlConv","exposeBy._#selFP37#y") [Var 5]),(7,Comb FuncCall ("XmlConv","exposeBy._#selFP38#ys") [Var 5])] (Case  Rigid (Comb FuncCall ("Prelude","apply") [Var 1,Var 3]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude","(,)") [Var 3,Var 4]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","(,)") [Var 6,Comb ConsCall ("Prelude",":") [Var 3,Var 7]])]))])),Func ("XmlConv","exposeBy._#selFP37#y") 1 Private (FuncType (TCons ("Prelude","(,)") [TVar 211,TCons ("Prelude","[]") [TVar 211]]) (TVar 211)) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 2)])),Func ("XmlConv","exposeBy._#selFP38#ys") 1 Private (FuncType (TCons ("Prelude","(,)") [TVar 211,TCons ("Prelude","[]") [TVar 211]]) (TCons ("Prelude","[]") [TVar 211])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 3)])),Func ("XmlConv","adapt") 2 Public (FuncType (TCons ("Prelude","(,)") [FuncType (TVar 0) (TVar 1),FuncType (TVar 1) (TVar 0)]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 2,TVar 3,TVar 0]) (TCons ("XmlConv","XmlConv") [TVar 2,TVar 3,TVar 1]))) (Rule [1,2] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [3,4]) (Case  Flex (Var 2) [Branch (Pattern ("XmlConv","Conv") [5,6]) (Let [(7,Comb FuncCall ("XmlConv","/>=") [Var 5,Comb FuncCall ("Prelude",".") [Comb (FuncPartCall 2) ("XmlConv","ret") [],Var 3]]),(8,Comb FuncCall ("Prelude",".") [Var 6,Var 4])] (Comb ConsCall ("XmlConv","Conv") [Var 7,Var 8]))])])),Func ("XmlConv","opt") 1 Public (FuncType (TCons ("XmlConv","XmlConv") [TVar 0,TVar 1,TVar 2]) (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","NotRepeatable") [],TCons ("XmlConv","NoElem") [],TCons ("Prelude","Maybe") [TVar 2]])) (Rule [1] (Comb ConsCall ("XmlConv","Conv") [Comb (FuncPartCall 1) ("XmlConv","opt.rd.105") [Var 1],Comb (FuncPartCall 1) ("XmlConv","opt.sh.105") [Var 1]])),Func ("XmlConv","opt.rd.105") 2 Private (FuncType (TCons ("XmlConv","XmlConv") [TVar 286,TVar 287,TVar 298]) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 298],TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]]))) (Rule [1,2] (Comb FuncCall ("Prelude","?") [Comb FuncCall ("XmlConv","ret") [Comb ConsCall ("Prelude","Nothing") [],Var 2],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("XmlConv","/>=") [Comb FuncCall ("XmlConv","xmlReads") [Var 1],Comb FuncCall ("Prelude",".") [Comb (FuncPartCall 2) ("XmlConv","ret") [],Comb (ConsPartCall 1) ("Prelude","Just") []]],Var 2]])),Func ("XmlConv","opt.sh.105") 2 Private (FuncType (TCons ("XmlConv","XmlConv") [TVar 286,TVar 287,TVar 298]) (FuncType (TCons ("Prelude","Maybe") [TVar 298]) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]])))) (Rule [1,2] (Case  Flex (Var 2) [Branch (Pattern ("Prelude","Nothing") []) (Comb (FuncPartCall 1) ("Prelude","id") []),Branch (Pattern ("Prelude","Just") [3]) (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("XmlConv","xmlShows") [Var 1],Var 3])])),Func ("XmlConv","rep") 1 Public (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 0,TVar 1]) (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","NotRepeatable") [],TCons ("XmlConv","NoElem") [],TCons ("Prelude","[]") [TVar 1]])) (Rule [1] (Let [(2,Comb FuncCall ("Prelude",".") [Comb (FuncPartCall 1) ("Prelude","foldr") [Comb (FuncPartCall 2) ("Prelude",".") [],Comb (FuncPartCall 1) ("Prelude","id") []],Comb (FuncPartCall 1) ("Prelude","map") [Comb FuncCall ("XmlConv","xmlShows") [Var 1]]])] (Comb ConsCall ("XmlConv","Conv") [Comb (FuncPartCall 1) ("XmlConv","rep.rd.113") [Var 1],Var 2]))),Func ("XmlConv","rep.rd.113") 2 Private (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 316,TVar 318]) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TVar 318],TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]]))) (Rule [1,2] (Comb FuncCall ("Prelude","?") [Comb FuncCall ("XmlConv","ret") [Comb ConsCall ("Prelude","[]") [],Var 2],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("XmlConv","/>=") [Comb FuncCall ("XmlConv","xmlReads") [Var 1],Comb (FuncPartCall 1) ("XmlConv","rep.rd.113._#lambda6") [Var 1]],Var 2]])),Func ("XmlConv","rep.rd.113._#lambda6") 2 Private (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 316,TVar 318]) (FuncType (TVar 318) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TVar 318],TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]])))) (Rule [1,2] (Comb FuncCall ("XmlConv","/>=") [Comb (FuncPartCall 1) ("XmlConv","rep.rd.113") [Var 1],Comb (FuncPartCall 1) ("XmlConv","rep.rd.113._#lambda6._#lambda7") [Var 2]])),Func ("XmlConv","rep.rd.113._#lambda6._#lambda7") 2 Private (FuncType (TVar 318) (FuncType (TCons ("Prelude","[]") [TVar 318]) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TVar 318],TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]])))) (Rule [1,2] (Comb (FuncPartCall 1) ("XmlConv","ret") [Comb ConsCall ("Prelude",":") [Var 1,Var 2]])),Func ("XmlConv","aInt") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","NotRepeatable") [],TCons ("XmlConv","NoElem") [],TCons ("Prelude","Int") []])) (Rule [1] (Comb FuncCall ("XmlConv","attr") [Var 1,Comb FuncCall ("XmlConv","int_") []])),Func ("XmlConv","aFloat") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","NotRepeatable") [],TCons ("XmlConv","NoElem") [],TCons ("Prelude","Float") []])) (Rule [1] (Comb FuncCall ("XmlConv","attr") [Var 1,Comb FuncCall ("XmlConv","float_") []])),Func ("XmlConv","aChar") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","NotRepeatable") [],TCons ("XmlConv","NoElem") [],TCons ("Prelude","Char") []])) (Rule [1] (Comb FuncCall ("XmlConv","attr") [Var 1,Comb FuncCall ("XmlConv","char_") []])),Func ("XmlConv","aString") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","NotRepeatable") [],TCons ("XmlConv","NoElem") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]])) (Rule [1] (Comb FuncCall ("XmlConv","attr") [Var 1,Comb FuncCall ("XmlConv","string_") []])),Func ("XmlConv","aBool") 3 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","NotRepeatable") [],TCons ("XmlConv","NoElem") [],TCons ("Prelude","Bool") []])))) (Rule [1,2,3] (Comb FuncCall ("XmlConv","attr") [Var 1,Comb FuncCall ("XmlConv","bool_") [Var 2,Var 3]])),Func ("XmlConv","eInt") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TCons ("XmlConv","Elem") [],TCons ("Prelude","Int") []])) (Rule [1] (Comb FuncCall ("XmlConv","element") [Var 1,Comb FuncCall ("XmlConv","int") []])),Func ("XmlConv","eFloat") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TCons ("XmlConv","Elem") [],TCons ("Prelude","Float") []])) (Rule [1] (Comb FuncCall ("XmlConv","element") [Var 1,Comb FuncCall ("XmlConv","float") []])),Func ("XmlConv","eChar") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TCons ("XmlConv","Elem") [],TCons ("Prelude","Char") []])) (Rule [1] (Comb FuncCall ("XmlConv","element") [Var 1,Comb FuncCall ("XmlConv","char") []])),Func ("XmlConv","eString") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TCons ("XmlConv","Elem") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]])) (Rule [1] (Comb FuncCall ("XmlConv","element") [Var 1,Comb FuncCall ("XmlConv","string") []])),Func ("XmlConv","eBool") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TCons ("XmlConv","Elem") [],TCons ("Prelude","Bool") []]))) (Rule [1,2] (Comb FuncCall ("XmlConv","!") [Comb FuncCall ("XmlConv","eEmpty") [Var 1,Comb ConsCall ("Prelude","True") []],Comb FuncCall ("XmlConv","eEmpty") [Var 2,Comb ConsCall ("Prelude","False") []]])),Func ("XmlConv","eEmpty") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TVar 0) (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TCons ("XmlConv","Elem") [],TVar 0]))) (Rule [1,2] (Comb FuncCall ("XmlConv","element") [Var 1,Comb FuncCall ("XmlConv","empty") [Var 2]])),Func ("XmlConv","eOpt") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 0,TVar 1,TVar 2]) (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TCons ("XmlConv","Elem") [],TCons ("Prelude","Maybe") [TVar 2]]))) (Rule [1,2] (Comb FuncCall ("XmlConv","element") [Var 1,Comb FuncCall ("XmlConv","opt") [Var 2]])),Func ("XmlConv","eRep") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 0,TVar 1]) (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TCons ("XmlConv","Elem") [],TCons ("Prelude","[]") [TVar 1]]))) (Rule [1,2] (Comb FuncCall ("XmlConv","element") [Var 1,Comb FuncCall ("XmlConv","rep") [Var 2]])),Func ("XmlConv","seq1") 2 Public (FuncType (FuncType (TVar 0) (TVar 1)) (FuncType (TCons ("XmlConv","XmlConv") [TVar 2,TVar 3,TVar 0]) (TCons ("XmlConv","XmlConv") [TVar 2,TCons ("XmlConv","NoElem") [],TVar 1]))) (Rule [1,2] (Let [(3,Comb FuncCall ("XmlConv","/>=") [Comb FuncCall ("XmlConv","xmlReads") [Var 2],Comb FuncCall ("Prelude",".") [Comb (FuncPartCall 2) ("XmlConv","ret") [],Var 1]])] (Comb ConsCall ("XmlConv","Conv") [Var 3,Comb (FuncPartCall 1) ("XmlConv","seq1.sh.146") [Var 1,Var 2]]))),Func ("XmlConv","seq1.cf.146") 2 Private (FuncType (FuncType (TVar 425) (TVar 413)) (FuncType (TVar 425) (TVar 413))) (Rule [1,2] (Comb FuncCall ("Prelude","apply") [Var 1,Var 2])),Func ("XmlConv","seq1.sh.146") 3 Private (FuncType (FuncType (TVar 425) (TVar 413)) (FuncType (TCons ("XmlConv","XmlConv") [TVar 417,TVar 418,TVar 425]) (FuncType (TVar 413) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]))))) (Rule [1,2,3] (Free [4] (Comb FuncCall ("Prelude","cond") [Comb FuncCall ("Prelude","=:<=") [Comb FuncCall ("XmlConv","seq1.cf.146") [Var 1,Var 4],Var 3],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("XmlConv","xmlShows") [Var 2],Var 4]]))),Func ("XmlConv","repSeq1") 2 Public (FuncType (FuncType (TVar 0) (TVar 1)) (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 2,TVar 0]) (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","NotRepeatable") [],TCons ("XmlConv","NoElem") [],TCons ("Prelude","[]") [TVar 1]]))) (Rule [1,2] (Comb FuncCall ("XmlConv","rep") [Comb FuncCall ("XmlConv","seq1") [Var 1,Var 2]])),Func ("XmlConv","eSeq1") 3 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (FuncType (TVar 0) (TVar 1)) (FuncType (TCons ("XmlConv","XmlConv") [TVar 2,TVar 3,TVar 0]) (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TCons ("XmlConv","Elem") [],TVar 1])))) (Rule [1,2,3] (Comb FuncCall ("XmlConv","element") [Var 1,Comb FuncCall ("XmlConv","seq1") [Var 2,Var 3]])),Func ("XmlConv","eRepSeq1") 3 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (FuncType (TVar 0) (TVar 1)) (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 2,TVar 0]) (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TCons ("XmlConv","Elem") [],TCons ("Prelude","[]") [TVar 1]])))) (Rule [1,2,3] (Comb FuncCall ("XmlConv","element") [Var 1,Comb FuncCall ("XmlConv","repSeq1") [Var 2,Var 3]])),Func ("XmlConv","seq2_") 3 Private (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (TVar 2))) (FuncType (TCons ("XmlConv","XmlConv") [TVar 3,TVar 4,TVar 0]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 5,TVar 6,TVar 1]) (TCons ("XmlConv","XmlConv") [TVar 7,TCons ("XmlConv","NoElem") [],TVar 2])))) (Rule [1,2,3] (Let [(4,Comb FuncCall ("XmlConv","/>=") [Comb FuncCall ("XmlConv","xmlReads") [Var 2],Comb (FuncPartCall 1) ("XmlConv","seq2_._#lambda9") [Var 1,Var 3]])] (Comb ConsCall ("XmlConv","Conv") [Var 4,Comb (FuncPartCall 1) ("XmlConv","seq2_.sh.159") [Var 1,Var 2,Var 3]]))),Func ("XmlConv","seq2_.cf.159") 3 Private (FuncType (FuncType (TVar 502) (FuncType (TVar 503) (TVar 486))) (FuncType (TVar 502) (FuncType (TVar 503) (TVar 486)))) (Rule [1,2,3] (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 1,Var 2],Var 3])),Func ("XmlConv","seq2_._#lambda9") 3 Private (FuncType (FuncType (TVar 502) (FuncType (TVar 503) (TVar 486))) (FuncType (TCons ("XmlConv","XmlConv") [TVar 496,TVar 497,TVar 503]) (FuncType (TVar 502) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TVar 486,TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]]))))) (Rule [1,2,3] (Comb FuncCall ("XmlConv","/>=") [Comb FuncCall ("XmlConv","xmlReads") [Var 2],Comb (FuncPartCall 1) ("XmlConv","seq2_._#lambda9._#lambda10") [Var 3,Var 1]])),Func ("XmlConv","seq2_._#lambda9._#lambda10") 3 Private (FuncType (TVar 502) (FuncType (FuncType (TVar 502) (FuncType (TVar 503) (TVar 486))) (FuncType (TVar 503) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TVar 486,TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]]))))) (Rule [1,2,3] (Comb (FuncPartCall 1) ("XmlConv","ret") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 2,Var 1],Var 3]])),Func ("XmlConv","seq2_.sh.159") 4 Private (FuncType (FuncType (TVar 502) (FuncType (TVar 503) (TVar 486))) (FuncType (TCons ("XmlConv","XmlConv") [TVar 490,TVar 491,TVar 502]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 496,TVar 497,TVar 503]) (FuncType (TVar 486) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]])))))) (Rule [1,2,3,4] (Free [5,6] (Comb FuncCall ("Prelude","cond") [Comb FuncCall ("Prelude","=:<=") [Comb FuncCall ("XmlConv","seq2_.cf.159") [Var 1,Var 5,Var 6],Var 4],Comb FuncCall ("Prelude",".") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("XmlConv","xmlShows") [Var 2],Var 5],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("XmlConv","xmlShows") [Var 3],Var 6]]]))),Func ("XmlConv","seq2") 0 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (TVar 2))) (FuncType (TCons ("XmlConv","XmlConv") [TVar 3,TVar 4,TVar 0]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 5,TVar 6,TVar 1]) (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","NotRepeatable") [],TCons ("XmlConv","NoElem") [],TVar 2])))) (Rule [] (Comb (FuncPartCall 3) ("XmlConv","seq2_") [])),Func ("XmlConv","repSeq2") 3 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (TVar 2))) (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 3,TVar 0]) (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 4,TVar 1]) (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","NotRepeatable") [],TCons ("XmlConv","NoElem") [],TCons ("Prelude","[]") [TVar 2]])))) (Rule [1,2,3] (Comb FuncCall ("XmlConv","rep") [Comb FuncCall ("XmlConv","seq2_") [Var 1,Var 2,Var 3]])),Func ("XmlConv","eSeq2") 4 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (TVar 2))) (FuncType (TCons ("XmlConv","XmlConv") [TVar 3,TVar 4,TVar 0]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 5,TVar 6,TVar 1]) (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TCons ("XmlConv","Elem") [],TVar 2]))))) (Rule [1,2,3,4] (Comb FuncCall ("XmlConv","element") [Var 1,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("XmlConv","seq2") [],Var 2],Var 3],Var 4]])),Func ("XmlConv","eRepSeq2") 4 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (TVar 2))) (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 3,TVar 0]) (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 4,TVar 1]) (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TCons ("XmlConv","Elem") [],TCons ("Prelude","[]") [TVar 2]]))))) (Rule [1,2,3,4] (Comb FuncCall ("XmlConv","element") [Var 1,Comb FuncCall ("XmlConv","repSeq2") [Var 2,Var 3,Var 4]])),Func ("XmlConv","seq3_") 4 Private (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (FuncType (TVar 2) (TVar 3)))) (FuncType (TCons ("XmlConv","XmlConv") [TVar 4,TVar 5,TVar 0]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 6,TVar 7,TVar 1]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 8,TVar 9,TVar 2]) (TCons ("XmlConv","XmlConv") [TVar 10,TCons ("XmlConv","NoElem") [],TVar 3]))))) (Rule [1,2,3,4] (Let [(5,Comb FuncCall ("XmlConv","/>=") [Comb FuncCall ("XmlConv","xmlReads") [Var 2],Comb (FuncPartCall 1) ("XmlConv","seq3_._#lambda12") [Var 1,Var 3,Var 4]])] (Comb ConsCall ("XmlConv","Conv") [Var 5,Comb (FuncPartCall 1) ("XmlConv","seq3_.sh.176") [Var 1,Var 2,Var 3,Var 4]]))),Func ("XmlConv","seq3_.cf.176") 4 Private (FuncType (FuncType (TVar 633) (FuncType (TVar 634) (FuncType (TVar 635) (TVar 611)))) (FuncType (TVar 633) (FuncType (TVar 634) (FuncType (TVar 635) (TVar 611))))) (Rule [1,2,3,4] (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 1,Var 2],Var 3],Var 4])),Func ("XmlConv","seq3_._#lambda12") 4 Private (FuncType (FuncType (TVar 633) (FuncType (TVar 634) (FuncType (TVar 635) (TVar 611)))) (FuncType (TCons ("XmlConv","XmlConv") [TVar 621,TVar 622,TVar 634]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 627,TVar 628,TVar 635]) (FuncType (TVar 633) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TVar 611,TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]])))))) (Rule [1,2,3,4] (Comb FuncCall ("XmlConv","/>=") [Comb FuncCall ("XmlConv","xmlReads") [Var 2],Comb (FuncPartCall 1) ("XmlConv","seq3_._#lambda12._#lambda13") [Var 4,Var 1,Var 3]])),Func ("XmlConv","seq3_._#lambda12._#lambda13") 4 Private (FuncType (TVar 633) (FuncType (FuncType (TVar 633) (FuncType (TVar 634) (FuncType (TVar 635) (TVar 611)))) (FuncType (TCons ("XmlConv","XmlConv") [TVar 627,TVar 628,TVar 635]) (FuncType (TVar 634) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TVar 611,TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]])))))) (Rule [1,2,3,4] (Comb FuncCall ("XmlConv","/>=") [Comb FuncCall ("XmlConv","xmlReads") [Var 3],Comb (FuncPartCall 1) ("XmlConv","seq3_._#lambda12._#lambda13._#lambda14") [Var 1,Var 4,Var 2]])),Func ("XmlConv","seq3_._#lambda12._#lambda13._#lambda14") 4 Private (FuncType (TVar 633) (FuncType (TVar 634) (FuncType (FuncType (TVar 633) (FuncType (TVar 634) (FuncType (TVar 635) (TVar 611)))) (FuncType (TVar 635) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TVar 611,TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]])))))) (Rule [1,2,3,4] (Comb (FuncPartCall 1) ("XmlConv","ret") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 3,Var 1],Var 2],Var 4]])),Func ("XmlConv","seq3_.sh.176") 5 Private (FuncType (FuncType (TVar 633) (FuncType (TVar 634) (FuncType (TVar 635) (TVar 611)))) (FuncType (TCons ("XmlConv","XmlConv") [TVar 615,TVar 616,TVar 633]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 621,TVar 622,TVar 634]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 627,TVar 628,TVar 635]) (FuncType (TVar 611) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]))))))) (Rule [1,2,3,4,5] (Free [6,7,8] (Comb FuncCall ("Prelude","cond") [Comb FuncCall ("Prelude","=:<=") [Comb FuncCall ("XmlConv","seq3_.cf.176") [Var 1,Var 6,Var 7,Var 8],Var 5],Comb FuncCall ("Prelude",".") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("XmlConv","xmlShows") [Var 2],Var 6],Comb FuncCall ("Prelude",".") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("XmlConv","xmlShows") [Var 3],Var 7],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("XmlConv","xmlShows") [Var 4],Var 8]]]]))),Func ("XmlConv","seq3") 0 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (FuncType (TVar 2) (TVar 3)))) (FuncType (TCons ("XmlConv","XmlConv") [TVar 4,TVar 5,TVar 0]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 6,TVar 7,TVar 1]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 8,TVar 9,TVar 2]) (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","NotRepeatable") [],TCons ("XmlConv","NoElem") [],TVar 3]))))) (Rule [] (Comb (FuncPartCall 4) ("XmlConv","seq3_") [])),Func ("XmlConv","repSeq3") 4 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (FuncType (TVar 2) (TVar 3)))) (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 4,TVar 0]) (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 5,TVar 1]) (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 6,TVar 2]) (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","NotRepeatable") [],TCons ("XmlConv","NoElem") [],TCons ("Prelude","[]") [TVar 3]]))))) (Rule [1,2,3,4] (Comb FuncCall ("XmlConv","rep") [Comb FuncCall ("XmlConv","seq3_") [Var 1,Var 2,Var 3,Var 4]])),Func ("XmlConv","eSeq3") 5 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (FuncType (TVar 2) (TVar 3)))) (FuncType (TCons ("XmlConv","XmlConv") [TVar 4,TVar 5,TVar 0]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 6,TVar 7,TVar 1]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 8,TVar 9,TVar 2]) (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TCons ("XmlConv","Elem") [],TVar 3])))))) (Rule [1,2,3,4,5] (Comb FuncCall ("XmlConv","element") [Var 1,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("XmlConv","seq3") [],Var 2],Var 3],Var 4],Var 5]])),Func ("XmlConv","eRepSeq3") 5 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (FuncType (TVar 2) (TVar 3)))) (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 4,TVar 0]) (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 5,TVar 1]) (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 6,TVar 2]) (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TCons ("XmlConv","Elem") [],TCons ("Prelude","[]") [TVar 3]])))))) (Rule [1,2,3,4,5] (Comb FuncCall ("XmlConv","element") [Var 1,Comb FuncCall ("XmlConv","repSeq3") [Var 2,Var 3,Var 4,Var 5]])),Func ("XmlConv","seq4_") 5 Private (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (FuncType (TVar 2) (FuncType (TVar 3) (TVar 4))))) (FuncType (TCons ("XmlConv","XmlConv") [TVar 5,TVar 6,TVar 0]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 7,TVar 8,TVar 1]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 9,TVar 10,TVar 2]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 11,TVar 12,TVar 3]) (TCons ("XmlConv","XmlConv") [TVar 13,TCons ("XmlConv","NoElem") [],TVar 4])))))) (Rule [1,2,3,4,5] (Let [(6,Comb FuncCall ("XmlConv","/>=") [Comb FuncCall ("XmlConv","xmlReads") [Var 2],Comb (FuncPartCall 1) ("XmlConv","seq4_._#lambda16") [Var 1,Var 3,Var 4,Var 5]])] (Comb ConsCall ("XmlConv","Conv") [Var 6,Comb (FuncPartCall 1) ("XmlConv","seq4_.sh.194") [Var 1,Var 2,Var 3,Var 4,Var 5]]))),Func ("XmlConv","seq4_.cf.194") 5 Private (FuncType (FuncType (TVar 808) (FuncType (TVar 809) (FuncType (TVar 810) (FuncType (TVar 811) (TVar 780))))) (FuncType (TVar 808) (FuncType (TVar 809) (FuncType (TVar 810) (FuncType (TVar 811) (TVar 780)))))) (Rule [1,2,3,4,5] (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 1,Var 2],Var 3],Var 4],Var 5])),Func ("XmlConv","seq4_._#lambda16") 5 Private (FuncType (FuncType (TVar 808) (FuncType (TVar 809) (FuncType (TVar 810) (FuncType (TVar 811) (TVar 780))))) (FuncType (TCons ("XmlConv","XmlConv") [TVar 790,TVar 791,TVar 809]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 796,TVar 797,TVar 810]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 802,TVar 803,TVar 811]) (FuncType (TVar 808) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TVar 780,TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]]))))))) (Rule [1,2,3,4,5] (Comb FuncCall ("XmlConv","/>=") [Comb FuncCall ("XmlConv","xmlReads") [Var 2],Comb (FuncPartCall 1) ("XmlConv","seq4_._#lambda16._#lambda17") [Var 5,Var 1,Var 3,Var 4]])),Func ("XmlConv","seq4_._#lambda16._#lambda17") 5 Private (FuncType (TVar 808) (FuncType (FuncType (TVar 808) (FuncType (TVar 809) (FuncType (TVar 810) (FuncType (TVar 811) (TVar 780))))) (FuncType (TCons ("XmlConv","XmlConv") [TVar 796,TVar 797,TVar 810]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 802,TVar 803,TVar 811]) (FuncType (TVar 809) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TVar 780,TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]]))))))) (Rule [1,2,3,4,5] (Comb FuncCall ("XmlConv","/>=") [Comb FuncCall ("XmlConv","xmlReads") [Var 3],Comb (FuncPartCall 1) ("XmlConv","seq4_._#lambda16._#lambda17._#lambda18") [Var 1,Var 5,Var 2,Var 4]])),Func ("XmlConv","seq4_._#lambda16._#lambda17._#lambda18") 5 Private (FuncType (TVar 808) (FuncType (TVar 809) (FuncType (FuncType (TVar 808) (FuncType (TVar 809) (FuncType (TVar 810) (FuncType (TVar 811) (TVar 780))))) (FuncType (TCons ("XmlConv","XmlConv") [TVar 802,TVar 803,TVar 811]) (FuncType (TVar 810) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TVar 780,TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]]))))))) (Rule [1,2,3,4,5] (Comb FuncCall ("XmlConv","/>=") [Comb FuncCall ("XmlConv","xmlReads") [Var 4],Comb (FuncPartCall 1) ("XmlConv","seq4_._#lambda16._#lambda17._#lambda18._#lambda19") [Var 1,Var 2,Var 5,Var 3]])),Func ("XmlConv","seq4_._#lambda16._#lambda17._#lambda18._#lambda19") 5 Private (FuncType (TVar 808) (FuncType (TVar 809) (FuncType (TVar 810) (FuncType (FuncType (TVar 808) (FuncType (TVar 809) (FuncType (TVar 810) (FuncType (TVar 811) (TVar 780))))) (FuncType (TVar 811) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TVar 780,TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]]))))))) (Rule [1,2,3,4,5] (Comb (FuncPartCall 1) ("XmlConv","ret") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 4,Var 1],Var 2],Var 3],Var 5]])),Func ("XmlConv","seq4_.sh.194") 6 Private (FuncType (FuncType (TVar 808) (FuncType (TVar 809) (FuncType (TVar 810) (FuncType (TVar 811) (TVar 780))))) (FuncType (TCons ("XmlConv","XmlConv") [TVar 784,TVar 785,TVar 808]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 790,TVar 791,TVar 809]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 796,TVar 797,TVar 810]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 802,TVar 803,TVar 811]) (FuncType (TVar 780) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]])))))))) (Rule [1,2,3,4,5,6] (Free [7,8,9,10] (Comb FuncCall ("Prelude","cond") [Comb FuncCall ("Prelude","=:<=") [Comb FuncCall ("XmlConv","seq4_.cf.194") [Var 1,Var 7,Var 8,Var 9,Var 10],Var 6],Comb FuncCall ("Prelude",".") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("XmlConv","xmlShows") [Var 2],Var 7],Comb FuncCall ("Prelude",".") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("XmlConv","xmlShows") [Var 3],Var 8],Comb FuncCall ("Prelude",".") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("XmlConv","xmlShows") [Var 4],Var 9],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("XmlConv","xmlShows") [Var 5],Var 10]]]]]))),Func ("XmlConv","seq4") 0 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (FuncType (TVar 2) (FuncType (TVar 3) (TVar 4))))) (FuncType (TCons ("XmlConv","XmlConv") [TVar 5,TVar 6,TVar 0]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 7,TVar 8,TVar 1]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 9,TVar 10,TVar 2]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 11,TVar 12,TVar 3]) (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","NotRepeatable") [],TCons ("XmlConv","NoElem") [],TVar 4])))))) (Rule [] (Comb (FuncPartCall 5) ("XmlConv","seq4_") [])),Func ("XmlConv","repSeq4") 5 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (FuncType (TVar 2) (FuncType (TVar 3) (TVar 4))))) (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 5,TVar 0]) (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 6,TVar 1]) (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 7,TVar 2]) (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 8,TVar 3]) (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","NotRepeatable") [],TCons ("XmlConv","NoElem") [],TCons ("Prelude","[]") [TVar 4]])))))) (Rule [1,2,3,4,5] (Comb FuncCall ("XmlConv","rep") [Comb FuncCall ("XmlConv","seq4_") [Var 1,Var 2,Var 3,Var 4,Var 5]])),Func ("XmlConv","eSeq4") 6 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (FuncType (TVar 2) (FuncType (TVar 3) (TVar 4))))) (FuncType (TCons ("XmlConv","XmlConv") [TVar 5,TVar 6,TVar 0]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 7,TVar 8,TVar 1]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 9,TVar 10,TVar 2]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 11,TVar 12,TVar 3]) (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TCons ("XmlConv","Elem") [],TVar 4]))))))) (Rule [1,2,3,4,5,6] (Comb FuncCall ("XmlConv","element") [Var 1,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("XmlConv","seq4") [],Var 2],Var 3],Var 4],Var 5],Var 6]])),Func ("XmlConv","eRepSeq4") 6 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (FuncType (TVar 2) (FuncType (TVar 3) (TVar 4))))) (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 5,TVar 0]) (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 6,TVar 1]) (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 7,TVar 2]) (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 8,TVar 3]) (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TCons ("XmlConv","Elem") [],TCons ("Prelude","[]") [TVar 4]]))))))) (Rule [1,2,3,4,5,6] (Comb FuncCall ("XmlConv","element") [Var 1,Comb FuncCall ("XmlConv","repSeq4") [Var 2,Var 3,Var 4,Var 5,Var 6]])),Func ("XmlConv","seq5_") 6 Private (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (FuncType (TVar 2) (FuncType (TVar 3) (FuncType (TVar 4) (TVar 5)))))) (FuncType (TCons ("XmlConv","XmlConv") [TVar 6,TVar 7,TVar 0]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 8,TVar 9,TVar 1]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 10,TVar 11,TVar 2]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 12,TVar 13,TVar 3]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 14,TVar 15,TVar 4]) (TCons ("XmlConv","XmlConv") [TVar 16,TCons ("XmlConv","NoElem") [],TVar 5]))))))) (Rule [1,2,3,4,5,6] (Let [(7,Comb FuncCall ("XmlConv","/>=") [Comb FuncCall ("XmlConv","xmlReads") [Var 2],Comb (FuncPartCall 1) ("XmlConv","seq5_._#lambda21") [Var 1,Var 3,Var 4,Var 5,Var 6]])] (Comb ConsCall ("XmlConv","Conv") [Var 7,Comb (FuncPartCall 1) ("XmlConv","seq5_.sh.213") [Var 1,Var 2,Var 3,Var 4,Var 5,Var 6]]))),Func ("XmlConv","seq5_.cf.213") 6 Private (FuncType (FuncType (TVar 1027) (FuncType (TVar 1028) (FuncType (TVar 1029) (FuncType (TVar 1030) (FuncType (TVar 1031) (TVar 993)))))) (FuncType (TVar 1027) (FuncType (TVar 1028) (FuncType (TVar 1029) (FuncType (TVar 1030) (FuncType (TVar 1031) (TVar 993))))))) (Rule [1,2,3,4,5,6] (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 1,Var 2],Var 3],Var 4],Var 5],Var 6])),Func ("XmlConv","seq5_._#lambda21") 6 Private (FuncType (FuncType (TVar 1027) (FuncType (TVar 1028) (FuncType (TVar 1029) (FuncType (TVar 1030) (FuncType (TVar 1031) (TVar 993)))))) (FuncType (TCons ("XmlConv","XmlConv") [TVar 1003,TVar 1004,TVar 1028]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 1009,TVar 1010,TVar 1029]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 1015,TVar 1016,TVar 1030]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 1021,TVar 1022,TVar 1031]) (FuncType (TVar 1027) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TVar 993,TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]])))))))) (Rule [1,2,3,4,5,6] (Comb FuncCall ("XmlConv","/>=") [Comb FuncCall ("XmlConv","xmlReads") [Var 2],Comb (FuncPartCall 1) ("XmlConv","seq5_._#lambda21._#lambda22") [Var 6,Var 1,Var 3,Var 4,Var 5]])),Func ("XmlConv","seq5_._#lambda21._#lambda22") 6 Private (FuncType (TVar 1027) (FuncType (FuncType (TVar 1027) (FuncType (TVar 1028) (FuncType (TVar 1029) (FuncType (TVar 1030) (FuncType (TVar 1031) (TVar 993)))))) (FuncType (TCons ("XmlConv","XmlConv") [TVar 1009,TVar 1010,TVar 1029]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 1015,TVar 1016,TVar 1030]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 1021,TVar 1022,TVar 1031]) (FuncType (TVar 1028) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TVar 993,TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]])))))))) (Rule [1,2,3,4,5,6] (Comb FuncCall ("XmlConv","/>=") [Comb FuncCall ("XmlConv","xmlReads") [Var 3],Comb (FuncPartCall 1) ("XmlConv","seq5_._#lambda21._#lambda22._#lambda23") [Var 1,Var 6,Var 2,Var 4,Var 5]])),Func ("XmlConv","seq5_._#lambda21._#lambda22._#lambda23") 6 Private (FuncType (TVar 1027) (FuncType (TVar 1028) (FuncType (FuncType (TVar 1027) (FuncType (TVar 1028) (FuncType (TVar 1029) (FuncType (TVar 1030) (FuncType (TVar 1031) (TVar 993)))))) (FuncType (TCons ("XmlConv","XmlConv") [TVar 1015,TVar 1016,TVar 1030]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 1021,TVar 1022,TVar 1031]) (FuncType (TVar 1029) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TVar 993,TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]])))))))) (Rule [1,2,3,4,5,6] (Comb FuncCall ("XmlConv","/>=") [Comb FuncCall ("XmlConv","xmlReads") [Var 4],Comb (FuncPartCall 1) ("XmlConv","seq5_._#lambda21._#lambda22._#lambda23._#lambda24") [Var 1,Var 2,Var 6,Var 3,Var 5]])),Func ("XmlConv","seq5_._#lambda21._#lambda22._#lambda23._#lambda24") 6 Private (FuncType (TVar 1027) (FuncType (TVar 1028) (FuncType (TVar 1029) (FuncType (FuncType (TVar 1027) (FuncType (TVar 1028) (FuncType (TVar 1029) (FuncType (TVar 1030) (FuncType (TVar 1031) (TVar 993)))))) (FuncType (TCons ("XmlConv","XmlConv") [TVar 1021,TVar 1022,TVar 1031]) (FuncType (TVar 1030) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TVar 993,TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]])))))))) (Rule [1,2,3,4,5,6] (Comb FuncCall ("XmlConv","/>=") [Comb FuncCall ("XmlConv","xmlReads") [Var 5],Comb (FuncPartCall 1) ("XmlConv","seq5_._#lambda21._#lambda22._#lambda23._#lambda24._#lambda25") [Var 1,Var 2,Var 3,Var 4,Var 6]])),Func ("XmlConv","seq5_._#lambda21._#lambda22._#lambda23._#lambda24._#lambda25") 6 Private (FuncType (TVar 1027) (FuncType (TVar 1028) (FuncType (TVar 1029) (FuncType (FuncType (TVar 1027) (FuncType (TVar 1028) (FuncType (TVar 1029) (FuncType (TVar 1030) (FuncType (TVar 1031) (TVar 993)))))) (FuncType (TVar 1030) (FuncType (TVar 1031) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TVar 993,TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]])))))))) (Rule [1,2,3,4,5,6] (Comb (FuncPartCall 1) ("XmlConv","ret") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 4,Var 1],Var 2],Var 3],Var 5],Var 6]])),Func ("XmlConv","seq5_.sh.213") 7 Private (FuncType (FuncType (TVar 1027) (FuncType (TVar 1028) (FuncType (TVar 1029) (FuncType (TVar 1030) (FuncType (TVar 1031) (TVar 993)))))) (FuncType (TCons ("XmlConv","XmlConv") [TVar 997,TVar 998,TVar 1027]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 1003,TVar 1004,TVar 1028]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 1009,TVar 1010,TVar 1029]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 1015,TVar 1016,TVar 1030]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 1021,TVar 1022,TVar 1031]) (FuncType (TVar 993) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]))))))))) (Rule [1,2,3,4,5,6,7] (Free [8,9,10,11,12] (Comb FuncCall ("Prelude","cond") [Comb FuncCall ("Prelude","=:<=") [Comb FuncCall ("XmlConv","seq5_.cf.213") [Var 1,Var 8,Var 9,Var 10,Var 11,Var 12],Var 7],Comb FuncCall ("Prelude",".") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("XmlConv","xmlShows") [Var 2],Var 8],Comb FuncCall ("Prelude",".") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("XmlConv","xmlShows") [Var 3],Var 9],Comb FuncCall ("Prelude",".") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("XmlConv","xmlShows") [Var 4],Var 10],Comb FuncCall ("Prelude",".") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("XmlConv","xmlShows") [Var 5],Var 11],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("XmlConv","xmlShows") [Var 6],Var 12]]]]]]))),Func ("XmlConv","seq5") 0 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (FuncType (TVar 2) (FuncType (TVar 3) (FuncType (TVar 4) (TVar 5)))))) (FuncType (TCons ("XmlConv","XmlConv") [TVar 6,TVar 7,TVar 0]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 8,TVar 9,TVar 1]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 10,TVar 11,TVar 2]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 12,TVar 13,TVar 3]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 14,TVar 15,TVar 4]) (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","NotRepeatable") [],TCons ("XmlConv","NoElem") [],TVar 5]))))))) (Rule [] (Comb (FuncPartCall 6) ("XmlConv","seq5_") [])),Func ("XmlConv","repSeq5") 6 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (FuncType (TVar 2) (FuncType (TVar 3) (FuncType (TVar 4) (TVar 5)))))) (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 6,TVar 0]) (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 7,TVar 1]) (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 8,TVar 2]) (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 9,TVar 3]) (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 10,TVar 4]) (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","NotRepeatable") [],TCons ("XmlConv","NoElem") [],TCons ("Prelude","[]") [TVar 5]]))))))) (Rule [1,2,3,4,5,6] (Comb FuncCall ("XmlConv","rep") [Comb FuncCall ("XmlConv","seq5_") [Var 1,Var 2,Var 3,Var 4,Var 5,Var 6]])),Func ("XmlConv","eSeq5") 7 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (FuncType (TVar 2) (FuncType (TVar 3) (FuncType (TVar 4) (TVar 5)))))) (FuncType (TCons ("XmlConv","XmlConv") [TVar 6,TVar 7,TVar 0]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 8,TVar 9,TVar 1]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 10,TVar 11,TVar 2]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 12,TVar 13,TVar 3]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 14,TVar 15,TVar 4]) (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TCons ("XmlConv","Elem") [],TVar 5])))))))) (Rule [1,2,3,4,5,6,7] (Comb FuncCall ("XmlConv","element") [Var 1,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("XmlConv","seq5") [],Var 2],Var 3],Var 4],Var 5],Var 6],Var 7]])),Func ("XmlConv","eRepSeq5") 7 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (FuncType (TVar 2) (FuncType (TVar 3) (FuncType (TVar 4) (TVar 5)))))) (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 6,TVar 0]) (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 7,TVar 1]) (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 8,TVar 2]) (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 9,TVar 3]) (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 10,TVar 4]) (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TCons ("XmlConv","Elem") [],TCons ("Prelude","[]") [TVar 5]])))))))) (Rule [1,2,3,4,5,6,7] (Comb FuncCall ("XmlConv","element") [Var 1,Comb FuncCall ("XmlConv","repSeq5") [Var 2,Var 3,Var 4,Var 5,Var 6,Var 7]])),Func ("XmlConv","seq6_") 7 Private (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (FuncType (TVar 2) (FuncType (TVar 3) (FuncType (TVar 4) (FuncType (TVar 5) (TVar 6))))))) (FuncType (TCons ("XmlConv","XmlConv") [TVar 7,TVar 8,TVar 0]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 9,TVar 10,TVar 1]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 11,TVar 12,TVar 2]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 13,TVar 14,TVar 3]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 15,TVar 16,TVar 4]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 17,TVar 18,TVar 5]) (TCons ("XmlConv","XmlConv") [TVar 19,TCons ("XmlConv","NoElem") [],TVar 6])))))))) (Rule [1,2,3,4,5,6,7] (Let [(8,Comb FuncCall ("XmlConv","/>=") [Comb FuncCall ("XmlConv","xmlReads") [Var 2],Comb (FuncPartCall 1) ("XmlConv","seq6_._#lambda27") [Var 1,Var 3,Var 4,Var 5,Var 6,Var 7]])] (Comb ConsCall ("XmlConv","Conv") [Var 8,Comb (FuncPartCall 1) ("XmlConv","seq6_.sh.233") [Var 1,Var 2,Var 3,Var 4,Var 5,Var 6,Var 7]]))),Func ("XmlConv","seq6_.cf.233") 7 Private (FuncType (FuncType (TVar 1290) (FuncType (TVar 1291) (FuncType (TVar 1292) (FuncType (TVar 1293) (FuncType (TVar 1294) (FuncType (TVar 1295) (TVar 1250))))))) (FuncType (TVar 1290) (FuncType (TVar 1291) (FuncType (TVar 1292) (FuncType (TVar 1293) (FuncType (TVar 1294) (FuncType (TVar 1295) (TVar 1250)))))))) (Rule [1,2,3,4,5,6,7] (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 1,Var 2],Var 3],Var 4],Var 5],Var 6],Var 7])),Func ("XmlConv","seq6_._#lambda27") 7 Private (FuncType (FuncType (TVar 1290) (FuncType (TVar 1291) (FuncType (TVar 1292) (FuncType (TVar 1293) (FuncType (TVar 1294) (FuncType (TVar 1295) (TVar 1250))))))) (FuncType (TCons ("XmlConv","XmlConv") [TVar 1260,TVar 1261,TVar 1291]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 1266,TVar 1267,TVar 1292]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 1272,TVar 1273,TVar 1293]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 1278,TVar 1279,TVar 1294]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 1284,TVar 1285,TVar 1295]) (FuncType (TVar 1290) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TVar 1250,TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]]))))))))) (Rule [1,2,3,4,5,6,7] (Comb FuncCall ("XmlConv","/>=") [Comb FuncCall ("XmlConv","xmlReads") [Var 2],Comb (FuncPartCall 1) ("XmlConv","seq6_._#lambda27._#lambda28") [Var 7,Var 1,Var 3,Var 4,Var 5,Var 6]])),Func ("XmlConv","seq6_._#lambda27._#lambda28") 7 Private (FuncType (TVar 1290) (FuncType (FuncType (TVar 1290) (FuncType (TVar 1291) (FuncType (TVar 1292) (FuncType (TVar 1293) (FuncType (TVar 1294) (FuncType (TVar 1295) (TVar 1250))))))) (FuncType (TCons ("XmlConv","XmlConv") [TVar 1266,TVar 1267,TVar 1292]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 1272,TVar 1273,TVar 1293]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 1278,TVar 1279,TVar 1294]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 1284,TVar 1285,TVar 1295]) (FuncType (TVar 1291) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TVar 1250,TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]]))))))))) (Rule [1,2,3,4,5,6,7] (Comb FuncCall ("XmlConv","/>=") [Comb FuncCall ("XmlConv","xmlReads") [Var 3],Comb (FuncPartCall 1) ("XmlConv","seq6_._#lambda27._#lambda28._#lambda29") [Var 1,Var 7,Var 2,Var 4,Var 5,Var 6]])),Func ("XmlConv","seq6_._#lambda27._#lambda28._#lambda29") 7 Private (FuncType (TVar 1290) (FuncType (TVar 1291) (FuncType (FuncType (TVar 1290) (FuncType (TVar 1291) (FuncType (TVar 1292) (FuncType (TVar 1293) (FuncType (TVar 1294) (FuncType (TVar 1295) (TVar 1250))))))) (FuncType (TCons ("XmlConv","XmlConv") [TVar 1272,TVar 1273,TVar 1293]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 1278,TVar 1279,TVar 1294]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 1284,TVar 1285,TVar 1295]) (FuncType (TVar 1292) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TVar 1250,TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]]))))))))) (Rule [1,2,3,4,5,6,7] (Comb FuncCall ("XmlConv","/>=") [Comb FuncCall ("XmlConv","xmlReads") [Var 4],Comb (FuncPartCall 1) ("XmlConv","seq6_._#lambda27._#lambda28._#lambda29._#lambda30") [Var 1,Var 2,Var 7,Var 3,Var 5,Var 6]])),Func ("XmlConv","seq6_._#lambda27._#lambda28._#lambda29._#lambda30") 7 Private (FuncType (TVar 1290) (FuncType (TVar 1291) (FuncType (TVar 1292) (FuncType (FuncType (TVar 1290) (FuncType (TVar 1291) (FuncType (TVar 1292) (FuncType (TVar 1293) (FuncType (TVar 1294) (FuncType (TVar 1295) (TVar 1250))))))) (FuncType (TCons ("XmlConv","XmlConv") [TVar 1278,TVar 1279,TVar 1294]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 1284,TVar 1285,TVar 1295]) (FuncType (TVar 1293) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TVar 1250,TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]]))))))))) (Rule [1,2,3,4,5,6,7] (Comb FuncCall ("XmlConv","/>=") [Comb FuncCall ("XmlConv","xmlReads") [Var 5],Comb (FuncPartCall 1) ("XmlConv","seq6_._#lambda27._#lambda28._#lambda29._#lambda30._#lambda31") [Var 1,Var 2,Var 3,Var 4,Var 7,Var 6]])),Func ("XmlConv","seq6_._#lambda27._#lambda28._#lambda29._#lambda30._#lambda31") 7 Private (FuncType (TVar 1290) (FuncType (TVar 1291) (FuncType (TVar 1292) (FuncType (FuncType (TVar 1290) (FuncType (TVar 1291) (FuncType (TVar 1292) (FuncType (TVar 1293) (FuncType (TVar 1294) (FuncType (TVar 1295) (TVar 1250))))))) (FuncType (TVar 1293) (FuncType (TCons ("XmlConv","XmlConv") [TVar 1284,TVar 1285,TVar 1295]) (FuncType (TVar 1294) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TVar 1250,TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]]))))))))) (Rule [1,2,3,4,5,6,7] (Comb FuncCall ("XmlConv","/>=") [Comb FuncCall ("XmlConv","xmlReads") [Var 6],Comb (FuncPartCall 1) ("XmlConv","seq6_._#lambda27._#lambda28._#lambda29._#lambda30._#lambda31._#lambda32") [Var 1,Var 2,Var 3,Var 4,Var 5,Var 7]])),Func ("XmlConv","seq6_._#lambda27._#lambda28._#lambda29._#lambda30._#lambda31._#lambda32") 7 Private (FuncType (TVar 1290) (FuncType (TVar 1291) (FuncType (TVar 1292) (FuncType (FuncType (TVar 1290) (FuncType (TVar 1291) (FuncType (TVar 1292) (FuncType (TVar 1293) (FuncType (TVar 1294) (FuncType (TVar 1295) (TVar 1250))))))) (FuncType (TVar 1293) (FuncType (TVar 1294) (FuncType (TVar 1295) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TVar 1250,TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]]))))))))) (Rule [1,2,3,4,5,6,7] (Comb (FuncPartCall 1) ("XmlConv","ret") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 4,Var 1],Var 2],Var 3],Var 5],Var 6],Var 7]])),Func ("XmlConv","seq6_.sh.233") 8 Private (FuncType (FuncType (TVar 1290) (FuncType (TVar 1291) (FuncType (TVar 1292) (FuncType (TVar 1293) (FuncType (TVar 1294) (FuncType (TVar 1295) (TVar 1250))))))) (FuncType (TCons ("XmlConv","XmlConv") [TVar 1254,TVar 1255,TVar 1290]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 1260,TVar 1261,TVar 1291]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 1266,TVar 1267,TVar 1292]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 1272,TVar 1273,TVar 1293]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 1278,TVar 1279,TVar 1294]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 1284,TVar 1285,TVar 1295]) (FuncType (TVar 1250) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]]) (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]])))))))))) (Rule [1,2,3,4,5,6,7,8] (Free [9,10,11,12,13,14] (Comb FuncCall ("Prelude","cond") [Comb FuncCall ("Prelude","=:<=") [Comb FuncCall ("XmlConv","seq6_.cf.233") [Var 1,Var 9,Var 10,Var 11,Var 12,Var 13,Var 14],Var 8],Comb FuncCall ("Prelude",".") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("XmlConv","xmlShows") [Var 2],Var 9],Comb FuncCall ("Prelude",".") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("XmlConv","xmlShows") [Var 3],Var 10],Comb FuncCall ("Prelude",".") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("XmlConv","xmlShows") [Var 4],Var 11],Comb FuncCall ("Prelude",".") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("XmlConv","xmlShows") [Var 5],Var 12],Comb FuncCall ("Prelude",".") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("XmlConv","xmlShows") [Var 6],Var 13],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("XmlConv","xmlShows") [Var 7],Var 14]]]]]]]))),Func ("XmlConv","seq6") 0 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (FuncType (TVar 2) (FuncType (TVar 3) (FuncType (TVar 4) (FuncType (TVar 5) (TVar 6))))))) (FuncType (TCons ("XmlConv","XmlConv") [TVar 7,TVar 8,TVar 0]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 9,TVar 10,TVar 1]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 11,TVar 12,TVar 2]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 13,TVar 14,TVar 3]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 15,TVar 16,TVar 4]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 17,TVar 18,TVar 5]) (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","NotRepeatable") [],TCons ("XmlConv","NoElem") [],TVar 6])))))))) (Rule [] (Comb (FuncPartCall 7) ("XmlConv","seq6_") [])),Func ("XmlConv","repSeq6") 7 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (FuncType (TVar 2) (FuncType (TVar 3) (FuncType (TVar 4) (FuncType (TVar 5) (TVar 6))))))) (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 7,TVar 0]) (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 8,TVar 1]) (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 9,TVar 2]) (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 10,TVar 3]) (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 11,TVar 4]) (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 12,TVar 5]) (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","NotRepeatable") [],TCons ("XmlConv","NoElem") [],TCons ("Prelude","[]") [TVar 6]])))))))) (Rule [1,2,3,4,5,6,7] (Comb FuncCall ("XmlConv","rep") [Comb FuncCall ("XmlConv","seq6_") [Var 1,Var 2,Var 3,Var 4,Var 5,Var 6,Var 7]])),Func ("XmlConv","eSeq6") 8 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (FuncType (TVar 2) (FuncType (TVar 3) (FuncType (TVar 4) (FuncType (TVar 5) (TVar 6))))))) (FuncType (TCons ("XmlConv","XmlConv") [TVar 7,TVar 8,TVar 0]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 9,TVar 10,TVar 1]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 11,TVar 12,TVar 2]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 13,TVar 14,TVar 3]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 15,TVar 16,TVar 4]) (FuncType (TCons ("XmlConv","XmlConv") [TVar 17,TVar 18,TVar 5]) (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TCons ("XmlConv","Elem") [],TVar 6]))))))))) (Rule [1,2,3,4,5,6,7,8] (Comb FuncCall ("XmlConv","element") [Var 1,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("XmlConv","seq6") [],Var 2],Var 3],Var 4],Var 5],Var 6],Var 7],Var 8]])),Func ("XmlConv","eRepSeq6") 8 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (FuncType (TVar 2) (FuncType (TVar 3) (FuncType (TVar 4) (FuncType (TVar 5) (TVar 6))))))) (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 7,TVar 0]) (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 8,TVar 1]) (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 9,TVar 2]) (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 10,TVar 3]) (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 11,TVar 4]) (FuncType (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TVar 12,TVar 5]) (TCons ("XmlConv","XmlConv") [TCons ("XmlConv","Repeatable") [],TCons ("XmlConv","Elem") [],TCons ("Prelude","[]") [TVar 6]]))))))))) (Rule [1,2,3,4,5,6,7,8] (Comb FuncCall ("XmlConv","element") [Var 1,Comb FuncCall ("XmlConv","repSeq6") [Var 2,Var 3,Var 4,Var 5,Var 6,Var 7,Var 8]]))] [Op ("XmlConv","!") InfixrOp 0,Op ("XmlConv","/>=") InfixlOp 1]