Prog "TableRBT0" ["Prelude"] [Type ("TableRBT0","RBTColor") Private [] [Cons ("TableRBT0","RBTRed") 0 Private [],Cons ("TableRBT0","RBTBlack") 0 Private []],Type ("TableRBT0","TableRBT") Public [0,1] [Cons ("TableRBT0","RBT") 5 Private [TCons ("TableRBT0","RBTColor") [],TVar 0,TVar 1,TCons ("TableRBT0","TableRBT") [TVar 0,TVar 1],TCons ("TableRBT0","TableRBT") [TVar 0,TVar 1]],Cons ("TableRBT0","RBTEmpty") 0 Private []]] [Func ("TableRBT0","emptyTableRBT") 0 Public (TCons ("TableRBT0","TableRBT") [TVar 0,TVar 1]) (Rule [] (Comb ConsCall ("TableRBT0","RBTEmpty") [])),Func ("TableRBT0","lookupRBT") 3 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons ("Prelude","Bool") []))) (FuncType (TVar 0) (FuncType (TCons ("TableRBT0","TableRBT") [TVar 0,TVar 1]) (TCons ("Prelude","Maybe") [TVar 1])))) (Rule [1,2,3] (Case  Flex (Var 3) [Branch (Pattern ("TableRBT0","RBTEmpty") []) (Comb ConsCall ("Prelude","Nothing") []),Branch (Pattern ("TableRBT0","RBT") [4,5,6,7,8]) (Case  Rigid (Comb FuncCall ("Prelude","==") [Var 5,Var 2]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude","Just") [Var 6]),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 1,Var 2],Var 5]) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("TableRBT0","lookupRBT") [Var 1,Var 2,Var 7]),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Prelude","otherwise") []) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("TableRBT0","lookupRBT") [Var 1,Var 2,Var 8]),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("Prelude","failed") [])])])])])),Func ("TableRBT0","updateRBT") 4 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons ("Prelude","Bool") []))) (FuncType (TVar 0) (FuncType (TVar 1) (FuncType (TCons ("TableRBT0","TableRBT") [TVar 0,TVar 1]) (TCons ("TableRBT0","TableRBT") [TVar 0,TVar 1]))))) (Rule [1,2,3,4] (Let [(5,Comb FuncCall ("TableRBT0","updateRBT.ins.11") [Var 1,Var 2,Var 3,Var 4]),(6,Comb FuncCall ("TableRBT0","updateRBT._#selFP2#i2") [Var 5]),(7,Comb FuncCall ("TableRBT0","updateRBT._#selFP3#e2") [Var 5]),(8,Comb FuncCall ("TableRBT0","updateRBT._#selFP4#l") [Var 5]),(9,Comb FuncCall ("TableRBT0","updateRBT._#selFP5#r") [Var 5])] (Comb ConsCall ("TableRBT0","RBT") [Comb ConsCall ("TableRBT0","RBTBlack") [],Var 6,Var 7,Var 8,Var 9]))),Func ("TableRBT0","updateRBT.ins.11") 4 Private (FuncType (FuncType (TVar 387) (FuncType (TVar 387) (TCons ("Prelude","Bool") []))) (FuncType (TVar 387) (FuncType (TVar 388) (FuncType (TCons ("TableRBT0","TableRBT") [TVar 387,TVar 388]) (TCons ("TableRBT0","TableRBT") [TVar 387,TVar 388]))))) (Rule [1,2,3,4] (Case  Flex (Var 4) [Branch (Pattern ("TableRBT0","RBTEmpty") []) (Comb ConsCall ("TableRBT0","RBT") [Comb ConsCall ("TableRBT0","RBTRed") [],Var 2,Var 3,Comb ConsCall ("TableRBT0","RBTEmpty") [],Comb ConsCall ("TableRBT0","RBTEmpty") []]),Branch (Pattern ("TableRBT0","RBT") [5,6,7,8,9]) (Case  Rigid (Comb FuncCall ("Prelude","==") [Var 2,Var 6]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("TableRBT0","RBT") [Var 5,Var 6,Var 3,Var 8,Var 9]),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 1,Var 2],Var 6]) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("TableRBT0","rbtBalanceL") [Comb ConsCall ("TableRBT0","RBT") [Var 5,Var 6,Var 7,Comb FuncCall ("TableRBT0","updateRBT.ins.11") [Var 1,Var 2,Var 3,Var 8],Var 9]]),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Prelude","otherwise") []) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("TableRBT0","rbtBalanceR") [Comb ConsCall ("TableRBT0","RBT") [Var 5,Var 6,Var 7,Var 8,Comb FuncCall ("TableRBT0","updateRBT.ins.11") [Var 1,Var 2,Var 3,Var 9]]]),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("Prelude","failed") [])])])])])),Func ("TableRBT0","updateRBT._#selFP2#i2") 1 Private (FuncType (TCons ("TableRBT0","TableRBT") [TVar 387,TVar 388]) (TVar 387)) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("TableRBT0","RBT") [2,3,4,5,6]) (Var 3)])),Func ("TableRBT0","updateRBT._#selFP3#e2") 1 Private (FuncType (TCons ("TableRBT0","TableRBT") [TVar 387,TVar 388]) (TVar 388)) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("TableRBT0","RBT") [2,3,4,5,6]) (Var 4)])),Func ("TableRBT0","updateRBT._#selFP4#l") 1 Private (FuncType (TCons ("TableRBT0","TableRBT") [TVar 387,TVar 388]) (TCons ("TableRBT0","TableRBT") [TVar 387,TVar 388])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("TableRBT0","RBT") [2,3,4,5,6]) (Var 5)])),Func ("TableRBT0","updateRBT._#selFP5#r") 1 Private (FuncType (TCons ("TableRBT0","TableRBT") [TVar 387,TVar 388]) (TCons ("TableRBT0","TableRBT") [TVar 387,TVar 388])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("TableRBT0","RBT") [2,3,4,5,6]) (Var 6)])),Func ("TableRBT0","tableRBT2list") 1 Public (FuncType (TCons ("TableRBT0","TableRBT") [TVar 0,TVar 1]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TVar 0,TVar 1]])) (Rule [1] (Comb FuncCall ("TableRBT0","tableRBT2list.t2l.20") [Var 1,Comb ConsCall ("Prelude","[]") []])),Func ("TableRBT0","tableRBT2list.t2l.20") 2 Private (FuncType (TCons ("TableRBT0","TableRBT") [TVar 0,TVar 1]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TVar 0,TVar 1]]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TVar 0,TVar 1]]))) (Rule [1,2] (Case  Flex (Var 1) [Branch (Pattern ("TableRBT0","RBTEmpty") []) (Var 2),Branch (Pattern ("TableRBT0","RBT") [3,4,5,6,7]) (Comb FuncCall ("TableRBT0","tableRBT2list.t2l.20") [Var 6,Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Var 4,Var 5],Comb FuncCall ("TableRBT0","tableRBT2list.t2l.20") [Var 7,Var 2]]])])),Func ("TableRBT0","rbtBalance") 1 Private (FuncType (TCons ("TableRBT0","TableRBT") [TVar 0,TVar 1]) (TCons ("TableRBT0","TableRBT") [TVar 0,TVar 1])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("TableRBT0","RBTEmpty") []) (Comb ConsCall ("TableRBT0","RBTEmpty") []),Branch (Pattern ("TableRBT0","RBT") [2,3,4,5,6]) (Let [(7,Comb FuncCall ("TableRBT0","rbtBalanceL") [Comb ConsCall ("TableRBT0","RBT") [Var 2,Var 3,Var 4,Var 5,Var 6]]),(8,Comb FuncCall ("TableRBT0","rbtBalance._#selFP7#c2") [Var 7]),(9,Comb FuncCall ("TableRBT0","rbtBalance._#selFP8#i2") [Var 7]),(10,Comb FuncCall ("TableRBT0","rbtBalance._#selFP9#e2") [Var 7]),(11,Comb FuncCall ("TableRBT0","rbtBalance._#selFP10#l2") [Var 7]),(12,Comb FuncCall ("TableRBT0","rbtBalance._#selFP11#r2") [Var 7])] (Case  Rigid (Comb FuncCall ("Prelude","/=") [Var 2,Comb ConsCall ("TableRBT0","RBTBlack") []]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("TableRBT0","RBT") [Var 2,Var 3,Var 4,Var 5,Var 6]),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Prelude","==") [Var 8,Comb ConsCall ("TableRBT0","RBTRed") []]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("TableRBT0","RBT") [Var 8,Var 9,Var 10,Var 11,Var 12]),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Prelude","otherwise") []) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("TableRBT0","rbtBalanceR") [Comb ConsCall ("TableRBT0","RBT") [Var 2,Var 3,Var 4,Var 5,Var 6]]),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("Prelude","failed") [])])])]))])),Func ("TableRBT0","rbtBalance._#selFP7#c2") 1 Private (FuncType (TCons ("TableRBT0","TableRBT") [TVar 450,TVar 451]) (TCons ("TableRBT0","RBTColor") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("TableRBT0","RBT") [2,3,4,5,6]) (Var 2)])),Func ("TableRBT0","rbtBalance._#selFP8#i2") 1 Private (FuncType (TCons ("TableRBT0","TableRBT") [TVar 450,TVar 451]) (TVar 450)) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("TableRBT0","RBT") [2,3,4,5,6]) (Var 3)])),Func ("TableRBT0","rbtBalance._#selFP9#e2") 1 Private (FuncType (TCons ("TableRBT0","TableRBT") [TVar 450,TVar 451]) (TVar 451)) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("TableRBT0","RBT") [2,3,4,5,6]) (Var 4)])),Func ("TableRBT0","rbtBalance._#selFP10#l2") 1 Private (FuncType (TCons ("TableRBT0","TableRBT") [TVar 450,TVar 451]) (TCons ("TableRBT0","TableRBT") [TVar 450,TVar 451])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("TableRBT0","RBT") [2,3,4,5,6]) (Var 5)])),Func ("TableRBT0","rbtBalance._#selFP11#r2") 1 Private (FuncType (TCons ("TableRBT0","TableRBT") [TVar 450,TVar 451]) (TCons ("TableRBT0","TableRBT") [TVar 450,TVar 451])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("TableRBT0","RBT") [2,3,4,5,6]) (Var 6)])),Func ("TableRBT0","rbtBalanceL") 1 Private (FuncType (TCons ("TableRBT0","TableRBT") [TVar 0,TVar 1]) (TCons ("TableRBT0","TableRBT") [TVar 0,TVar 1])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("TableRBT0","RBT") [2,3,4,5,6]) (Case  Flex (Var 5) [Branch (Pattern ("TableRBT0","RBTEmpty") []) (Comb ConsCall ("TableRBT0","RBT") [Var 2,Var 3,Var 4,Comb ConsCall ("TableRBT0","RBTEmpty") [],Var 6]),Branch (Pattern ("TableRBT0","RBT") [7,8,9,10,11]) (Case  Flex (Var 10) [Branch (Pattern ("TableRBT0","RBTEmpty") []) (Case  Flex (Var 11) [Branch (Pattern ("TableRBT0","RBTEmpty") []) (Comb ConsCall ("TableRBT0","RBT") [Var 2,Var 3,Var 4,Comb ConsCall ("TableRBT0","RBT") [Var 7,Var 8,Var 9,Comb ConsCall ("TableRBT0","RBTEmpty") [],Comb ConsCall ("TableRBT0","RBTEmpty") []],Var 6]),Branch (Pattern ("TableRBT0","RBT") [12,13,14,15,16]) (Case  Rigid (Comb FuncCall ("Prelude","&&") [Comb FuncCall ("Prelude","==") [Var 7,Comb ConsCall ("TableRBT0","RBTRed") []],Comb FuncCall ("Prelude","==") [Var 12,Comb ConsCall ("TableRBT0","RBTRed") []]]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("TableRBT0","RBT") [Comb ConsCall ("TableRBT0","RBTRed") [],Var 13,Var 14,Comb ConsCall ("TableRBT0","RBT") [Comb ConsCall ("TableRBT0","RBTBlack") [],Var 8,Var 9,Comb ConsCall ("TableRBT0","RBTEmpty") [],Var 15],Comb ConsCall ("TableRBT0","RBT") [Comb ConsCall ("TableRBT0","RBTBlack") [],Var 3,Var 4,Var 16,Var 6]]),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Prelude","otherwise") []) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("TableRBT0","RBT") [Var 2,Var 3,Var 4,Comb ConsCall ("TableRBT0","RBT") [Var 7,Var 8,Var 9,Comb ConsCall ("TableRBT0","RBTEmpty") [],Comb ConsCall ("TableRBT0","RBT") [Var 12,Var 13,Var 14,Var 15,Var 16]],Var 6]),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("Prelude","failed") [])])])]),Branch (Pattern ("TableRBT0","RBT") [17,18,19,20,21]) (Case  Flex (Var 11) [Branch (Pattern ("TableRBT0","RBTEmpty") []) (Case  Rigid (Comb FuncCall ("Prelude","&&") [Comb FuncCall ("Prelude","==") [Var 7,Comb ConsCall ("TableRBT0","RBTRed") []],Comb FuncCall ("Prelude","==") [Var 17,Comb ConsCall ("TableRBT0","RBTRed") []]]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("TableRBT0","RBT") [Comb ConsCall ("TableRBT0","RBTRed") [],Var 8,Var 9,Comb ConsCall ("TableRBT0","RBT") [Comb ConsCall ("TableRBT0","RBTBlack") [],Var 18,Var 19,Var 20,Var 21],Comb ConsCall ("TableRBT0","RBT") [Comb ConsCall ("TableRBT0","RBTBlack") [],Var 3,Var 4,Comb ConsCall ("TableRBT0","RBTEmpty") [],Var 6]]),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Prelude","otherwise") []) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("TableRBT0","RBT") [Var 2,Var 3,Var 4,Comb ConsCall ("TableRBT0","RBT") [Var 7,Var 8,Var 9,Comb ConsCall ("TableRBT0","RBT") [Var 17,Var 18,Var 19,Var 20,Var 21],Comb ConsCall ("TableRBT0","RBTEmpty") []],Var 6]),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("Prelude","failed") [])])]),Branch (Pattern ("TableRBT0","RBT") [22,23,24,25,26]) (Case  Rigid (Comb FuncCall ("Prelude","&&") [Comb FuncCall ("Prelude","==") [Var 7,Comb ConsCall ("TableRBT0","RBTRed") []],Comb FuncCall ("Prelude","==") [Var 17,Comb ConsCall ("TableRBT0","RBTRed") []]]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("TableRBT0","RBT") [Comb ConsCall ("TableRBT0","RBTRed") [],Var 8,Var 9,Comb ConsCall ("TableRBT0","RBT") [Comb ConsCall ("TableRBT0","RBTBlack") [],Var 18,Var 19,Var 20,Var 21],Comb ConsCall ("TableRBT0","RBT") [Comb ConsCall ("TableRBT0","RBTBlack") [],Var 3,Var 4,Comb ConsCall ("TableRBT0","RBT") [Var 22,Var 23,Var 24,Var 25,Var 26],Var 6]]),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Prelude","&&") [Comb FuncCall ("Prelude","==") [Var 7,Comb ConsCall ("TableRBT0","RBTRed") []],Comb FuncCall ("Prelude","==") [Var 22,Comb ConsCall ("TableRBT0","RBTRed") []]]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("TableRBT0","RBT") [Comb ConsCall ("TableRBT0","RBTRed") [],Var 23,Var 24,Comb ConsCall ("TableRBT0","RBT") [Comb ConsCall ("TableRBT0","RBTBlack") [],Var 8,Var 9,Comb ConsCall ("TableRBT0","RBT") [Var 17,Var 18,Var 19,Var 20,Var 21],Var 25],Comb ConsCall ("TableRBT0","RBT") [Comb ConsCall ("TableRBT0","RBTBlack") [],Var 3,Var 4,Var 26,Var 6]]),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Prelude","otherwise") []) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("TableRBT0","RBT") [Var 2,Var 3,Var 4,Comb ConsCall ("TableRBT0","RBT") [Var 7,Var 8,Var 9,Comb ConsCall ("TableRBT0","RBT") [Var 17,Var 18,Var 19,Var 20,Var 21],Comb ConsCall ("TableRBT0","RBT") [Var 22,Var 23,Var 24,Var 25,Var 26]],Var 6]),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("Prelude","failed") [])])])])])])])])),Func ("TableRBT0","rbtBalanceR") 1 Private (FuncType (TCons ("TableRBT0","TableRBT") [TVar 0,TVar 1]) (TCons ("TableRBT0","TableRBT") [TVar 0,TVar 1])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("TableRBT0","RBT") [2,3,4,5,6]) (Case  Flex (Var 6) [Branch (Pattern ("TableRBT0","RBTEmpty") []) (Comb ConsCall ("TableRBT0","RBT") [Var 2,Var 3,Var 4,Var 5,Comb ConsCall ("TableRBT0","RBTEmpty") []]),Branch (Pattern ("TableRBT0","RBT") [7,8,9,10,11]) (Case  Flex (Var 10) [Branch (Pattern ("TableRBT0","RBTEmpty") []) (Case  Flex (Var 11) [Branch (Pattern ("TableRBT0","RBTEmpty") []) (Comb ConsCall ("TableRBT0","RBT") [Var 2,Var 3,Var 4,Var 5,Comb ConsCall ("TableRBT0","RBT") [Var 7,Var 8,Var 9,Comb ConsCall ("TableRBT0","RBTEmpty") [],Comb ConsCall ("TableRBT0","RBTEmpty") []]]),Branch (Pattern ("TableRBT0","RBT") [12,13,14,15,16]) (Case  Rigid (Comb FuncCall ("Prelude","&&") [Comb FuncCall ("Prelude","==") [Var 7,Comb ConsCall ("TableRBT0","RBTRed") []],Comb FuncCall ("Prelude","==") [Var 12,Comb ConsCall ("TableRBT0","RBTRed") []]]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("TableRBT0","RBT") [Comb ConsCall ("TableRBT0","RBTRed") [],Var 8,Var 9,Comb ConsCall ("TableRBT0","RBT") [Comb ConsCall ("TableRBT0","RBTBlack") [],Var 3,Var 4,Var 5,Comb ConsCall ("TableRBT0","RBTEmpty") []],Comb ConsCall ("TableRBT0","RBT") [Comb ConsCall ("TableRBT0","RBTBlack") [],Var 13,Var 14,Var 15,Var 16]]),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Prelude","otherwise") []) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("TableRBT0","RBT") [Var 2,Var 3,Var 4,Var 5,Comb ConsCall ("TableRBT0","RBT") [Var 7,Var 8,Var 9,Comb ConsCall ("TableRBT0","RBTEmpty") [],Comb ConsCall ("TableRBT0","RBT") [Var 12,Var 13,Var 14,Var 15,Var 16]]]),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("Prelude","failed") [])])])]),Branch (Pattern ("TableRBT0","RBT") [17,18,19,20,21]) (Case  Flex (Var 11) [Branch (Pattern ("TableRBT0","RBTEmpty") []) (Case  Rigid (Comb FuncCall ("Prelude","&&") [Comb FuncCall ("Prelude","==") [Var 7,Comb ConsCall ("TableRBT0","RBTRed") []],Comb FuncCall ("Prelude","==") [Var 17,Comb ConsCall ("TableRBT0","RBTRed") []]]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("TableRBT0","RBT") [Comb ConsCall ("TableRBT0","RBTRed") [],Var 18,Var 19,Comb ConsCall ("TableRBT0","RBT") [Comb ConsCall ("TableRBT0","RBTBlack") [],Var 3,Var 4,Var 5,Var 20],Comb ConsCall ("TableRBT0","RBT") [Comb ConsCall ("TableRBT0","RBTBlack") [],Var 8,Var 9,Var 21,Comb ConsCall ("TableRBT0","RBTEmpty") []]]),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Prelude","otherwise") []) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("TableRBT0","RBT") [Var 2,Var 3,Var 4,Var 5,Comb ConsCall ("TableRBT0","RBT") [Var 7,Var 8,Var 9,Comb ConsCall ("TableRBT0","RBT") [Var 17,Var 18,Var 19,Var 20,Var 21],Comb ConsCall ("TableRBT0","RBTEmpty") []]]),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("Prelude","failed") [])])]),Branch (Pattern ("TableRBT0","RBT") [22,23,24,25,26]) (Case  Rigid (Comb FuncCall ("Prelude","&&") [Comb FuncCall ("Prelude","==") [Var 7,Comb ConsCall ("TableRBT0","RBTRed") []],Comb FuncCall ("Prelude","==") [Var 17,Comb ConsCall ("TableRBT0","RBTRed") []]]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("TableRBT0","RBT") [Comb ConsCall ("TableRBT0","RBTRed") [],Var 18,Var 19,Comb ConsCall ("TableRBT0","RBT") [Comb ConsCall ("TableRBT0","RBTBlack") [],Var 3,Var 4,Var 5,Var 20],Comb ConsCall ("TableRBT0","RBT") [Comb ConsCall ("TableRBT0","RBTBlack") [],Var 8,Var 9,Var 21,Comb ConsCall ("TableRBT0","RBT") [Var 22,Var 23,Var 24,Var 25,Var 26]]]),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Prelude","&&") [Comb FuncCall ("Prelude","==") [Var 7,Comb ConsCall ("TableRBT0","RBTRed") []],Comb FuncCall ("Prelude","==") [Var 22,Comb ConsCall ("TableRBT0","RBTRed") []]]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("TableRBT0","RBT") [Comb ConsCall ("TableRBT0","RBTRed") [],Var 8,Var 9,Comb ConsCall ("TableRBT0","RBT") [Comb ConsCall ("TableRBT0","RBTBlack") [],Var 3,Var 4,Var 5,Comb ConsCall ("TableRBT0","RBT") [Var 17,Var 18,Var 19,Var 20,Var 21]],Comb ConsCall ("TableRBT0","RBT") [Comb ConsCall ("TableRBT0","RBTBlack") [],Var 23,Var 24,Var 25,Var 26]]),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Prelude","otherwise") []) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("TableRBT0","RBT") [Var 2,Var 3,Var 4,Var 5,Comb ConsCall ("TableRBT0","RBT") [Var 7,Var 8,Var 9,Comb ConsCall ("TableRBT0","RBT") [Var 17,Var 18,Var 19,Var 20,Var 21],Comb ConsCall ("TableRBT0","RBT") [Var 22,Var 23,Var 24,Var 25,Var 26]]]),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("Prelude","failed") [])])])])])])])]))] []