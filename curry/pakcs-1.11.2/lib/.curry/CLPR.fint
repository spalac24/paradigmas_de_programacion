Prog "CLPR" ["Prelude"] [] [Func ("CLPR","+.") 2 Public (FuncType (TCons ("Prelude","Float") []) (FuncType (TCons ("Prelude","Float") []) (TCons ("Prelude","Float") []))) (Rule [] (Var 0)),Func ("CLPR","-.") 2 Public (FuncType (TCons ("Prelude","Float") []) (FuncType (TCons ("Prelude","Float") []) (TCons ("Prelude","Float") []))) (Rule [] (Var 0)),Func ("CLPR","*.") 2 Public (FuncType (TCons ("Prelude","Float") []) (FuncType (TCons ("Prelude","Float") []) (TCons ("Prelude","Float") []))) (Rule [] (Var 0)),Func ("CLPR","/.") 2 Public (FuncType (TCons ("Prelude","Float") []) (FuncType (TCons ("Prelude","Float") []) (TCons ("Prelude","Float") []))) (Rule [] (Var 0)),Func ("CLPR","<.") 2 Public (FuncType (TCons ("Prelude","Float") []) (FuncType (TCons ("Prelude","Float") []) (TCons ("Prelude","Success") []))) (Rule [] (Var 0)),Func ("CLPR",">.") 2 Public (FuncType (TCons ("Prelude","Float") []) (FuncType (TCons ("Prelude","Float") []) (TCons ("Prelude","Success") []))) (Rule [] (Var 0)),Func ("CLPR","<=.") 2 Public (FuncType (TCons ("Prelude","Float") []) (FuncType (TCons ("Prelude","Float") []) (TCons ("Prelude","Success") []))) (Rule [] (Var 0)),Func ("CLPR",">=.") 2 Public (FuncType (TCons ("Prelude","Float") []) (FuncType (TCons ("Prelude","Float") []) (TCons ("Prelude","Success") []))) (Rule [] (Var 0)),Func ("CLPR","i2f") 1 Public (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","Float") [])) (Rule [] (Var 0)),Func ("CLPR","minimumFor") 2 Public (FuncType (FuncType (TVar 0) (TCons ("Prelude","Success") [])) (FuncType (FuncType (TVar 0) (TCons ("Prelude","Float") [])) (TVar 0))) (External "CLPR.minimumFor"),Func ("CLPR","minimize") 3 Public (FuncType (FuncType (TVar 0) (TCons ("Prelude","Success") [])) (FuncType (FuncType (TVar 0) (TCons ("Prelude","Float") [])) (FuncType (TVar 0) (TCons ("Prelude","Success") [])))) (Rule [] (Var 0)),Func ("CLPR","maximumFor") 2 Public (FuncType (FuncType (TVar 0) (TCons ("Prelude","Success") [])) (FuncType (FuncType (TVar 0) (TCons ("Prelude","Float") [])) (TVar 0))) (External "CLPR.maximumFor"),Func ("CLPR","maximize") 3 Public (FuncType (FuncType (TVar 0) (TCons ("Prelude","Success") [])) (FuncType (FuncType (TVar 0) (TCons ("Prelude","Float") [])) (FuncType (TVar 0) (TCons ("Prelude","Success") [])))) (Rule [] (Var 0))] [Op ("CLPR","*.") InfixlOp 7,Op ("CLPR","/.") InfixlOp 7,Op ("CLPR","+.") InfixlOp 6,Op ("CLPR","-.") InfixlOp 6,Op ("CLPR","<.") InfixOp 4,Op ("CLPR",">.") InfixOp 4,Op ("CLPR","<=.") InfixOp 4,Op ("CLPR",">=.") InfixOp 4]