Prog "SetFunctions" ["List","Prelude","Sort"] [Type ("SetFunctions","Values") Public [0] [Cons ("SetFunctions","Values") 2 Private [TCons ("Prelude","Bool") [],TCons ("Prelude","[]") [TVar 0]]]] [Func ("SetFunctions","set0") 1 Public (FuncType (TVar 0) (TCons ("SetFunctions","Values") [TVar 0])) (Rule [1] (Comb ConsCall ("SetFunctions","Values") [Comb FuncCall ("SetFunctions","hasNoValue") [Var 1],Comb FuncCall ("Prelude","findall") [Comb (FuncPartCall 1) ("Prelude","flip") [Comb (FuncPartCall 2) ("Prelude","=:=") [],Var 1]]])),Func ("SetFunctions","set1") 2 Public (FuncType (FuncType (TVar 0) (TVar 1)) (FuncType (TVar 0) (TCons ("SetFunctions","Values") [TVar 1]))) (Rule [1,2] (Comb FuncCall ("Prelude","cond") [Comb FuncCall ("Prelude","=:=") [Var 2,Var 2],Comb ConsCall ("SetFunctions","Values") [Comb FuncCall ("SetFunctions","hasNoValue") [Comb FuncCall ("Prelude","apply") [Var 1,Var 2]],Comb FuncCall ("Prelude","findall") [Comb (FuncPartCall 1) ("Prelude","flip") [Comb (FuncPartCall 2) ("Prelude","=:=") [],Comb FuncCall ("Prelude","apply") [Var 1,Var 2]]]]])),Func ("SetFunctions","set2") 3 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (TVar 2))) (FuncType (TVar 0) (FuncType (TVar 1) (TCons ("SetFunctions","Values") [TVar 2])))) (Rule [1,2,3] (Comb FuncCall ("Prelude","cond") [Comb FuncCall ("Prelude","&") [Comb FuncCall ("Prelude","=:=") [Var 2,Var 2],Comb FuncCall ("Prelude","=:=") [Var 3,Var 3]],Comb ConsCall ("SetFunctions","Values") [Comb FuncCall ("SetFunctions","hasNoValue") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 1,Var 2],Var 3]],Comb FuncCall ("Prelude","findall") [Comb (FuncPartCall 1) ("Prelude","flip") [Comb (FuncPartCall 2) ("Prelude","=:=") [],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 1,Var 2],Var 3]]]]])),Func ("SetFunctions","set3") 4 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (FuncType (TVar 2) (TVar 3)))) (FuncType (TVar 0) (FuncType (TVar 1) (FuncType (TVar 2) (TCons ("SetFunctions","Values") [TVar 3]))))) (Rule [1,2,3,4] (Comb FuncCall ("Prelude","cond") [Comb FuncCall ("Prelude","&") [Comb FuncCall ("Prelude","=:=") [Var 2,Var 2],Comb FuncCall ("Prelude","&") [Comb FuncCall ("Prelude","=:=") [Var 3,Var 3],Comb FuncCall ("Prelude","=:=") [Var 4,Var 4]]],Comb ConsCall ("SetFunctions","Values") [Comb FuncCall ("SetFunctions","hasNoValue") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 1,Var 2],Var 3],Var 4]],Comb FuncCall ("Prelude","findall") [Comb (FuncPartCall 1) ("Prelude","flip") [Comb (FuncPartCall 2) ("Prelude","=:=") [],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 1,Var 2],Var 3],Var 4]]]]])),Func ("SetFunctions","set4") 5 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (FuncType (TVar 2) (FuncType (TVar 3) (TVar 4))))) (FuncType (TVar 0) (FuncType (TVar 1) (FuncType (TVar 2) (FuncType (TVar 3) (TCons ("SetFunctions","Values") [TVar 4])))))) (Rule [1,2,3,4,5] (Comb FuncCall ("Prelude","cond") [Comb FuncCall ("Prelude","&") [Comb FuncCall ("Prelude","=:=") [Var 2,Var 2],Comb FuncCall ("Prelude","&") [Comb FuncCall ("Prelude","=:=") [Var 3,Var 3],Comb FuncCall ("Prelude","&") [Comb FuncCall ("Prelude","=:=") [Var 4,Var 4],Comb FuncCall ("Prelude","=:=") [Var 5,Var 5]]]],Comb ConsCall ("SetFunctions","Values") [Comb FuncCall ("SetFunctions","hasNoValue") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 1,Var 2],Var 3],Var 4],Var 5]],Comb FuncCall ("Prelude","findall") [Comb (FuncPartCall 1) ("Prelude","flip") [Comb (FuncPartCall 2) ("Prelude","=:=") [],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 1,Var 2],Var 3],Var 4],Var 5]]]]])),Func ("SetFunctions","set5") 6 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (FuncType (TVar 2) (FuncType (TVar 3) (FuncType (TVar 4) (TVar 5)))))) (FuncType (TVar 0) (FuncType (TVar 1) (FuncType (TVar 2) (FuncType (TVar 3) (FuncType (TVar 4) (TCons ("SetFunctions","Values") [TVar 5]))))))) (Rule [1,2,3,4,5,6] (Comb FuncCall ("Prelude","cond") [Comb FuncCall ("Prelude","&") [Comb FuncCall ("Prelude","=:=") [Var 2,Var 2],Comb FuncCall ("Prelude","&") [Comb FuncCall ("Prelude","=:=") [Var 3,Var 3],Comb FuncCall ("Prelude","&") [Comb FuncCall ("Prelude","=:=") [Var 4,Var 4],Comb FuncCall ("Prelude","&") [Comb FuncCall ("Prelude","=:=") [Var 5,Var 5],Comb FuncCall ("Prelude","=:=") [Var 6,Var 6]]]]],Comb ConsCall ("SetFunctions","Values") [Comb FuncCall ("SetFunctions","hasNoValue") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 1,Var 2],Var 3],Var 4],Var 5],Var 6]],Comb FuncCall ("Prelude","findall") [Comb (FuncPartCall 1) ("Prelude","flip") [Comb (FuncPartCall 2) ("Prelude","=:=") [],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 1,Var 2],Var 3],Var 4],Var 5],Var 6]]]]])),Func ("SetFunctions","set6") 7 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (FuncType (TVar 2) (FuncType (TVar 3) (FuncType (TVar 4) (FuncType (TVar 5) (TVar 6))))))) (FuncType (TVar 0) (FuncType (TVar 1) (FuncType (TVar 2) (FuncType (TVar 3) (FuncType (TVar 4) (FuncType (TVar 5) (TCons ("SetFunctions","Values") [TVar 6])))))))) (Rule [1,2,3,4,5,6,7] (Comb FuncCall ("Prelude","cond") [Comb FuncCall ("Prelude","&") [Comb FuncCall ("Prelude","=:=") [Var 2,Var 2],Comb FuncCall ("Prelude","&") [Comb FuncCall ("Prelude","=:=") [Var 3,Var 3],Comb FuncCall ("Prelude","&") [Comb FuncCall ("Prelude","=:=") [Var 4,Var 4],Comb FuncCall ("Prelude","&") [Comb FuncCall ("Prelude","=:=") [Var 5,Var 5],Comb FuncCall ("Prelude","&") [Comb FuncCall ("Prelude","=:=") [Var 6,Var 6],Comb FuncCall ("Prelude","=:=") [Var 7,Var 7]]]]]],Comb ConsCall ("SetFunctions","Values") [Comb FuncCall ("SetFunctions","hasNoValue") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 1,Var 2],Var 3],Var 4],Var 5],Var 6],Var 7]],Comb FuncCall ("Prelude","findall") [Comb (FuncPartCall 1) ("Prelude","flip") [Comb (FuncPartCall 2) ("Prelude","=:=") [],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 1,Var 2],Var 3],Var 4],Var 5],Var 6],Var 7]]]]])),Func ("SetFunctions","set7") 8 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (FuncType (TVar 2) (FuncType (TVar 3) (FuncType (TVar 4) (FuncType (TVar 5) (FuncType (TVar 6) (TVar 7)))))))) (FuncType (TVar 0) (FuncType (TVar 1) (FuncType (TVar 2) (FuncType (TVar 3) (FuncType (TVar 4) (FuncType (TVar 5) (FuncType (TVar 6) (TCons ("SetFunctions","Values") [TVar 7]))))))))) (Rule [1,2,3,4,5,6,7,8] (Comb FuncCall ("Prelude","cond") [Comb FuncCall ("Prelude","&") [Comb FuncCall ("Prelude","=:=") [Var 2,Var 2],Comb FuncCall ("Prelude","&") [Comb FuncCall ("Prelude","=:=") [Var 3,Var 3],Comb FuncCall ("Prelude","&") [Comb FuncCall ("Prelude","=:=") [Var 4,Var 4],Comb FuncCall ("Prelude","&") [Comb FuncCall ("Prelude","=:=") [Var 5,Var 5],Comb FuncCall ("Prelude","&") [Comb FuncCall ("Prelude","=:=") [Var 6,Var 6],Comb FuncCall ("Prelude","&") [Comb FuncCall ("Prelude","=:=") [Var 7,Var 7],Comb FuncCall ("Prelude","=:=") [Var 8,Var 8]]]]]]],Comb ConsCall ("SetFunctions","Values") [Comb FuncCall ("SetFunctions","hasNoValue") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 1,Var 2],Var 3],Var 4],Var 5],Var 6],Var 7],Var 8]],Comb FuncCall ("Prelude","findall") [Comb (FuncPartCall 1) ("Prelude","flip") [Comb (FuncPartCall 2) ("Prelude","=:=") [],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 1,Var 2],Var 3],Var 4],Var 5],Var 6],Var 7],Var 8]]]]])),Func ("SetFunctions","hasNoValue") 1 Private (FuncType (TVar 0) (TCons ("Prelude","Bool") [])) (Rule [1] (Comb FuncCall ("Prelude","null") [Comb FuncCall ("Prelude","findall") [Comb (FuncPartCall 1) ("Prelude","flip") [Comb (FuncPartCall 2) ("Prelude","=:=") [],Comb FuncCall ("Prelude","findfirst") [Comb (FuncPartCall 1) ("Prelude","flip") [Comb (FuncPartCall 2) ("Prelude","=:=") [],Var 1]]]]])),Func ("SetFunctions","isEmpty") 1 Public (FuncType (TCons ("SetFunctions","Values") [TVar 0]) (TCons ("Prelude","Bool") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("SetFunctions","Values") [2,3]) (Var 2)])),Func ("SetFunctions","valueOf") 2 Public (FuncType (TVar 0) (FuncType (TCons ("SetFunctions","Values") [TVar 0]) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case  Flex (Var 2) [Branch (Pattern ("SetFunctions","Values") [3,4]) (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","elem") [Var 1],Var 4])])),Func ("SetFunctions","contains") 0 Public (FuncType (TVar 0) (FuncType (TCons ("SetFunctions","Values") [TVar 0]) (TCons ("Prelude","Bool") []))) (Rule [] (Comb (FuncPartCall 2) ("SetFunctions","valueOf") [])),Func ("SetFunctions","choose") 1 Public (FuncType (TCons ("SetFunctions","Values") [TVar 0]) (TCons ("Prelude","(,)") [TVar 0,TCons ("SetFunctions","Values") [TVar 0]])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("SetFunctions","Values") [2,3]) (Let [(4,Comb FuncCall ("Prelude","foldr1") [Comb (FuncPartCall 2) ("Prelude","?") [],Var 3]),(5,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("List","delete") [],Var 4],Var 3])] (Comb ConsCall ("Prelude","(,)") [Var 4,Comb ConsCall ("SetFunctions","Values") [Comb FuncCall ("Prelude","null") [Var 5],Var 5]]))])),Func ("SetFunctions","chooseValue") 1 Public (FuncType (TCons ("SetFunctions","Values") [TVar 0]) (TVar 0)) (Rule [1] (Comb FuncCall ("Prelude","fst") [Comb FuncCall ("SetFunctions","choose") [Var 1]])),Func ("SetFunctions","select") 1 Public (FuncType (TCons ("SetFunctions","Values") [TVar 0]) (TCons ("Prelude","(,)") [TVar 0,TCons ("SetFunctions","Values") [TVar 0]])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("SetFunctions","Values") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude",":") [4,5]) (Comb ConsCall ("Prelude","(,)") [Var 4,Comb ConsCall ("SetFunctions","Values") [Comb FuncCall ("Prelude","null") [Var 5],Var 5]])])])),Func ("SetFunctions","selectValue") 1 Public (FuncType (TCons ("SetFunctions","Values") [TVar 0]) (TVar 0)) (Rule [1] (Comb FuncCall ("Prelude","fst") [Comb FuncCall ("SetFunctions","select") [Var 1]])),Func ("SetFunctions","mapValues") 2 Public (FuncType (FuncType (TVar 0) (TVar 1)) (FuncType (TCons ("SetFunctions","Values") [TVar 0]) (TCons ("SetFunctions","Values") [TVar 1]))) (Rule [1,2] (Case  Flex (Var 2) [Branch (Pattern ("SetFunctions","Values") [3,4]) (Comb ConsCall ("SetFunctions","Values") [Var 3,Comb FuncCall ("Prelude","map") [Var 1,Var 4]])])),Func ("SetFunctions","foldValues") 3 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TVar 0))) (FuncType (TVar 0) (FuncType (TCons ("SetFunctions","Values") [TVar 0]) (TVar 0)))) (Rule [1,2,3] (Case  Flex (Var 3) [Branch (Pattern ("SetFunctions","Values") [4,5]) (Comb FuncCall ("Prelude","foldr") [Var 1,Var 2,Var 5])])),Func ("SetFunctions","minValue") 2 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons ("Prelude","Bool") []))) (FuncType (TCons ("SetFunctions","Values") [TVar 0]) (TVar 0))) (Rule [1,2] (Case  Flex (Var 2) [Branch (Pattern ("SetFunctions","Values") [3,4]) (Comb FuncCall ("SetFunctions","minValue.minOf.46") [Var 1,Var 4])])),Func ("SetFunctions","minValue.minOf.46") 2 Private (FuncType (FuncType (TVar 270) (FuncType (TVar 270) (TCons ("Prelude","Bool") []))) (FuncType (TCons ("Prelude","[]") [TVar 270]) (TVar 270))) (Rule [1,2] (Case  Flex (Var 2) [Branch (Pattern ("Prelude",":") [3,4]) (Case  Flex (Var 4) [Branch (Pattern ("Prelude","[]") []) (Var 3),Branch (Pattern ("Prelude",":") [5,6]) (Let [(7,Comb FuncCall ("SetFunctions","minValue.minOf.46") [Var 1,Comb ConsCall ("Prelude",":") [Var 5,Var 6]])] (Case  Rigid (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 1,Var 3],Var 7]) [Branch (Pattern ("Prelude","True") []) (Var 3),Branch (Pattern ("Prelude","False") []) (Var 7)]))])])),Func ("SetFunctions","maxValue") 2 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons ("Prelude","Bool") []))) (FuncType (TCons ("SetFunctions","Values") [TVar 0]) (TVar 0))) (Rule [1,2] (Case  Flex (Var 2) [Branch (Pattern ("SetFunctions","Values") [3,4]) (Comb FuncCall ("SetFunctions","maxValue.maxOf.55") [Var 1,Var 4])])),Func ("SetFunctions","maxValue.maxOf.55") 2 Private (FuncType (FuncType (TVar 291) (FuncType (TVar 291) (TCons ("Prelude","Bool") []))) (FuncType (TCons ("Prelude","[]") [TVar 291]) (TVar 291))) (Rule [1,2] (Case  Flex (Var 2) [Branch (Pattern ("Prelude",":") [3,4]) (Case  Flex (Var 4) [Branch (Pattern ("Prelude","[]") []) (Var 3),Branch (Pattern ("Prelude",":") [5,6]) (Let [(7,Comb FuncCall ("SetFunctions","maxValue.maxOf.55") [Var 1,Comb ConsCall ("Prelude",":") [Var 5,Var 6]])] (Case  Rigid (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 1,Var 3],Var 7]) [Branch (Pattern ("Prelude","True") []) (Var 7),Branch (Pattern ("Prelude","False") []) (Var 3)]))])])),Func ("SetFunctions","values2list") 1 Public (FuncType (TCons ("SetFunctions","Values") [TVar 0]) (TCons ("Prelude","IO") [TCons ("Prelude","[]") [TVar 0]])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("SetFunctions","Values") [2,3]) (Comb FuncCall ("Prelude","return") [Var 3])])),Func ("SetFunctions","printValues") 1 Public (FuncType (TCons ("SetFunctions","Values") [TVar 0]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])) (Rule [1] (Comb FuncCall ("Prelude",">>=") [Comb FuncCall ("SetFunctions","values2list") [Var 1],Comb FuncCall ("Prelude","mapIO_") [Comb (FuncPartCall 1) ("Prelude","print") []]])),Func ("SetFunctions","sortValues") 0 Public (FuncType (TCons ("SetFunctions","Values") [TVar 0]) (TCons ("Prelude","[]") [TVar 0])) (Rule [] (Comb (FuncPartCall 1) ("SetFunctions","sortValuesBy") [Comb (FuncPartCall 2) ("Prelude","<=") []])),Func ("SetFunctions","sortValuesBy") 2 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons ("Prelude","Bool") []))) (FuncType (TCons ("SetFunctions","Values") [TVar 0]) (TCons ("Prelude","[]") [TVar 0]))) (Rule [1,2] (Case  Flex (Var 2) [Branch (Pattern ("SetFunctions","Values") [3,4]) (Comb FuncCall ("Sort","mergeSort") [Var 1,Var 4])]))] []