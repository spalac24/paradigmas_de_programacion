Prog "KeyDatabase" ["Database","Dynamic","Integer","List","Maybe","Prelude","Sort"] [Type ("Dynamic","Dynamic") Public [] [],Type ("Database","Query") Public [0] [],Type ("Database","TError") Public [] [Cons ("Database","TError") 2 Public [TCons ("Database","TErrorKind") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],Type ("Database","TErrorKind") Public [] [Cons ("Database","KeyNotExistsError") 0 Public [],Cons ("Database","NoRelationshipError") 0 Public [],Cons ("Database","DuplicateKeyError") 0 Public [],Cons ("Database","KeyRequiredError") 0 Public [],Cons ("Database","UniqueError") 0 Public [],Cons ("Database","MinError") 0 Public [],Cons ("Database","MaxError") 0 Public [],Cons ("Database","UserDefinedError") 0 Public [],Cons ("Database","ExecutionError") 0 Public []],Type ("Database","Transaction") Public [0] [],TypeSyn ("KeyDatabase","Key") Private [] (TCons ("Prelude","Int") []),TypeSyn ("KeyDatabase","KeyPred") Private [0] (FuncType (TCons ("Prelude","Int") []) (FuncType (TVar 0) (TCons ("Dynamic","Dynamic") [])))] [Func ("Dynamic","dynamic") 0 Public (TVar 0) (Rule [] (Var 0)),Func ("Dynamic","persistent") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TVar 0)) (Rule [] (Var 0)),Func ("Dynamic","<>") 2 Public (FuncType (TCons ("Dynamic","Dynamic") []) (FuncType (TCons ("Dynamic","Dynamic") []) (TCons ("Dynamic","Dynamic") []))) (Rule [] (Var 0)),Func ("Dynamic","|>") 2 Public (FuncType (TCons ("Dynamic","Dynamic") []) (FuncType (TCons ("Prelude","Bool") []) (TCons ("Dynamic","Dynamic") []))) (Rule [] (Var 0)),Func ("Dynamic","|&>") 2 Public (FuncType (TCons ("Dynamic","Dynamic") []) (FuncType (TCons ("Prelude","Success") []) (TCons ("Dynamic","Dynamic") []))) (Rule [] (Var 0)),Func ("Database","queryAll") 1 Public (FuncType (FuncType (TVar 0) (TCons ("Dynamic","Dynamic") [])) (TCons ("Database","Query") [TCons ("Prelude","[]") [TVar 0]])) (Rule [] (Var 0)),Func ("Database","queryOne") 1 Public (FuncType (FuncType (TVar 0) (TCons ("Dynamic","Dynamic") [])) (TCons ("Database","Query") [TCons ("Prelude","Maybe") [TVar 0]])) (Rule [] (Var 0)),Func ("Database","queryOneWithDefault") 2 Public (FuncType (TVar 0) (FuncType (FuncType (TVar 0) (TCons ("Dynamic","Dynamic") [])) (TCons ("Database","Query") [TVar 0]))) (Rule [] (Var 0)),Func ("Database","queryJustOne") 0 Public (FuncType (FuncType (TVar 0) (TCons ("Dynamic","Dynamic") [])) (TCons ("Database","Query") [TVar 0])) (Rule [] (Var 0)),Func ("Database","dynamicExists") 1 Public (FuncType (TCons ("Dynamic","Dynamic") []) (TCons ("Database","Query") [TCons ("Prelude","Bool") []])) (Rule [] (Var 0)),Func ("Database","transformQ") 2 Public (FuncType (FuncType (TVar 0) (TVar 1)) (FuncType (TCons ("Database","Query") [TVar 0]) (TCons ("Database","Query") [TVar 1]))) (Rule [] (Var 0)),Func ("Database","runQ") 1 Public (FuncType (TCons ("Database","Query") [TVar 0]) (TCons ("Prelude","IO") [TVar 0])) (Rule [] (Var 0)),Func ("Database","showTError") 1 Public (FuncType (TCons ("Database","TError") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Var 0)),Func ("Database","addDB") 1 Public (FuncType (TCons ("Dynamic","Dynamic") []) (TCons ("Database","Transaction") [TCons ("Prelude","()") []])) (Rule [] (Var 0)),Func ("Database","deleteDB") 1 Public (FuncType (TCons ("Dynamic","Dynamic") []) (TCons ("Database","Transaction") [TCons ("Prelude","()") []])) (Rule [] (Var 0)),Func ("Database","getDB") 1 Public (FuncType (TCons ("Database","Query") [TVar 0]) (TCons ("Database","Transaction") [TVar 0])) (Rule [] (Var 0)),Func ("Database","returnT") 1 Public (FuncType (TVar 0) (TCons ("Database","Transaction") [TVar 0])) (Rule [] (Var 0)),Func ("Database","doneT") 0 Public (TCons ("Database","Transaction") [TCons ("Prelude","()") []]) (Rule [] (Var 0)),Func ("Database","errorT") 1 Public (FuncType (TCons ("Database","TError") []) (TCons ("Database","Transaction") [TVar 0])) (Rule [] (Var 0)),Func ("Database","failT") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Database","Transaction") [TVar 0])) (Rule [] (Var 0)),Func ("Database","|>>=") 2 Public (FuncType (TCons ("Database","Transaction") [TVar 0]) (FuncType (FuncType (TVar 0) (TCons ("Database","Transaction") [TVar 1])) (TCons ("Database","Transaction") [TVar 1]))) (Rule [] (Var 0)),Func ("Database","|>>") 2 Public (FuncType (TCons ("Database","Transaction") [TVar 0]) (FuncType (TCons ("Database","Transaction") [TVar 1]) (TCons ("Database","Transaction") [TVar 1]))) (Rule [] (Var 0)),Func ("Database","sequenceT") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Database","Transaction") [TVar 0]]) (TCons ("Database","Transaction") [TCons ("Prelude","[]") [TVar 0]])) (Rule [] (Var 0)),Func ("Database","sequenceT_") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Database","Transaction") [TVar 0]]) (TCons ("Database","Transaction") [TCons ("Prelude","()") []])) (Rule [] (Var 0)),Func ("Database","mapT") 1 Public (FuncType (FuncType (TVar 0) (TCons ("Database","Transaction") [TVar 1])) (FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("Database","Transaction") [TCons ("Prelude","[]") [TVar 1]]))) (Rule [] (Var 0)),Func ("Database","mapT_") 1 Public (FuncType (FuncType (TVar 0) (TCons ("Database","Transaction") [TVar 1])) (FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("Database","Transaction") [TCons ("Prelude","()") []]))) (Rule [] (Var 0)),Func ("Database","runT") 1 Public (FuncType (TCons ("Database","Transaction") [TVar 0]) (TCons ("Prelude","IO") [TCons ("Prelude","Either") [TVar 0,TCons ("Database","TError") []]])) (Rule [] (Var 0)),Func ("Database","runJustT") 1 Public (FuncType (TCons ("Database","Transaction") [TVar 0]) (TCons ("Prelude","IO") [TVar 0])) (Rule [] (Var 0)),Func ("Database","runTNA") 1 Public (FuncType (TCons ("Database","Transaction") [TVar 0]) (TCons ("Prelude","IO") [TCons ("Prelude","Either") [TVar 0,TCons ("Database","TError") []]])) (Rule [] (Var 0)),Func ("KeyDatabase","existsDBKey") 2 Public (FuncType (FuncType (TCons ("Prelude","Int") []) (FuncType (TVar 0) (TCons ("Dynamic","Dynamic") []))) (FuncType (TCons ("Prelude","Int") []) (TCons ("Database","Query") [TCons ("Prelude","Bool") []]))) (Rule [] (Var 0)),Func ("KeyDatabase","allDBKeys") 1 Public (FuncType (FuncType (TCons ("Prelude","Int") []) (FuncType (TVar 0) (TCons ("Dynamic","Dynamic") []))) (TCons ("Database","Query") [TCons ("Prelude","[]") [TCons ("Prelude","Int") []]])) (Rule [] (Var 0)),Func ("KeyDatabase","allDBInfos") 1 Public (FuncType (FuncType (TCons ("Prelude","Int") []) (FuncType (TVar 0) (TCons ("Dynamic","Dynamic") []))) (TCons ("Database","Query") [TCons ("Prelude","[]") [TVar 0]])) (Rule [] (Var 0)),Func ("KeyDatabase","allDBKeyInfos") 1 Public (FuncType (FuncType (TCons ("Prelude","Int") []) (FuncType (TVar 0) (TCons ("Dynamic","Dynamic") []))) (TCons ("Database","Query") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TVar 0]]])) (Rule [] (Var 0)),Func ("KeyDatabase","getDBInfo") 2 Public (FuncType (FuncType (TCons ("Prelude","Int") []) (FuncType (TVar 0) (TCons ("Dynamic","Dynamic") []))) (FuncType (TCons ("Prelude","Int") []) (TCons ("Database","Query") [TCons ("Prelude","Maybe") [TVar 0]]))) (Rule [] (Var 0)),Func ("KeyDatabase","index") 2 Public (FuncType (TVar 0) (FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("Prelude","Int") []))) (Rule [] (Var 0)),Func ("KeyDatabase","sortByIndex") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TVar 0]]) (TCons ("Prelude","[]") [TVar 0])) (Rule [] (Var 0)),Func ("KeyDatabase","groupByIndex") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TVar 0]]) (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TVar 0]])) (Rule [] (Var 0)),Func ("KeyDatabase","getDBInfos") 2 Public (FuncType (FuncType (TCons ("Prelude","Int") []) (FuncType (TVar 0) (TCons ("Dynamic","Dynamic") []))) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Int") []]) (TCons ("Database","Query") [TCons ("Prelude","Maybe") [TCons ("Prelude","[]") [TVar 0]]]))) (Rule [] (Var 0)),Func ("KeyDatabase","deleteDBEntry") 2 Public (FuncType (FuncType (TCons ("Prelude","Int") []) (FuncType (TVar 0) (TCons ("Dynamic","Dynamic") []))) (FuncType (TCons ("Prelude","Int") []) (TCons ("Database","Transaction") [TCons ("Prelude","()") []]))) (Rule [] (Var 0)),Func ("KeyDatabase","deleteDBEntries") 2 Public (FuncType (FuncType (TCons ("Prelude","Int") []) (FuncType (TVar 0) (TCons ("Dynamic","Dynamic") []))) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Int") []]) (TCons ("Database","Transaction") [TCons ("Prelude","()") []]))) (Rule [] (Var 0)),Func ("KeyDatabase","updateDBEntry") 3 Public (FuncType (FuncType (TCons ("Prelude","Int") []) (FuncType (TVar 0) (TCons ("Dynamic","Dynamic") []))) (FuncType (TCons ("Prelude","Int") []) (FuncType (TVar 0) (TCons ("Database","Transaction") [TCons ("Prelude","()") []])))) (Rule [] (Var 0)),Func ("KeyDatabase","newDBEntry") 2 Public (FuncType (FuncType (TCons ("Prelude","Int") []) (FuncType (TVar 0) (TCons ("Dynamic","Dynamic") []))) (FuncType (TVar 0) (TCons ("Database","Transaction") [TCons ("Prelude","Int") []]))) (Rule [] (Var 0)),Func ("KeyDatabase","newDBKeyEntry") 3 Public (FuncType (FuncType (TCons ("Prelude","Int") []) (FuncType (TVar 0) (TCons ("Dynamic","Dynamic") []))) (FuncType (TCons ("Prelude","Int") []) (FuncType (TVar 0) (TCons ("Database","Transaction") [TCons ("Prelude","()") []])))) (Rule [] (Var 0)),Func ("KeyDatabase","cleanDB") 1 Public (FuncType (FuncType (TCons ("Prelude","Int") []) (FuncType (TVar 0) (TCons ("Dynamic","Dynamic") []))) (TCons ("Database","Transaction") [TCons ("Prelude","()") []])) (Rule [] (Var 0))] [Op ("Dynamic","<>") InfixrOp 2,Op ("Dynamic","|>") InfixlOp 1,Op ("Dynamic","|&>") InfixlOp 1,Op ("Database","|>>") InfixlOp 1,Op ("Database","|>>=") InfixlOp 1]