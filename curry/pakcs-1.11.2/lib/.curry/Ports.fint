Prog "Ports" ["CPNS","Prelude","System","Time"] [Type ("Ports","Port") Public [0] [],Type ("Ports","SP_Msg") Public [] [Cons ("Ports","SP_Put") 1 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],Cons ("Ports","SP_GetLine") 1 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],Cons ("Ports","SP_GetChar") 1 Public [TCons ("Prelude","Char") []],Cons ("Ports","SP_EOF") 1 Public [TCons ("Prelude","Bool") []],Cons ("Ports","SP_Close") 0 Public []]] [Func ("Ports","openPort") 2 Public (FuncType (TCons ("Ports","Port") [TVar 0]) (FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("Prelude","Success") []))) (Rule [] (Var 0)),Func ("Ports","send") 2 Public (FuncType (TVar 0) (FuncType (TCons ("Ports","Port") [TVar 0]) (TCons ("Prelude","Success") []))) (Rule [] (Var 0)),Func ("Ports","doSend") 2 Public (FuncType (TVar 0) (FuncType (TCons ("Ports","Port") [TVar 0]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []]))) (Rule [] (Var 0)),Func ("Ports","ping") 2 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Ports","Port") [TVar 0]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TCons ("Prelude","Int") []]]))) (Rule [] (Var 0)),Func ("Ports","timeoutOnStream") 2 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("Prelude","Maybe") [TCons ("Prelude","[]") [TVar 0]]))) (Rule [] (Var 0)),Func ("Ports","openProcessPort") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Ports","Port") [TCons ("Ports","SP_Msg") []]])) (Rule [] (Var 0)),Func ("Ports","openNamedPort") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","[]") [TVar 0]])) (Rule [] (Var 0)),Func ("Ports","connectPortRepeat") 4 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","IO") [TVar 0]) (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TCons ("Ports","Port") [TVar 1]]]))))) (Rule [] (Var 0)),Func ("Ports","connectPortWait") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Ports","Port") [TVar 0]])) (Rule [] (Var 0)),Func ("Ports","connectPort") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Ports","Port") [TVar 0]])) (Rule [] (Var 0)),Func ("Ports","choiceSPEP") 2 Public (FuncType (TCons ("Ports","Port") [TCons ("Ports","SP_Msg") []]) (FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("Prelude","Either") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TVar 0]]))) (Rule [] (Var 0)),Func ("Ports","newObject") 3 Public (FuncType (FuncType (TVar 0) (FuncType (TCons ("Prelude","[]") [TVar 1]) (TCons ("Prelude","Success") []))) (FuncType (TVar 0) (FuncType (TCons ("Ports","Port") [TVar 1]) (TCons ("Prelude","Success") [])))) (Rule [] (Var 0)),Func ("Ports","newNamedObject") 3 Public (FuncType (FuncType (TVar 0) (FuncType (TCons ("Prelude","[]") [TVar 1]) (TCons ("Prelude","Success") []))) (FuncType (TVar 0) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])))) (Rule [] (Var 0)),Func ("Ports","runNamedServer") 2 Public (FuncType (FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("Prelude","IO") [TVar 1])) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TVar 1]))) (Rule [] (Var 0))] []