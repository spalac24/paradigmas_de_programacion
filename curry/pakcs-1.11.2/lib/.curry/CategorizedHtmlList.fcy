Prog "CategorizedHtmlList" ["Char","HTML","List","Prelude"] [] [Func ("CategorizedHtmlList","list2CategorizedHtml") 3 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TVar 0,TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]]]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TVar 1,TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]) (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (TCons ("Prelude","Bool") []))) (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []])))) (Rule [1,2,3] (Comb ConsCall ("Prelude",":") [Comb FuncCall ("CategorizedHtmlList","categories2LinkList") [Var 2],Comb FuncCall ("Prelude","map") [Comb (FuncPartCall 1) ("CategorizedHtmlList","list2CategorizedHtml._#lambda1") [Var 3,Var 2,Var 1],Var 2]])),Func ("CategorizedHtmlList","list2CategorizedHtml._#lambda1") 4 Private (FuncType (FuncType (TVar 34) (FuncType (TVar 18) (TCons ("Prelude","Bool") []))) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TVar 18,TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TVar 34,TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]]]) (FuncType (TCons ("Prelude","(,)") [TVar 18,TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (TCons ("HTML","HtmlExp") []))))) (Rule [1,2,3,4] (Case  Flex (Var 4) [Branch (Pattern ("Prelude","(,)") [5,6]) (Comb FuncCall ("HTML","anchor") [Comb FuncCall ("HTML","string2urlencoded") [Comb FuncCall ("Prelude","show") [Var 5]],Comb ConsCall ("Prelude",":") [Comb FuncCall ("HTML","h2") [Comb ConsCall ("Prelude",":") [Comb FuncCall ("HTML","htxt") [Var 6],Comb ConsCall ("Prelude","[]") []]],Comb FuncCall ("Prelude","++") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","concatMap") [Comb (FuncPartCall 1) ("CategorizedHtmlList","list2CategorizedHtml._#lambda1._#lambda2") []],Comb FuncCall ("Prelude","filter") [Comb (FuncPartCall 1) ("CategorizedHtmlList","list2CategorizedHtml._#lambda1._#lambda3") [Var 1,Var 5],Var 3]],Comb ConsCall ("Prelude",":") [Comb FuncCall ("CategorizedHtmlList","categories2LinkList") [Var 2],Comb ConsCall ("Prelude","[]") []]]]])])),Func ("CategorizedHtmlList","list2CategorizedHtml._#lambda1._#lambda2") 1 Private (FuncType (TCons ("Prelude","(,)") [TVar 34,TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]]) (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Comb FuncCall ("Prelude","++") [Var 3,Comb ConsCall ("Prelude",":") [Comb FuncCall ("HTML","breakline") [],Comb ConsCall ("Prelude","[]") []]])])),Func ("CategorizedHtmlList","list2CategorizedHtml._#lambda1._#lambda3") 3 Private (FuncType (FuncType (TVar 34) (FuncType (TVar 18) (TCons ("Prelude","Bool") []))) (FuncType (TVar 18) (FuncType (TCons ("Prelude","(,)") [TVar 34,TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]]) (TCons ("Prelude","Bool") [])))) (Rule [1,2,3] (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 1,Var 4],Var 2])])),Func ("CategorizedHtmlList","categories2LinkList") 1 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TVar 0,TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]) (TCons ("HTML","HtmlExp") [])) (Rule [1] (Comb FuncCall ("HTML","par") [Comb ConsCall ("Prelude",":") [Comb FuncCall ("HTML","center") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","concatMap") [Comb (FuncPartCall 1) ("CategorizedHtmlList","categories2LinkList._#lambda4") []],Var 1]],Comb ConsCall ("Prelude","[]") []]])),Func ("CategorizedHtmlList","categories2LinkList._#lambda4") 1 Private (FuncType (TCons ("Prelude","(,)") [TVar 6,TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Comb ConsCall ("Prelude",":") [Comb FuncCall ("HTML","href") [Comb ConsCall ("Prelude",":") [Lit (Charc  '#'),Comb FuncCall ("HTML","string2urlencoded") [Comb FuncCall ("Prelude","show") [Var 2]]],Comb ConsCall ("Prelude",":") [Comb FuncCall ("HTML","htxt") [Var 3],Comb ConsCall ("Prelude","[]") []]],Comb ConsCall ("Prelude",":") [Comb FuncCall ("HTML","nbsp") [],Comb ConsCall ("Prelude","[]") []]])])),Func ("CategorizedHtmlList","categorizeByItemKey") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]]]) (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []])) (Rule [1] (Comb FuncCall ("CategorizedHtmlList","list2CategorizedHtml") [Var 1,Comb FuncCall ("Prelude","map") [Comb (FuncPartCall 1) ("CategorizedHtmlList","categorizeByItemKey._#lambda5") [],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("CategorizedHtmlList","listHeads") [],Comb FuncCall ("Prelude","map") [Comb (FuncPartCall 1) ("Prelude","fst") [],Var 1]]],Comb (FuncPartCall 2) ("CategorizedHtmlList","categorizeStringHead") []])),Func ("CategorizedHtmlList","categorizeByItemKey._#lambda5") 1 Private (FuncType (TCons ("Prelude","Char") []) (TCons ("Prelude","(,)") [TCons ("Prelude","Char") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]])) (Rule [1] (Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("Char","toUpper") [Var 1],Comb ConsCall ("Prelude",":") [Comb FuncCall ("Char","toUpper") [Var 1],Comb ConsCall ("Prelude","[]") []]])),Func ("CategorizedHtmlList","stringList2ItemList") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]]])) (Rule [] (Comb (FuncPartCall 1) ("Prelude","map") [Comb (FuncPartCall 1) ("CategorizedHtmlList","stringList2ItemList._#lambda6") []])),Func ("CategorizedHtmlList","stringList2ItemList._#lambda6") 1 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]])) (Rule [1] (Comb ConsCall ("Prelude","(,)") [Var 1,Comb ConsCall ("Prelude",":") [Comb FuncCall ("HTML","htxt") [Var 1],Comb ConsCall ("Prelude","[]") []]])),Func ("CategorizedHtmlList","listHeads") 0 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Comb FuncCall ("Prelude",".") [Comb (FuncPartCall 1) ("List","nubBy") [Comb (FuncPartCall 2) ("CategorizedHtmlList","isUpperEqual") []],Comb (FuncPartCall 1) ("Prelude","foldr") [Comb (FuncPartCall 2) ("CategorizedHtmlList","listHeads._#lambda7") [],Comb ConsCall ("Prelude","[]") []]])),Func ("CategorizedHtmlList","listHeads._#lambda7") 2 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]))) (Rule [1,2] (Case  Rigid (Comb FuncCall ("Prelude","==") [Var 1,Comb ConsCall ("Prelude","[]") []]) [Branch (Pattern ("Prelude","True") []) (Var 2),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude",":") [Comb FuncCall ("Prelude","head") [Var 1],Var 2])])),Func ("CategorizedHtmlList","categorizeStringHead") 2 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","Char") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Prelude",":") [3,4]) (Comb FuncCall ("CategorizedHtmlList","isUpperEqual") [Var 3,Var 2])])),Func ("CategorizedHtmlList","isUpperEqual") 2 Private (FuncType (TCons ("Prelude","Char") []) (FuncType (TCons ("Prelude","Char") []) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Comb FuncCall ("Prelude","==") [Comb FuncCall ("Char","toUpper") [Var 1],Comb FuncCall ("Char","toUpper") [Var 2]])),Func ("CategorizedHtmlList","main") 0 Private (TCons ("Prelude","IO") [TCons ("HTML","HtmlForm") []]) (Rule [] (Comb FuncCall ("Prelude","$") [Comb (FuncPartCall 1) ("Prelude","return") [],Comb FuncCall ("HTML","form") [Comb ConsCall ("Prelude",":") [Lit (Charc  'C'),Comb ConsCall ("Prelude",":") [Lit (Charc  'a'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  'T'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude",":") [Lit (Charc  's'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude","[]") []]]]]]]],Comb FuncCall ("CategorizedHtmlList","categorizeByItemKey") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("CategorizedHtmlList","stringList2ItemList") [],Comb FuncCall ("CategorizedHtmlList","testList") []]]]])),Func ("CategorizedHtmlList","testList") 0 Private (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (Rule [] (Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude",":") [Lit (Charc  'b'),Comb ConsCall ("Prelude",":") [Lit (Charc  'b'),Comb ConsCall ("Prelude",":") [Lit (Charc  'c'),Comb ConsCall ("Prelude",":") [Lit (Charc  'd'),Comb ConsCall ("Prelude","[]") []]]]],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude",":") [Lit (Charc  'a'),Comb ConsCall ("Prelude",":") [Lit (Charc  'c'),Comb ConsCall ("Prelude",":") [Lit (Charc  'd'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude","[]") []]]]],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude",":") [Lit (Charc  'a'),Comb ConsCall ("Prelude",":") [Lit (Charc  'b'),Comb ConsCall ("Prelude","[]") []]],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude",":") [Lit (Charc  'c'),Comb ConsCall ("Prelude",":") [Lit (Charc  'd'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude","[]") []]]],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude",":") [Lit (Charc  'b'),Comb ConsCall ("Prelude","[]") []],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude",":") [Lit (Charc  'x'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude","[]") []]],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude",":") [Lit (Charc  'g'),Comb ConsCall ("Prelude",":") [Lit (Charc  'b'),Comb ConsCall ("Prelude",":") [Lit (Charc  'b'),Comb ConsCall ("Prelude",":") [Lit (Charc  'c'),Comb ConsCall ("Prelude",":") [Lit (Charc  'd'),Comb ConsCall ("Prelude","[]") []]]]]],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude",":") [Lit (Charc  'u'),Comb ConsCall ("Prelude",":") [Lit (Charc  'a'),Comb ConsCall ("Prelude",":") [Lit (Charc  'c'),Comb ConsCall ("Prelude",":") [Lit (Charc  'd'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude","[]") []]]]]],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude",":") [Lit (Charc  'O'),Comb ConsCall ("Prelude",":") [Lit (Charc  'a'),Comb ConsCall ("Prelude",":") [Lit (Charc  'b'),Comb ConsCall ("Prelude","[]") []]]],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude",":") [Lit (Charc  'Q'),Comb ConsCall ("Prelude",":") [Lit (Charc  'c'),Comb ConsCall ("Prelude",":") [Lit (Charc  'd'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude","[]") []]]]],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude",":") [Lit (Charc  'T'),Comb ConsCall ("Prelude",":") [Lit (Charc  'b'),Comb ConsCall ("Prelude","[]") []]],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude",":") [Lit (Charc  'm'),Comb ConsCall ("Prelude",":") [Lit (Charc  'x'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude","[]") []]]],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude",":") [Lit (Charc  'm'),Comb ConsCall ("Prelude",":") [Lit (Charc  'x'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude","[]") []]]]],Comb ConsCall ("Prelude","[]") []]]]]]]]]]]]]]))] []