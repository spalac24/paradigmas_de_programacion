:-style_check(-singleton).
:-use_module('../prologbasics').
:-use_module('../basics').
:-use_module(prim_readshowterm).
prim_readFlatCurryFile(_G442,_G443):-cp_string(_G442,_G446),atom_codes(_G448,_G446),readFlatProg(_G448,_G443),!.
readFlatProg(_G1,_G2):-existsFile(_G1),!, (pakcsrc(showfcyload,yes)->write(user_error,'>>> Reading '),write(user_error,_G1),write(user_error,' ... '),getRunTime(_G18);true),open(_G1,read,_G37),readStreamContents(_G37,_G40),!,readTerm(_G40,unchecked,_G44,_G45),skipWhiteSpace(_G44,[]), (pakcsrc(showfcyload,yes)->getRunTime(_G53),_G58 is _G53-_G18,write(user_error,_G58),write(user_error,' ms.'),nl(user_error);true),fcy2flatProg(_G45,_G2).
readFlatProg(_G138,_G139):-write('ERROR: FlatCurry file '),write(_G138),write(' not found!'),nl,!,fail.
fcy2flatProg('Prog'(_G183,_G184,_G185,_G186,_G187),'Flat.Prog'(_G183,_G184,_G191,_G192,_G193,_G194)):-fcy2flatTypes(_G185,_G191),map2M(user:fcy2flatFunc,_G186,_G192),map2M(user:fcy2flatOp,_G187,_G193),fcyGetPublicTypes(_G185,_G217),fcyGetPublicFuncs(_G186,_G220),append(_G217,_G220,_G224),map2M(user:fcy2flatTrans,_G224,_G194).
fcy2flatTypes([],[]).
fcy2flatTypes(['Type'(_G290,_G291,_G292,_G293)|_G296],['Flat.Type'(_G298,_G292,_G300)|_G303]):-fcy2flatName(_G290,_G298),map2M(user:fcy2flatCons,_G293,_G300),fcy2flatTypes(_G296,_G303).
fcy2flatTypes(['TypeSyn'(_G348,_G349,_G350,_G351)|_G354],_G357):-fcy2flatTypes(_G354,_G357).
fcy2flatCons('Cons'(_G383,_G384,_G385,_G386),'Flat.Cons'(_G388,_G384,_G390)):-fcy2flatName(_G383,_G388),map2M(user:fcy2flatTypeExpr,_G386,_G390).
fcy2flatTypeExpr('TVar'(_G429),'Flat.TVar'(_G429)).
fcy2flatTypeExpr('FuncType'(_G451,_G452),'Flat.FuncType'(_G454,_G455)):-fcy2flatTypeExpr(_G451,_G454),fcy2flatTypeExpr(_G452,_G455).
fcy2flatTypeExpr('TCons'(_G1,_G2),'Flat.TCons'(_G4,_G5)):-fcy2flatName(_G1,_G4),map2M(user:fcy2flatTypeExpr,_G2,_G5).
fcyGetPublicTypes([],[]).
fcyGetPublicTypes(['Type'(_G62,'Public',_G64,_G65)|_G68],_G71):-!,fcyGetPublicConstrs(_G65,_G74),fcyGetPublicTypes(_G68,_G77),append([_G62|_G74],_G77,_G71).
fcyGetPublicTypes(['Type'(_G116,_G117,_G118,_G119)|_G122],_G125):-!,fcyGetPublicConstrs(_G119,_G128),fcyGetPublicTypes(_G122,_G131),append(_G128,_G131,_G125).
fcyGetPublicTypes(['TypeSyn'(_G167,'Public',_G169,_G170)|_G173],[_G167|_G176]):-!,fcyGetPublicTypes(_G173,_G176).
fcyGetPublicTypes([_G208|_G209],_G212):-fcyGetPublicTypes(_G209,_G212).
fcyGetPublicConstrs([],[]).
fcyGetPublicConstrs(['Cons'(_G256,_G257,'Public',_G259)|_G262],[_G256|_G265]):-!,fcyGetPublicConstrs(_G262,_G265).
fcyGetPublicConstrs([_G297|_G298],_G301):-fcyGetPublicConstrs(_G298,_G301).
fcyGetPublicFuncs([],[]).
fcyGetPublicFuncs(['Func'(_G345,_G346,'Public',_G348,_G349)|_G352],[_G345|_G355]):-!,fcyGetPublicFuncs(_G352,_G355).
fcyGetPublicFuncs([_G387|_G388],_G391):-fcyGetPublicFuncs(_G388,_G391).
fcy2flatFunc('Func'(_G417,_G418,_G419,_G420,_G421),'Flat.Func'(_G423,_G418,_G425,_G426)):-fcy2flatName(_G417,_G423),fcy2flatTypeExpr(_G420,_G425),fcy2flatTypeRule(_G421,_G426).
fcy2flatTypeRule('External'(_G467),'Flat.External'(_G467)).
fcy2flatTypeRule('Rule'(_G1,_G2),'Flat.Rule'(_G1,_G5)):-fcy2flatExpr(_G2,_G5).
fcy2flatLit('Intc'(_G31),'Flat.Intc'(_G31)).
fcy2flatLit('Floatc'(_G53),'Flat.Floatc'(_G53)).
fcy2flatLit('Charc'(_G75),'Flat.Charc'(_G75)).
fcy2flatExpr('Var'(_G97),'Flat.Var'(_G97)).
fcy2flatExpr('Lit'(_G119),'Flat.Lit'(_G121)):-fcy2flatLit(_G119,_G121).
fcy2flatExpr('Comb'('FuncCall',_G154,[_G150]),'Flat.Choice'(_G157)):-fcy2flatQName(_G154,[99,111,109,109,105,116]),!,fcy2flatExpr(_G150,_G157).
fcy2flatExpr('Comb'('FuncCall',_G220,[_G213,_G216]),'Flat.Apply'(_G223,_G224)):-fcy2flatQName(_G220,[97,112,112,108,121]),!,fcy2flatExpr(_G213,_G223),fcy2flatExpr(_G216,_G224).
fcy2flatExpr('Comb'('FuncCall',_G290,[_G283,_G286]),'Flat.GuardedExpr'([],'Flat.Constr'([],_G294),_G298)):-fcy2flatQName(_G290,[99,111,110,100]),!,fcy2flatExpr(_G283,_G294),fcy2flatExpr(_G286,_G298).
fcy2flatExpr('Free'(_G364,'Comb'('FuncCall',_G361,[_G354,_G357])),'Flat.GuardedExpr'(_G364,'Flat.Constr'([],_G368),_G372)):-fcy2flatQName(_G361,[99,111,110,100]),!,fcy2flatExpr(_G354,_G368),fcy2flatExpr(_G357,_G372).
fcy2flatExpr('Comb'(_G428,_G429,_G430),'Flat.Comb'(_G432,_G433,_G434)):-fcy2flatName(_G429,_G433),fcy2flatCombType(_G428,_G432),map2M(user:fcy2flatExpr,_G430,_G434).
fcy2flatExpr('Free'(_G1,_G2),'Flat.Constr'(_G1,_G5)):-fcy2flatExpr(_G2,_G5).
fcy2flatExpr('Or'(_G26,_G27),'Flat.Or'(_G29,_G30)):-fcy2flatExpr(_G26,_G29),fcy2flatExpr(_G27,_G30).
fcy2flatExpr('Case'(_G65,_G66,_G67),'Flat.Case'(_G69,_G70,_G71)):-fcy2flatCaseType(_G65,_G69),fcy2flatExpr(_G66,_G70),map2M(user:fcy2flatBranch,_G67,_G71).
fcy2flatExpr('Let'(_G116,_G117),'Flat.Let'(_G119,_G120)):-map2M(user:fcy2flatBinding,_G116,_G119),fcy2flatExpr(_G117,_G120).
fcy2flatExpr(_G159,_G159):-write(user_error,'*** Internal error in FlatCurry file: Illegal expression "'),write(user_error,_G159),write(user_error,'"!'),nl(user_error),pleaseReport,fail.
fcy2flatBinding('Prelude.(,)'(_G209,_G210),'Prelude.(,)'(_G209,_G213)):-fcy2flatExpr(_G210,_G213).
fcy2flatCaseType('Rigid','Flat.Rigid').
fcy2flatCaseType('Flex','Flat.Flex').
fcy2flatCombType('FuncCall','Flat.FuncCall').
fcy2flatCombType('ConsCall','Flat.ConsCall').
fcy2flatCombType('FuncPartCall'(_G314),'Flat.PartCall').
fcy2flatCombType('ConsPartCall'(_G334),'Flat.ConsCall').
fcy2flatBranch('Branch'('LPattern'(_G354),_G357),'Flat.Branch'('Flat.LPattern'(_G359),_G362)):-fcy2flatLit(_G354,_G359),fcy2flatExpr(_G357,_G362).
fcy2flatBranch('Branch'('Pattern'(_G397,_G398),_G401),'Flat.Branch'('Flat.Pattern'(_G403,_G398),_G407)):-fcy2flatName(_G397,_G403),fcy2flatExpr(_G401,_G407).
fcy2flatOp('Op'(_G442,_G443,_G444),'Flat.Op'(_G446,_G447,_G444)):-fcy2flatName(_G442,_G446),fcy2flatFixity(_G443,_G447).
fcy2flatFixity('InfixOp','Flat.InfixOp').
fcy2flatFixity('InfixlOp','Flat.InfixlOp').
fcy2flatFixity('InfixrOp','Flat.InfixrOp').
fcy2flatTrans('Prelude.(,)'(_G37,_G38),'Flat.Trans'(_G38,_G38)):-cp_string(_G37,[80,114,101,108,117,100,101]),!.
fcy2flatTrans('Prelude.(,)'(_G94,_G95),'Flat.Trans'(_G95,_G98)):-char_int(_G103,46),append(_G94,[_G103|_G95],_G98).
fcy2flatQName('Prelude.(,)'(_G137,_G138),_G141):-cp_string(_G137,[80,114,101,108,117,100,101]),!,cp_string(_G138,_G141).
fcy2flatQName('Prelude.(,)'(_G197,_G198),_G201):-cp_string(_G197,_G204),cp_string(_G198,_G207),append(_G204,[46|_G207],_G201).
fcy2flatName('Prelude.(,)'(_G243,_G244),_G244):-cp_string(_G243,[80,114,101,108,117,100,101]),!.
fcy2flatName('Prelude.(,)'(_G297,_G298),_G301):-char_int(_G303,46),append(_G297,[_G303|_G298],_G301).
