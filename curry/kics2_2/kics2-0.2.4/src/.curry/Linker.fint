Prog "Linker" ["FilePath","GhciComm","IO","Installation","List","Names","Prelude","PropertyFile","RCFile","ReadShowTerm","System","Utils","AbstractCurry","Directory"] [Type ("Linker","_#Rec:ReplState") Public [] [Cons ("Linker","_#Lab:kics2Home") 1 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],Cons ("Linker","_#Lab:rcvars") 1 Public [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]],Cons ("Linker","_#Lab:idSupply") 1 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],Cons ("Linker","_#Lab:verbose") 1 Public [TCons ("Prelude","Int") []],Cons ("Linker","_#Lab:importPaths") 1 Public [TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],Cons ("Linker","_#Lab:libPaths") 1 Public [TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],Cons ("Linker","_#Lab:outputSubdir") 1 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],Cons ("Linker","_#Lab:mainMod") 1 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],Cons ("Linker","_#Lab:addMods") 1 Public [TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]],Cons ("Linker","_#Lab:prompt") 1 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],Cons ("Linker","_#Lab:optim") 1 Public [TCons ("Prelude","Bool") []],Cons ("Linker","_#Lab:ndMode") 1 Public [TCons ("Linker","NonDetMode") []],Cons ("Linker","_#Lab:firstSol") 1 Public [TCons ("Prelude","Bool") []],Cons ("Linker","_#Lab:interactive") 1 Public [TCons ("Prelude","Bool") []],Cons ("Linker","_#Lab:showBindings") 1 Public [TCons ("Prelude","Bool") []],Cons ("Linker","_#Lab:showTime") 1 Public [TCons ("Prelude","Bool") []],Cons ("Linker","_#Lab:useGhci") 1 Public [TCons ("Prelude","Bool") []],Cons ("Linker","_#Lab:cmpOpts") 1 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],Cons ("Linker","_#Lab:ghcOpts") 1 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],Cons ("Linker","_#Lab:rtsOpts") 1 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],Cons ("Linker","_#Lab:rtsArgs") 1 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],Cons ("Linker","_#Lab:quit") 1 Public [TCons ("Prelude","Bool") []],Cons ("Linker","_#Lab:sourceguis") 1 Public [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("IO","Handle") []]]]],Cons ("Linker","_#Lab:ghcicomm") 1 Public [TCons ("Prelude","Maybe") [TCons ("GhciComm","GhciComm") []]]],Type ("Linker","ReplState") Public [] [],Type ("Linker","MainCompile") Public [] [Cons ("Linker","MainError") 0 Public [],Cons ("Linker","MainDet") 0 Public [],Cons ("Linker","MainNonDet") 0 Public []],Type ("Linker","NonDetMode") Public [] [Cons ("Linker","DFS") 0 Public [],Cons ("Linker","BFS") 0 Public [],Cons ("Linker","IDS") 1 Public [TCons ("Prelude","Int") []],Cons ("Linker","Par") 1 Public [TCons ("Prelude","Int") []],Cons ("Linker","PrDFS") 0 Public [],Cons ("Linker","PrtChoices") 1 Public [TCons ("Prelude","Int") []]]] [Func ("Linker","_#selR@ReplState.kics2Home") 1 Public (FuncType (TCons ("Linker","ReplState") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Var 0)),Func ("Linker","_#updR@ReplState.kics2Home") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Linker","ReplState") []))) (Rule [] (Var 0)),Func ("Linker","_#selR@ReplState.rcvars") 1 Public (FuncType (TCons ("Linker","ReplState") []) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]])) (Rule [] (Var 0)),Func ("Linker","_#updR@ReplState.rcvars") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]) (TCons ("Linker","ReplState") []))) (Rule [] (Var 0)),Func ("Linker","_#selR@ReplState.idSupply") 1 Public (FuncType (TCons ("Linker","ReplState") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Var 0)),Func ("Linker","_#updR@ReplState.idSupply") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Linker","ReplState") []))) (Rule [] (Var 0)),Func ("Linker","_#selR@ReplState.verbose") 1 Public (FuncType (TCons ("Linker","ReplState") []) (TCons ("Prelude","Int") [])) (Rule [] (Var 0)),Func ("Linker","_#updR@ReplState.verbose") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","Int") []) (TCons ("Linker","ReplState") []))) (Rule [] (Var 0)),Func ("Linker","_#selR@ReplState.importPaths") 1 Public (FuncType (TCons ("Linker","ReplState") []) (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]])) (Rule [] (Var 0)),Func ("Linker","_#updR@ReplState.importPaths") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (TCons ("Linker","ReplState") []))) (Rule [] (Var 0)),Func ("Linker","_#selR@ReplState.libPaths") 1 Public (FuncType (TCons ("Linker","ReplState") []) (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]])) (Rule [] (Var 0)),Func ("Linker","_#updR@ReplState.libPaths") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (TCons ("Linker","ReplState") []))) (Rule [] (Var 0)),Func ("Linker","_#selR@ReplState.outputSubdir") 1 Public (FuncType (TCons ("Linker","ReplState") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Var 0)),Func ("Linker","_#updR@ReplState.outputSubdir") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Linker","ReplState") []))) (Rule [] (Var 0)),Func ("Linker","_#selR@ReplState.mainMod") 1 Public (FuncType (TCons ("Linker","ReplState") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Var 0)),Func ("Linker","_#updR@ReplState.mainMod") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Linker","ReplState") []))) (Rule [] (Var 0)),Func ("Linker","_#selR@ReplState.addMods") 1 Public (FuncType (TCons ("Linker","ReplState") []) (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]])) (Rule [] (Var 0)),Func ("Linker","_#updR@ReplState.addMods") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (TCons ("Linker","ReplState") []))) (Rule [] (Var 0)),Func ("Linker","_#selR@ReplState.prompt") 1 Public (FuncType (TCons ("Linker","ReplState") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Var 0)),Func ("Linker","_#updR@ReplState.prompt") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Linker","ReplState") []))) (Rule [] (Var 0)),Func ("Linker","_#selR@ReplState.optim") 1 Public (FuncType (TCons ("Linker","ReplState") []) (TCons ("Prelude","Bool") [])) (Rule [] (Var 0)),Func ("Linker","_#updR@ReplState.optim") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","Bool") []) (TCons ("Linker","ReplState") []))) (Rule [] (Var 0)),Func ("Linker","_#selR@ReplState.ndMode") 1 Public (FuncType (TCons ("Linker","ReplState") []) (TCons ("Linker","NonDetMode") [])) (Rule [] (Var 0)),Func ("Linker","_#updR@ReplState.ndMode") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Linker","NonDetMode") []) (TCons ("Linker","ReplState") []))) (Rule [] (Var 0)),Func ("Linker","_#selR@ReplState.firstSol") 1 Public (FuncType (TCons ("Linker","ReplState") []) (TCons ("Prelude","Bool") [])) (Rule [] (Var 0)),Func ("Linker","_#updR@ReplState.firstSol") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","Bool") []) (TCons ("Linker","ReplState") []))) (Rule [] (Var 0)),Func ("Linker","_#selR@ReplState.interactive") 1 Public (FuncType (TCons ("Linker","ReplState") []) (TCons ("Prelude","Bool") [])) (Rule [] (Var 0)),Func ("Linker","_#updR@ReplState.interactive") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","Bool") []) (TCons ("Linker","ReplState") []))) (Rule [] (Var 0)),Func ("Linker","_#selR@ReplState.showBindings") 1 Public (FuncType (TCons ("Linker","ReplState") []) (TCons ("Prelude","Bool") [])) (Rule [] (Var 0)),Func ("Linker","_#updR@ReplState.showBindings") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","Bool") []) (TCons ("Linker","ReplState") []))) (Rule [] (Var 0)),Func ("Linker","_#selR@ReplState.showTime") 1 Public (FuncType (TCons ("Linker","ReplState") []) (TCons ("Prelude","Bool") [])) (Rule [] (Var 0)),Func ("Linker","_#updR@ReplState.showTime") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","Bool") []) (TCons ("Linker","ReplState") []))) (Rule [] (Var 0)),Func ("Linker","_#selR@ReplState.useGhci") 1 Public (FuncType (TCons ("Linker","ReplState") []) (TCons ("Prelude","Bool") [])) (Rule [] (Var 0)),Func ("Linker","_#updR@ReplState.useGhci") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","Bool") []) (TCons ("Linker","ReplState") []))) (Rule [] (Var 0)),Func ("Linker","_#selR@ReplState.cmpOpts") 1 Public (FuncType (TCons ("Linker","ReplState") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Var 0)),Func ("Linker","_#updR@ReplState.cmpOpts") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Linker","ReplState") []))) (Rule [] (Var 0)),Func ("Linker","_#selR@ReplState.ghcOpts") 1 Public (FuncType (TCons ("Linker","ReplState") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Var 0)),Func ("Linker","_#updR@ReplState.ghcOpts") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Linker","ReplState") []))) (Rule [] (Var 0)),Func ("Linker","_#selR@ReplState.rtsOpts") 1 Public (FuncType (TCons ("Linker","ReplState") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Var 0)),Func ("Linker","_#updR@ReplState.rtsOpts") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Linker","ReplState") []))) (Rule [] (Var 0)),Func ("Linker","_#selR@ReplState.rtsArgs") 1 Public (FuncType (TCons ("Linker","ReplState") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Var 0)),Func ("Linker","_#updR@ReplState.rtsArgs") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Linker","ReplState") []))) (Rule [] (Var 0)),Func ("Linker","_#selR@ReplState.quit") 1 Public (FuncType (TCons ("Linker","ReplState") []) (TCons ("Prelude","Bool") [])) (Rule [] (Var 0)),Func ("Linker","_#updR@ReplState.quit") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","Bool") []) (TCons ("Linker","ReplState") []))) (Rule [] (Var 0)),Func ("Linker","_#selR@ReplState.sourceguis") 1 Public (FuncType (TCons ("Linker","ReplState") []) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("IO","Handle") []]]])) (Rule [] (Var 0)),Func ("Linker","_#updR@ReplState.sourceguis") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("IO","Handle") []]]]) (TCons ("Linker","ReplState") []))) (Rule [] (Var 0)),Func ("Linker","_#selR@ReplState.ghcicomm") 1 Public (FuncType (TCons ("Linker","ReplState") []) (TCons ("Prelude","Maybe") [TCons ("GhciComm","GhciComm") []])) (Rule [] (Var 0)),Func ("Linker","_#updR@ReplState.ghcicomm") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","Maybe") [TCons ("GhciComm","GhciComm") []]) (TCons ("Linker","ReplState") []))) (Rule [] (Var 0)),Func ("Linker","initReplState") 0 Public (TCons ("Linker","ReplState") []) (Rule [] (Var 0)),Func ("Linker","loadPaths") 1 Public (FuncType (TCons ("Linker","ReplState") []) (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]])) (Rule [] (Var 0)),Func ("Linker","mainGoalFile") 0 Public (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (Rule [] (Var 0)),Func ("Linker","writeVerboseInfo") 3 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])))) (Rule [] (Var 0)),Func ("Linker","createAndCompileMain") 4 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","Bool") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","Maybe") [TCons ("Prelude","Int") []]) (TCons ("Prelude","IO") [TCons ("Prelude","(,)") [TCons ("Linker","ReplState") [],TCons ("Linker","MainCompile") []]]))))) (Rule [] (Var 0))] []