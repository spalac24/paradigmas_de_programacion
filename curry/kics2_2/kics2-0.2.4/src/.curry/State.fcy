Prog "State" ["Prelude"] [TypeSyn ("State","State") Public [0,1] (FuncType (TVar 1) (TCons ("Prelude","(,)") [TVar 0,TVar 1]))] [Func ("State","bindS") 3 Public (FuncType (FuncType (TVar 0) (TCons ("Prelude","(,)") [TVar 1,TVar 0])) (FuncType (FuncType (TVar 1) (FuncType (TVar 0) (TCons ("Prelude","(,)") [TVar 2,TVar 0]))) (FuncType (TVar 0) (TCons ("Prelude","(,)") [TVar 2,TVar 0])))) (Rule [1,2,3] (Let [(4,Comb FuncCall ("Prelude","apply") [Var 1,Var 3]),(5,Comb FuncCall ("State","bindS._#selFP2#x") [Var 4]),(6,Comb FuncCall ("State","bindS._#selFP3#newS") [Var 4])] (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 2,Var 5],Var 6]))),Func ("State","bindS._#selFP2#x") 1 Private (FuncType (TCons ("Prelude","(,)") [TVar 7,TVar 8]) (TVar 7)) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 2)])),Func ("State","bindS._#selFP3#newS") 1 Private (FuncType (TCons ("Prelude","(,)") [TVar 7,TVar 8]) (TVar 8)) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 3)])),Func ("State","returnS") 2 Public (FuncType (TVar 0) (FuncType (TVar 1) (TCons ("Prelude","(,)") [TVar 0,TVar 1]))) (Rule [1,2] (Comb ConsCall ("Prelude","(,)") [Var 1,Var 2])),Func ("State","sequenceS") 0 Public (FuncType (TCons ("Prelude","[]") [FuncType (TVar 0) (TCons ("Prelude","(,)") [TVar 1,TVar 0])]) (FuncType (TVar 0) (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TVar 1],TVar 0]))) (Rule [] (Comb (FuncPartCall 1) ("Prelude","foldr") [Comb (FuncPartCall 2) ("State","sequenceS._#lambda1") [],Comb (FuncPartCall 1) ("State","returnS") [Comb ConsCall ("Prelude","[]") []]])),Func ("State","sequenceS._#lambda1") 2 Private (FuncType (FuncType (TVar 37) (TCons ("Prelude","(,)") [TVar 38,TVar 37])) (FuncType (FuncType (TVar 37) (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TVar 38],TVar 37])) (FuncType (TVar 37) (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TVar 38],TVar 37])))) (Rule [1,2] (Comb (FuncPartCall 1) ("State","bindS") [Var 1,Comb (FuncPartCall 1) ("State","sequenceS._#lambda1._#lambda2") [Var 2]])),Func ("State","sequenceS._#lambda1._#lambda2") 2 Private (FuncType (FuncType (TVar 37) (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TVar 38],TVar 37])) (FuncType (TVar 38) (FuncType (TVar 37) (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TVar 38],TVar 37])))) (Rule [1,2] (Comb (FuncPartCall 1) ("State","bindS") [Var 1,Comb (FuncPartCall 1) ("State","sequenceS._#lambda1._#lambda2._#lambda3") [Var 2]])),Func ("State","sequenceS._#lambda1._#lambda2._#lambda3") 2 Private (FuncType (TVar 38) (FuncType (TCons ("Prelude","[]") [TVar 38]) (FuncType (TVar 71) (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TVar 38],TVar 71])))) (Rule [1,2] (Comb (FuncPartCall 1) ("State","returnS") [Comb ConsCall ("Prelude",":") [Var 1,Var 2]])),Func ("State","getS") 1 Public (FuncType (TVar 0) (TCons ("Prelude","(,)") [TVar 0,TVar 0])) (Rule [1] (Comb ConsCall ("Prelude","(,)") [Var 1,Var 1])),Func ("State","setS") 2 Public (FuncType (TVar 0) (FuncType (TVar 0) (TCons ("Prelude","(,)") [TCons ("Prelude","()") [],TVar 0]))) (Rule [1,2] (Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude","()") [],Var 1])),Func ("State","modifyS") 2 Public (FuncType (FuncType (TVar 0) (TVar 0)) (FuncType (TVar 0) (TCons ("Prelude","(,)") [TCons ("Prelude","()") [],TVar 0]))) (Rule [1,2] (Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude","()") [],Comb FuncCall ("Prelude","apply") [Var 1,Var 2]])),Func ("State","runState") 2 Public (FuncType (FuncType (TVar 0) (TCons ("Prelude","(,)") [TVar 1,TVar 0])) (FuncType (TVar 0) (TCons ("Prelude","(,)") [TVar 1,TVar 0]))) (Rule [1,2] (Comb FuncCall ("Prelude","apply") [Var 1,Var 2])),Func ("State","evalState") 2 Public (FuncType (FuncType (TVar 0) (TCons ("Prelude","(,)") [TVar 1,TVar 0])) (FuncType (TVar 0) (TVar 1))) (Rule [1,2] (Comb FuncCall ("Prelude","fst") [Comb FuncCall ("State","runState") [Var 1,Var 2]])),Func ("State","execState") 2 Public (FuncType (FuncType (TVar 0) (TCons ("Prelude","(,)") [TVar 1,TVar 0])) (FuncType (TVar 0) (TVar 0))) (Rule [1,2] (Comb FuncCall ("Prelude","snd") [Comb FuncCall ("State","runState") [Var 1,Var 2]]))] []