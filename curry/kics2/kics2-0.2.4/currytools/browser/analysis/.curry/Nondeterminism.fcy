Prog "Nondeterminism" ["Dependency","FlatCurry","Overlapping","Prelude"] [] [Func ("Nondeterminism","analyseNondeterminism") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("FlatCurry","FuncDecl") []]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","Bool") []]])) (Rule [] (Comb (FuncPartCall 1) ("Dependency","analyseWithDependencies") [Comb (FuncPartCall 1) ("Nondeterminism","isNondeterministicDefined") [],Comb FuncCall ("Prelude","or") []])),Func ("Nondeterminism","isNondeterministicDefined") 1 Private (FuncType (TCons ("FlatCurry","FuncDecl") []) (TCons ("Prelude","Bool") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("FlatCurry","Func") [2,3,4,5,6]) (Comb FuncCall ("Nondeterminism","isNondeterministicRule") [Var 6])])),Func ("Nondeterminism","isNondeterministicRule") 1 Private (FuncType (TCons ("FlatCurry","Rule") []) (TCons ("Prelude","Bool") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("FlatCurry","Rule") [2,3]) (Comb FuncCall ("Overlapping","orInExpr") [Var 3]),Branch (Pattern ("FlatCurry","External") [4]) (Comb ConsCall ("Prelude","False") [])])),Func ("Nondeterminism","analyseSetValued") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("FlatCurry","FuncDecl") []]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","Bool") []]])) (Rule [] (Comb (FuncPartCall 1) ("Dependency","analyseWithDependencies") [Comb (FuncPartCall 1) ("Nondeterminism","isSetValuedDefined") [],Comb FuncCall ("Prelude","or") []])),Func ("Nondeterminism","isSetValuedDefined") 1 Private (FuncType (TCons ("FlatCurry","FuncDecl") []) (TCons ("Prelude","Bool") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("FlatCurry","Func") [2,3,4,5,6]) (Comb FuncCall ("Prelude","&&") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","notElem") [Var 2],Comb ConsCall ("Prelude",":") [Comb FuncCall ("Nondeterminism","pre") [Comb ConsCall ("Prelude",":") [Lit (Charc  'f'),Comb ConsCall ("Prelude",":") [Lit (Charc  'a'),Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude",":") [Lit (Charc  'd'),Comb ConsCall ("Prelude","[]") []]]]]]]],Comb ConsCall ("Prelude",":") [Comb FuncCall ("Nondeterminism","pre") [Comb ConsCall ("Prelude",":") [Lit (Charc  '$'),Comb ConsCall ("Prelude",":") [Lit (Charc  '!'),Comb ConsCall ("Prelude",":") [Lit (Charc  '!'),Comb ConsCall ("Prelude","[]") []]]]],Comb ConsCall ("Prelude",":") [Comb FuncCall ("Nondeterminism","pre") [Comb ConsCall ("Prelude",":") [Lit (Charc  '$'),Comb ConsCall ("Prelude",":") [Lit (Charc  '#'),Comb ConsCall ("Prelude",":") [Lit (Charc  '#'),Comb ConsCall ("Prelude","[]") []]]]],Comb ConsCall ("Prelude","[]") []]]]],Comb FuncCall ("Nondeterminism","isSetValuedRule") [Var 6]])])),Func ("Nondeterminism","isSetValuedRule") 1 Private (FuncType (TCons ("FlatCurry","Rule") []) (TCons ("Prelude","Bool") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("FlatCurry","Rule") [2,3]) (Comb FuncCall ("Prelude","||") [Comb FuncCall ("Overlapping","orInExpr") [Var 3],Comb FuncCall ("Nondeterminism","extraVarInExpr") [Var 3]]),Branch (Pattern ("FlatCurry","External") [4]) (Comb ConsCall ("Prelude","False") [])])),Func ("Nondeterminism","extraVarInExpr") 1 Private (FuncType (TCons ("FlatCurry","Expr") []) (TCons ("Prelude","Bool") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("FlatCurry","Var") [2]) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("FlatCurry","Lit") [3]) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("FlatCurry","Comb") [4,5,6]) (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","or") [],Comb FuncCall ("Prelude","map") [Comb (FuncPartCall 1) ("Nondeterminism","extraVarInExpr") [],Var 6]]),Branch (Pattern ("FlatCurry","Free") [7,8]) (Comb FuncCall ("Prelude","||") [Comb FuncCall ("Prelude","not") [Comb FuncCall ("Prelude","null") [Var 7]],Comb FuncCall ("Nondeterminism","extraVarInExpr") [Var 8]]),Branch (Pattern ("FlatCurry","Let") [9,10]) (Comb FuncCall ("Prelude","||") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","any") [Comb (FuncPartCall 1) ("Nondeterminism","extraVarInExpr") []],Comb FuncCall ("Prelude","map") [Comb (FuncPartCall 1) ("Prelude","snd") [],Var 9]],Comb FuncCall ("Nondeterminism","extraVarInExpr") [Var 10]]),Branch (Pattern ("FlatCurry","Or") [11,12]) (Comb FuncCall ("Prelude","||") [Comb FuncCall ("Nondeterminism","extraVarInExpr") [Var 11],Comb FuncCall ("Nondeterminism","extraVarInExpr") [Var 12]]),Branch (Pattern ("FlatCurry","Case") [13,14,15]) (Comb FuncCall ("Prelude","||") [Comb FuncCall ("Nondeterminism","extraVarInExpr") [Var 14],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","any") [Comb (FuncPartCall 1) ("Nondeterminism","extraVarInExpr.extraVarInBranch.46") []],Var 15]])])),Func ("Nondeterminism","extraVarInExpr.extraVarInBranch.46") 1 Private (FuncType (TCons ("FlatCurry","BranchExpr") []) (TCons ("Prelude","Bool") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("FlatCurry","Branch") [2,3]) (Comb FuncCall ("Nondeterminism","extraVarInExpr") [Var 3])])),Func ("Nondeterminism","pre") 1 Private (FuncType (TVar 0) (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TVar 0])) (Rule [1] (Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude",":") [Lit (Charc  'P'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude",":") [Lit (Charc  'u'),Comb ConsCall ("Prelude",":") [Lit (Charc  'd'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude","[]") []]]]]]]],Var 1]))] []