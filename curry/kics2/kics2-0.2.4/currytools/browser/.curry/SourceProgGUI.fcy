Prog "SourceProgGUI" ["Char","Distribution","FileGoodies","FlatCurryShow","GUI","IO","List","Prelude","System","ReadNumeric","Maybe"] [] [Func ("SourceProgGUI","findSourceFileInLoadPath") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]])) (Rule [1] (Comb FuncCall ("Prelude",">>=") [Comb FuncCall ("Distribution","getLoadPathForFile") [Var 1],Comb (FuncPartCall 1) ("SourceProgGUI","findSourceFileInLoadPath._#lambda1") [Var 1]])),Func ("SourceProgGUI","findSourceFileInLoadPath._#lambda1") 2 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (TCons ("Prelude","IO") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]))) (Rule [1,2] (Comb FuncCall ("Prelude",">>=") [Comb FuncCall ("FileGoodies","lookupFileInPath") [Comb FuncCall ("FileGoodies","baseName") [Var 1],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude",":") [Lit (Charc  '.'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude",":") [Lit (Charc  'c'),Comb ConsCall ("Prelude",":") [Lit (Charc  'u'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  'y'),Comb ConsCall ("Prelude","[]") []]]]]]]],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude",":") [Lit (Charc  '.'),Comb ConsCall ("Prelude",":") [Lit (Charc  'c'),Comb ConsCall ("Prelude",":") [Lit (Charc  'u'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  'y'),Comb ConsCall ("Prelude","[]") []]]]]]],Comb ConsCall ("Prelude","[]") []]],Var 2],Comb (FuncPartCall 1) ("SourceProgGUI","findSourceFileInLoadPath._#lambda1._#lambda2") [Var 1]])),Func ("SourceProgGUI","findSourceFileInLoadPath._#lambda1._#lambda2") 2 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","Maybe") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (TCons ("Prelude","IO") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]))) (Rule [1,2] (Comb FuncCall ("Prelude","maybe") [Comb FuncCall ("Prelude","$") [Comb (FuncPartCall 1) ("Prelude","error") [],Comb FuncCall ("Prelude","++") [Comb ConsCall ("Prelude",":") [Lit (Charc  'C'),Comb ConsCall ("Prelude",":") [Lit (Charc  'u'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  'y'),Comb ConsCall ("Prelude",":") [Lit (Charc  ' '),Comb ConsCall ("Prelude",":") [Lit (Charc  'f'),Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude",":") [Lit (Charc  ' '),Comb ConsCall ("Prelude",":") [Lit (Charc  'f'),Comb ConsCall ("Prelude",":") [Lit (Charc  'o'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  ' '),Comb ConsCall ("Prelude",":") [Lit (Charc  'm'),Comb ConsCall ("Prelude",":") [Lit (Charc  'o'),Comb ConsCall ("Prelude",":") [Lit (Charc  'd'),Comb ConsCall ("Prelude",":") [Lit (Charc  'u'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude",":") [Lit (Charc  ' '),Comb ConsCall ("Prelude",":") [Lit (Charc  '"'),Comb ConsCall ("Prelude","[]") []]]]]]]]]]]]]]]]]]]]]]]],Comb FuncCall ("Prelude","++") [Var 1,Comb ConsCall ("Prelude",":") [Lit (Charc  '"'),Comb ConsCall ("Prelude",":") [Lit (Charc  ' '),Comb ConsCall ("Prelude",":") [Lit (Charc  'n'),Comb ConsCall ("Prelude",":") [Lit (Charc  'o'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  ' '),Comb ConsCall ("Prelude",":") [Lit (Charc  'f'),Comb ConsCall ("Prelude",":") [Lit (Charc  'o'),Comb ConsCall ("Prelude",":") [Lit (Charc  'u'),Comb ConsCall ("Prelude",":") [Lit (Charc  'n'),Comb ConsCall ("Prelude",":") [Lit (Charc  'd'),Comb ConsCall ("Prelude",":") [Lit (Charc  '!'),Comb ConsCall ("Prelude","[]") []]]]]]]]]]]]]]]],Comb (FuncPartCall 1) ("Prelude","return") [],Var 2])),Func ("SourceProgGUI","findFunDeclInProgText") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","Int") []))) (Rule [1,2] (Comb FuncCall ("SourceProgGUI","findFirstDeclLine") [Comb FuncCall ("FlatCurryShow","showCurryId") [Var 2],Comb FuncCall ("Prelude","lines") [Var 1],Lit (Intc  1)])),Func ("SourceProgGUI","findFirstDeclLine") 3 Public (FuncType (TCons ("Prelude","[]") [TVar 0]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TVar 0]]) (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","Int") [])))) (Rule [1,2,3] (Case  Flex (Var 2) [Branch (Pattern ("Prelude","[]") []) (Lit (Intc  0)),Branch (Pattern ("Prelude",":") [4,5]) (Case  Rigid (Comb FuncCall ("List","isPrefixOf") [Var 1,Var 4]) [Branch (Pattern ("Prelude","True") []) (Var 3),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("SourceProgGUI","findFirstDeclLine") [Var 1,Var 5,Comb FuncCall ("Prelude","+") [Var 3,Lit (Intc  1)]])])])),Func ("SourceProgGUI","sourceProgGUI") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("Prelude","Int") []]]]) (TCons ("Prelude","(,)") [TCons ("GUI","Widget") [],TCons ("Prelude","[]") [FuncType (TCons ("IO","Handle") []) (FuncType (TCons ("GUI","GuiPort") []) (TCons ("Prelude","IO") [TCons ("Prelude","[]") [TCons ("GUI","ReconfigureItem") []]]))]]))) (Rule [1,2] (Free [3,4] (Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("GUI","col") [],Comb ConsCall ("Prelude",":") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("GUI","row") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("GUI","Label") [Comb ConsCall ("Prelude",":") [Comb ConsCall ("GUI","Text") [Comb ConsCall ("Prelude",":") [Lit (Charc  'F'),Comb ConsCall ("Prelude",":") [Lit (Charc  'o'),Comb ConsCall ("Prelude",":") [Lit (Charc  'c'),Comb ConsCall ("Prelude",":") [Lit (Charc  'u'),Comb ConsCall ("Prelude",":") [Lit (Charc  's'),Comb ConsCall ("Prelude",":") [Lit (Charc  ' '),Comb ConsCall ("Prelude",":") [Lit (Charc  'o'),Comb ConsCall ("Prelude",":") [Lit (Charc  'n'),Comb ConsCall ("Prelude",":") [Lit (Charc  ' '),Comb ConsCall ("Prelude",":") [Lit (Charc  'f'),Comb ConsCall ("Prelude",":") [Lit (Charc  'u'),Comb ConsCall ("Prelude",":") [Lit (Charc  'n'),Comb ConsCall ("Prelude",":") [Lit (Charc  'c'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  'o'),Comb ConsCall ("Prelude",":") [Lit (Charc  'n'),Comb ConsCall ("Prelude",":") [Lit (Charc  ':'),Comb ConsCall ("Prelude","[]") []]]]]]]]]]]]]]]]]]]],Comb ConsCall ("Prelude","[]") []]],Comb ConsCall ("Prelude",":") [Comb ConsCall ("GUI","Entry") [Comb ConsCall ("Prelude",":") [Comb ConsCall ("GUI","WRef") [Var 4],Comb ConsCall ("Prelude",":") [Comb ConsCall ("GUI","Background") [Comb ConsCall ("Prelude",":") [Lit (Charc  'y'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude",":") [Lit (Charc  'o'),Comb ConsCall ("Prelude",":") [Lit (Charc  'w'),Comb ConsCall ("Prelude","[]") []]]]]]]],Comb ConsCall ("Prelude",":") [Comb ConsCall ("GUI","FillX") [],Comb ConsCall ("Prelude","[]") []]]]],Comb ConsCall ("Prelude","[]") []]]],Comb ConsCall ("Prelude",":") [Comb FuncCall ("GUI","TextEditScroll") [Comb ConsCall ("Prelude",":") [Comb ConsCall ("GUI","WRef") [Var 3],Comb ConsCall ("Prelude",":") [Comb ConsCall ("GUI","Text") [Var 1],Comb ConsCall ("Prelude",":") [Comb ConsCall ("GUI","Background") [Comb ConsCall ("Prelude",":") [Lit (Charc  'w'),Comb ConsCall ("Prelude",":") [Lit (Charc  'h'),Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude","[]") []]]]]]],Comb ConsCall ("Prelude",":") [Comb ConsCall ("GUI","Height") [Lit (Intc  10)],Comb ConsCall ("Prelude",":") [Comb ConsCall ("GUI","Width") [Lit (Intc  70)],Comb ConsCall ("Prelude",":") [Comb ConsCall ("GUI","Fill") [],Comb ConsCall ("Prelude","[]") []]]]]]]],Comb ConsCall ("Prelude","[]") []]]],Comb ConsCall ("Prelude",":") [Comb (FuncPartCall 2) ("SourceProgGUI","sourceProgGUI.extHandler.17") [Var 2,Var 3,Var 4],Comb ConsCall ("Prelude","[]") []]]))),Func ("SourceProgGUI","sourceProgGUI.extHandler.17") 5 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("Prelude","Int") []]]]) (FuncType (TCons ("GUI","WidgetRef") []) (FuncType (TCons ("GUI","WidgetRef") []) (FuncType (TCons ("IO","Handle") []) (FuncType (TCons ("GUI","GuiPort") []) (TCons ("Prelude","IO") [TCons ("Prelude","[]") [TCons ("GUI","ReconfigureItem") []]])))))) (Rule [1,2,3,4,5] (Comb FuncCall ("Prelude",">>=") [Comb FuncCall ("IO","hGetLine") [Var 4],Comb (FuncPartCall 1) ("SourceProgGUI","sourceProgGUI.extHandler.17._#lambda3") [Var 5,Var 4,Var 1,Var 2,Var 3]])),Func ("SourceProgGUI","sourceProgGUI.extHandler.17._#lambda3") 6 Private (FuncType (TCons ("GUI","GuiPort") []) (FuncType (TCons ("IO","Handle") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("Prelude","Int") []]]]) (FuncType (TCons ("GUI","WidgetRef") []) (FuncType (TCons ("GUI","WidgetRef") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","[]") [TVar 142]]))))))) (Rule [1,2,3,4,5,6] (Comb FuncCall ("Prelude",">>") [Case  Rigid (Comb FuncCall ("Prelude","||") [Comb FuncCall ("Prelude","==") [Var 6,Comb ConsCall ("Prelude","[]") []],Comb FuncCall ("Prelude","==") [Comb FuncCall ("Prelude","head") [Var 6],Lit (Charc  'q')]]) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("GUI","exitGUI") [Var 1]),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("Prelude","maybe") [Comb FuncCall ("Prelude","done") [],Comb (FuncPartCall 1) ("SourceProgGUI","sourceProgGUI.extHandler.17._#lambda3._#lambda4") [Var 1,Var 2,Var 6,Var 3,Var 4,Var 5],Comb FuncCall ("Prelude","lookup") [Comb FuncCall ("Prelude","tail") [Var 6],Var 3]])],Comb FuncCall ("Prelude","return") [Comb ConsCall ("Prelude","[]") []]])),Func ("SourceProgGUI","sourceProgGUI.extHandler.17._#lambda3._#lambda4") 7 Private (FuncType (TCons ("GUI","GuiPort") []) (FuncType (TCons ("IO","Handle") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("Prelude","Int") []]]]) (FuncType (TCons ("GUI","WidgetRef") []) (FuncType (TCons ("GUI","WidgetRef") []) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("Prelude","Int") []]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])))))))) (Rule [1,2,3,4,5,6,7] (Case  Flex (Var 7) [Branch (Pattern ("Prelude","(,)") [8,9]) (Case  Rigid (Comb FuncCall ("Prelude","==") [Comb FuncCall ("Prelude","head") [Var 3],Lit (Charc  '+')]) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("Prelude",">>") [Comb FuncCall ("GUI","setValue") [Var 6,Comb FuncCall ("Prelude","tail") [Var 3],Var 1],Comb FuncCall ("Prelude",">>") [Comb FuncCall ("GUI","addRegionStyle") [Var 5,Comb ConsCall ("Prelude","(,)") [Var 8,Lit (Intc  0)],Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("Prelude","+") [Var 9,Lit (Intc  1)],Lit (Intc  0)],Comb ConsCall ("GUI","Bg") [Comb ConsCall ("GUI","Yellow") []],Var 1],Comb FuncCall ("GUI","seeText") [Var 5,Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("Prelude","div") [Comb FuncCall ("Prelude","+") [Var 8,Var 9],Lit (Intc  2)],Lit (Intc  0)],Var 1]]]),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("Prelude",">>") [Comb FuncCall ("GUI","removeRegionStyle") [Var 5,Comb ConsCall ("Prelude","(,)") [Var 8,Lit (Intc  0)],Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("Prelude","+") [Var 9,Lit (Intc  1)],Lit (Intc  0)],Comb ConsCall ("GUI","Bg") [Comb ConsCall ("GUI","Yellow") []],Var 1],Comb FuncCall ("Prelude",">>") [Comb FuncCall ("GUI","setValue") [Var 6,Comb ConsCall ("Prelude","[]") [],Var 1],Comb FuncCall ("Prelude",">>") [Comb FuncCall ("SourceProgGUI","sourceProgGUI.extHandler.17") [Var 4,Var 5,Var 6,Var 2,Var 1],Comb FuncCall ("Prelude","done") []]]])])])),Func ("SourceProgGUI","startGUI") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])) (Rule [1] (Comb FuncCall ("Prelude",">>=") [Comb FuncCall ("SourceProgGUI","findSourceFileInLoadPath") [Var 1],Comb (FuncPartCall 1) ("SourceProgGUI","startGUI._#lambda5") []])),Func ("SourceProgGUI","startGUI._#lambda5") 1 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])) (Rule [1] (Comb FuncCall ("Prelude",">>=") [Comb FuncCall ("Prelude","readFile") [Var 1],Comb (FuncPartCall 1) ("SourceProgGUI","startGUI._#lambda5._#lambda6") [Var 1]])),Func ("SourceProgGUI","startGUI._#lambda5._#lambda6") 2 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []]))) (Rule [1,2] (Comb FuncCall ("GUI","runHandlesControlledGUI") [Comb FuncCall ("Prelude","++") [Comb ConsCall ("Prelude",":") [Lit (Charc  'M'),Comb ConsCall ("Prelude",":") [Lit (Charc  'o'),Comb ConsCall ("Prelude",":") [Lit (Charc  'd'),Comb ConsCall ("Prelude",":") [Lit (Charc  'u'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude",":") [Lit (Charc  ':'),Comb ConsCall ("Prelude",":") [Lit (Charc  ' '),Comb ConsCall ("Prelude","[]") []]]]]]]]],Var 1],Comb FuncCall ("SourceProgGUI","sourceProgGUI") [Var 2,Comb FuncCall ("SourceProgGUI","splitProgDefs") [Var 2]],Comb ConsCall ("Prelude",":") [Comb FuncCall ("IO","stdin") [],Comb ConsCall ("Prelude","[]") []]])),Func ("SourceProgGUI","main") 0 Public (TCons ("Prelude","IO") [TCons ("Prelude","()") []]) (Rule [] (Comb FuncCall ("Prelude",">>=") [Comb FuncCall ("System","getArgs") [],Comb (FuncPartCall 1) ("SourceProgGUI","main._#lambda7") []])),Func ("SourceProgGUI","main._#lambda7") 1 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])) (Rule [1] (Comb FuncCall ("SourceProgGUI","startGUI") [Comb FuncCall ("Prelude","head") [Var 1]])),Func ("SourceProgGUI","splitProgDefs") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("Prelude","Int") []]]])) (Rule [1] (Comb FuncCall ("SourceProgGUI","groupFuns") [Comb FuncCall ("Prelude","dropWhile") [Comb FuncCall ("Prelude",".") [Comb (FuncPartCall 1) ("Prelude","null") [],Comb (FuncPartCall 1) ("Prelude","fst") []],Comb FuncCall ("SourceProgGUI","deleteAdjacentFuns") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","concatMap") [Comb (FuncPartCall 1) ("SourceProgGUI","splitProgDefs._#lambda8") []],Comb FuncCall ("Prelude","zip") [Comb FuncCall ("Prelude","map") [Comb (FuncPartCall 1) ("SourceProgGUI","funDefOfLine") [],Comb FuncCall ("Prelude","lines") [Var 1]],Comb FuncCall ("Prelude","enumFrom") [Lit (Intc  1)]]]]]])),Func ("SourceProgGUI","splitProgDefs._#lambda8") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","Int") []]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","Int") []]])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Comb FuncCall ("Prelude","maybe") [Comb ConsCall ("Prelude","[]") [],Comb (FuncPartCall 1) ("SourceProgGUI","splitProgDefs._#lambda8._#lambda9") [Var 3],Var 2])])),Func ("SourceProgGUI","splitProgDefs._#lambda8._#lambda9") 2 Private (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","Int") []]]))) (Rule [1,2] (Case  Rigid (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","elem") [Var 2],Comb FuncCall ("SourceProgGUI","keywords") []]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude","[]") []),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Var 2,Var 1],Comb ConsCall ("Prelude","[]") []])])),Func ("SourceProgGUI","groupFuns") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TVar 0],TCons ("Prelude","Int") []]]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TVar 0],TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("Prelude","Int") []]]])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude","[]") []),Branch (Pattern ("Prelude",":") [2,3]) (Case  Flex (Var 2) [Branch (Pattern ("Prelude","(,)") [4,5]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Var 4,Comb ConsCall ("Prelude","(,)") [Var 5,Var 5]],Comb ConsCall ("Prelude","[]") []]),Branch (Pattern ("Prelude",":") [6,7]) (Case  Flex (Var 6) [Branch (Pattern ("Prelude","(,)") [8,9]) (Case  Flex (Var 7) [Branch (Pattern ("Prelude","[]") []) (Case  Rigid (Comb FuncCall ("Prelude","==") [Var 4,Var 8]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Var 4,Comb ConsCall ("Prelude","(,)") [Var 5,Var 9]],Comb ConsCall ("Prelude","[]") []]),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Prelude","null") [Var 8]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Var 4,Comb ConsCall ("Prelude","(,)") [Var 5,Var 5]],Comb ConsCall ("Prelude","[]") []]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Var 4,Comb ConsCall ("Prelude","(,)") [Var 5,Var 5]],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Var 8,Comb ConsCall ("Prelude","(,)") [Var 9,Var 9]],Comb ConsCall ("Prelude","[]") []]])])]),Branch (Pattern ("Prelude",":") [10,11]) (Case  Flex (Var 10) [Branch (Pattern ("Prelude","(,)") [12,13]) (Case  Rigid (Comb FuncCall ("Prelude","&&") [Comb FuncCall ("Prelude","null") [Var 8],Comb FuncCall ("Prelude","==") [Var 4,Var 12]]) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("SourceProgGUI","groupFuns") [Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Var 4,Var 5],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Var 12,Var 13],Var 11]]]),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Prelude","null") [Var 8]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Var 4,Comb ConsCall ("Prelude","(,)") [Var 5,Comb FuncCall ("Prelude","-") [Var 9,Lit (Intc  1)]]],Comb FuncCall ("SourceProgGUI","groupFuns") [Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Var 12,Var 13],Var 11]]]),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Prelude","==") [Var 4,Var 8]) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("SourceProgGUI","groupFuns") [Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Var 4,Var 5],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Var 12,Var 13],Var 11]]]),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Prelude","otherwise") []) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Var 4,Comb ConsCall ("Prelude","(,)") [Var 5,Comb FuncCall ("Prelude","-") [Var 9,Lit (Intc  1)]]],Comb FuncCall ("SourceProgGUI","groupFuns") [Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Var 8,Var 9],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Var 12,Var 13],Var 11]]]]),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("Prelude","failed") [])])])])])])])])])])])),Func ("SourceProgGUI","deleteAdjacentFuns") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TVar 0,TVar 1]]) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TVar 0,TVar 1]])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude","[]") []),Branch (Pattern ("Prelude",":") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude",":") [Var 2,Comb ConsCall ("Prelude","[]") []]),Branch (Pattern ("Prelude",":") [4,5]) (Case  Flex (Var 2) [Branch (Pattern ("Prelude","(,)") [6,7]) (Case  Flex (Var 4) [Branch (Pattern ("Prelude","(,)") [8,9]) (Case  Rigid (Comb FuncCall ("Prelude","==") [Var 6,Var 8]) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("SourceProgGUI","deleteAdjacentFuns") [Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Var 6,Var 7],Var 5]]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Var 6,Var 7],Comb FuncCall ("SourceProgGUI","deleteAdjacentFuns") [Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Var 8,Var 9],Var 5]]])])])])])])),Func ("SourceProgGUI","keywords") 0 Public (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (Rule [] (Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude",":") [Lit (Charc  'm'),Comb ConsCall ("Prelude",":") [Lit (Charc  'o'),Comb ConsCall ("Prelude",":") [Lit (Charc  'd'),Comb ConsCall ("Prelude",":") [Lit (Charc  'u'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude","[]") []]]]]]],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  'm'),Comb ConsCall ("Prelude",":") [Lit (Charc  'p'),Comb ConsCall ("Prelude",":") [Lit (Charc  'o'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude","[]") []]]]]]],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude",":") [Lit (Charc  'd'),Comb ConsCall ("Prelude",":") [Lit (Charc  'a'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  'a'),Comb ConsCall ("Prelude","[]") []]]]],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  'n'),Comb ConsCall ("Prelude",":") [Lit (Charc  'f'),Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  'x'),Comb ConsCall ("Prelude","[]") []]]]]],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  'n'),Comb ConsCall ("Prelude",":") [Lit (Charc  'f'),Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  'x'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude","[]") []]]]]]],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  'n'),Comb ConsCall ("Prelude",":") [Lit (Charc  'f'),Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  'x'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude","[]") []]]]]]],Comb ConsCall ("Prelude","[]") []]]]]]])),Func ("SourceProgGUI","funDefOfLine") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","Maybe") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]])) (Rule [1] (Case  Rigid (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","all") [Comb (FuncPartCall 1) ("Char","isSpace") []],Var 1]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude","Nothing") []),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Char","isAlpha") [Comb FuncCall ("Prelude","head") [Var 1]]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude","Just") [Comb FuncCall ("Prelude","head") [Comb FuncCall ("Prelude","words") [Var 1]]]),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Prelude","==") [Comb FuncCall ("Prelude","head") [Var 1],Lit (Charc  '(')]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude","Just") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","reverse") [],Comb FuncCall ("Prelude","tail") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","reverse") [],Comb FuncCall ("Prelude","head") [Comb FuncCall ("Prelude","words") [Comb FuncCall ("Prelude","tail") [Var 1]]]]]]]),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("SourceProgGUI","isCommentLine") [Var 1]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude","Just") [Comb ConsCall ("Prelude","[]") []]),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Prelude","otherwise") []) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude","Nothing") []),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("Prelude","failed") [])])])])])])),Func ("SourceProgGUI","isCommentLine") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","Bool") [])) (Rule [1] (Comb FuncCall ("Prelude","==") [Comb FuncCall ("Prelude","take") [Lit (Intc  2),Comb FuncCall ("Prelude","dropWhile") [Comb (FuncPartCall 1) ("Char","isSpace") [],Var 1]],Comb ConsCall ("Prelude",":") [Lit (Charc  '-'),Comb ConsCall ("Prelude",":") [Lit (Charc  '-'),Comb ConsCall ("Prelude","[]") []]]])),Func ("SourceProgGUI","m") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])) (Rule [1] (Comb FuncCall ("Prelude",">>=") [Comb FuncCall ("SourceProgGUI","findSourceFileInLoadPath") [Var 1],Comb (FuncPartCall 1) ("SourceProgGUI","m._#lambda10") []])),Func ("SourceProgGUI","m._#lambda10") 1 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])) (Rule [1] (Comb FuncCall ("Prelude",">>=") [Comb FuncCall ("Prelude","readFile") [Var 1],Comb (FuncPartCall 1) ("SourceProgGUI","m._#lambda10._#lambda11") []])),Func ("SourceProgGUI","m._#lambda10._#lambda11") 1 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])) (Rule [1] (Comb FuncCall ("Prelude","$") [Comb (FuncPartCall 1) ("Prelude","print") [],Comb FuncCall ("SourceProgGUI","splitProgDefs") [Var 1]]))] []