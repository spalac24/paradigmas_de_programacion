Prog "BrowserGUI" ["AnalysisTypes","BrowserAnalysis","Dependency","Directory","Distribution","FileGoodies","FlatCurry","FlatCurryGoodies","FlatCurryShow","GUI","IOExts","ImportCalls","Imports","List","Maybe","Prelude","Read","ShowFlatCurry","ShowGraph","Sort","System","Time"] [TypeSyn ("BrowserGUI","ImportTree") Public [] (TCons ("Prelude","[]") [TCons ("BrowserGUI","Tree") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]]]]]),TypeSyn ("BrowserGUI","GuiState") Public [] (TCons ("Prelude","(,,,,,)") [TCons ("Prelude","[]") [TCons ("BrowserGUI","Tree") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]]]]],TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Imports","InterfaceOrFlatProg") []]]],TCons ("Prelude","[]") [TCons ("FlatCurry","FuncDecl") []],TCons ("Prelude","(,,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("AnalysisTypes","ContentsKind") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","Bool") [],TCons ("Prelude","Maybe") [TCons ("AnalysisTypes","FunctionAnalysis") [TCons ("AnalysisTypes","AnalysisResult") []]]]),Type ("BrowserGUI","Tree") Public [0] [Cons ("BrowserGUI","Leaf") 2 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TVar 0],Cons ("BrowserGUI","Node") 3 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TVar 0,TCons ("Prelude","[]") [TCons ("BrowserGUI","Tree") [TVar 0]]]]] [Func ("BrowserGUI","showExecTime") 0 Public (TCons ("Prelude","Bool") []) (Rule [] (Var 0)),Func ("BrowserGUI","title") 0 Public (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (Rule [] (Var 0)),Func ("BrowserGUI","version") 0 Public (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (Rule [] (Var 0)),Func ("BrowserGUI","patchReadmeVersion") 0 Public (TCons ("Prelude","IO") [TCons ("Prelude","()") []]) (Rule [] (Var 0)),Func ("BrowserGUI","main") 0 Public (TCons ("Prelude","IO") [TCons ("Prelude","()") []]) (Rule [] (Var 0)),Func ("BrowserGUI","start") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])) (Rule [] (Var 0)),Func ("BrowserGUI","m1") 0 Public (TCons ("Prelude","IO") [TCons ("Prelude","()") []]) (Rule [] (Var 0)),Func ("BrowserGUI","m2") 0 Public (TCons ("Prelude","IO") [TCons ("Prelude","()") []]) (Rule [] (Var 0)),Func ("BrowserGUI","m3") 0 Public (TCons ("Prelude","IO") [TCons ("Prelude","()") []]) (Rule [] (Var 0)),Func ("BrowserGUI","m4") 0 Public (TCons ("Prelude","IO") [TCons ("Prelude","()") []]) (Rule [] (Var 0)),Func ("BrowserGUI","trees2strings") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("BrowserGUI","Tree") [TVar 0]]) (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]])) (Rule [] (Var 0)),Func ("BrowserGUI","tree2strings") 2 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("BrowserGUI","Tree") [TVar 0]) (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]))) (Rule [] (Var 0)),Func ("BrowserGUI","blanks") 1 Public (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Var 0)),Func ("BrowserGUI","getTreesNodeName") 2 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","[]") [TCons ("BrowserGUI","Tree") [TVar 0]]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]))) (Rule [] (Var 0)),Func ("BrowserGUI","getTreesValue") 2 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","[]") [TCons ("BrowserGUI","Tree") [TVar 0]]) (TVar 0))) (Rule [] (Var 0)),Func ("BrowserGUI","changeTrees") 2 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","[]") [TCons ("BrowserGUI","Tree") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]]]]]) (TCons ("Prelude","IO") [TCons ("Prelude","[]") [TCons ("BrowserGUI","Tree") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]]]]]]))) (Rule [] (Var 0)),Func ("BrowserGUI","openNode") 1 Public (FuncType (TCons ("Prelude","(,)") [TVar 0,TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TVar 0,TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]]]) (TCons ("Prelude","IO") [TCons ("Prelude","[]") [TCons ("BrowserGUI","Tree") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TVar 0,TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]]]]]])) (Rule [] (Var 0)),Func ("BrowserGUI","getModuleFileName") 2 Public (FuncType (TCons ("IOExts","IORef") [TCons ("Prelude","(,,,,,)") [TVar 0,TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TVar 1,TCons ("Prelude","(,)") [TVar 2,TVar 3]]],TVar 4,TVar 5,TVar 6,TVar 7]]) (FuncType (TVar 1) (TCons ("Prelude","IO") [TVar 2]))) (Rule [] (Var 0)),Func ("BrowserGUI","getTrees") 1 Public (FuncType (TCons ("IOExts","IORef") [TCons ("Prelude","(,,,,,)") [TVar 0,TVar 1,TVar 2,TVar 3,TVar 4,TVar 5]]) (TCons ("Prelude","IO") [TVar 0])) (Rule [] (Var 0)),Func ("BrowserGUI","storeTrees") 2 Public (FuncType (TCons ("IOExts","IORef") [TCons ("Prelude","(,,,,,)") [TVar 0,TVar 1,TCons ("Prelude","[]") [TVar 2],TVar 3,TCons ("Prelude","Bool") [],TVar 4]]) (FuncType (TVar 0) (TCons ("Prelude","IO") [TCons ("Prelude","()") []]))) (Rule [] (Var 0)),Func ("BrowserGUI","getAllImportsOfModule") 2 Public (FuncType (TCons ("IOExts","IORef") [TCons ("Prelude","(,,,,,)") [TCons ("Prelude","[]") [TCons ("BrowserGUI","Tree") [TCons ("Prelude","(,)") [TVar 0,TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TVar 1,TCons ("Prelude","[]") [TVar 1]]]]]],TVar 2,TVar 3,TVar 4,TVar 5,TVar 6]]) (FuncType (TVar 1) (TCons ("Prelude","IO") [TCons ("Prelude","[]") [TVar 1]]))) (Rule [] (Var 0)),Func ("BrowserGUI","getFuns") 1 Public (FuncType (TCons ("IOExts","IORef") [TCons ("Prelude","(,,,,,)") [TVar 0,TVar 1,TVar 2,TVar 3,TVar 4,TVar 5]]) (TCons ("Prelude","IO") [TVar 2])) (Rule [] (Var 0)),Func ("BrowserGUI","storeSelectedFunctions") 2 Public (FuncType (TCons ("IOExts","IORef") [TCons ("Prelude","(,,,,,)") [TVar 0,TVar 1,TCons ("Prelude","[]") [TCons ("FlatCurry","FuncDecl") []],TVar 2,TVar 3,TVar 4]]) (FuncType (TCons ("Prelude","[]") [TCons ("FlatCurry","FuncDecl") []]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []]))) (Rule [] (Var 0)),Func ("BrowserGUI","setMainContentsModule") 4 Public (FuncType (TCons ("IOExts","IORef") [TCons ("Prelude","(,,,,,)") [TCons ("Prelude","[]") [TCons ("BrowserGUI","Tree") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]]]]],TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Imports","InterfaceOrFlatProg") []]]],TCons ("Prelude","[]") [TCons ("FlatCurry","FuncDecl") []],TCons ("Prelude","(,,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("AnalysisTypes","ContentsKind") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","Bool") [],TCons ("Prelude","Maybe") [TCons ("AnalysisTypes","FunctionAnalysis") [TCons ("AnalysisTypes","AnalysisResult") []]]]]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("AnalysisTypes","ContentsKind") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []]))))) (Rule [] (Var 0)),Func ("BrowserGUI","getContentsModule") 1 Public (FuncType (TCons ("IOExts","IORef") [TCons ("Prelude","(,,,,,)") [TCons ("Prelude","[]") [TCons ("BrowserGUI","Tree") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]]]]],TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Imports","InterfaceOrFlatProg") []]]],TCons ("Prelude","[]") [TCons ("FlatCurry","FuncDecl") []],TCons ("Prelude","(,,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("AnalysisTypes","ContentsKind") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","Bool") [],TCons ("Prelude","Maybe") [TCons ("AnalysisTypes","FunctionAnalysis") [TCons ("AnalysisTypes","AnalysisResult") []]]]]) (TCons ("Prelude","IO") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]])) (Rule [] (Var 0)),Func ("BrowserGUI","getMainContents") 1 Public (FuncType (TCons ("IOExts","IORef") [TCons ("Prelude","(,,,,,)") [TCons ("Prelude","[]") [TCons ("BrowserGUI","Tree") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]]]]],TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Imports","InterfaceOrFlatProg") []]]],TCons ("Prelude","[]") [TCons ("FlatCurry","FuncDecl") []],TCons ("Prelude","(,,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("AnalysisTypes","ContentsKind") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","Bool") [],TCons ("Prelude","Maybe") [TCons ("AnalysisTypes","FunctionAnalysis") [TCons ("AnalysisTypes","AnalysisResult") []]]]]) (TCons ("Prelude","IO") [TCons ("Prelude","(,)") [TCons ("AnalysisTypes","ContentsKind") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]])) (Rule [] (Var 0)),Func ("BrowserGUI","getFunctionListKind") 1 Public (FuncType (TCons ("IOExts","IORef") [TCons ("Prelude","(,,,,,)") [TCons ("Prelude","[]") [TCons ("BrowserGUI","Tree") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]]]]],TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Imports","InterfaceOrFlatProg") []]]],TCons ("Prelude","[]") [TCons ("FlatCurry","FuncDecl") []],TCons ("Prelude","(,,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("AnalysisTypes","ContentsKind") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","Bool") [],TCons ("Prelude","Maybe") [TCons ("AnalysisTypes","FunctionAnalysis") [TCons ("AnalysisTypes","AnalysisResult") []]]]]) (TCons ("Prelude","IO") [TCons ("Prelude","Bool") []])) (Rule [] (Var 0)),Func ("BrowserGUI","setFunctionListKind") 2 Public (FuncType (TCons ("IOExts","IORef") [TCons ("Prelude","(,,,,,)") [TCons ("Prelude","[]") [TCons ("BrowserGUI","Tree") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]]]]],TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Imports","InterfaceOrFlatProg") []]]],TCons ("Prelude","[]") [TCons ("FlatCurry","FuncDecl") []],TCons ("Prelude","(,,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("AnalysisTypes","ContentsKind") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","Bool") [],TCons ("Prelude","Maybe") [TCons ("AnalysisTypes","FunctionAnalysis") [TCons ("AnalysisTypes","AnalysisResult") []]]]]) (FuncType (TCons ("Prelude","Bool") []) (TCons ("Prelude","IO") [TCons ("Prelude","()") []]))) (Rule [] (Var 0)),Func ("BrowserGUI","getAllModules") 1 Public (FuncType (TCons ("IOExts","IORef") [TCons ("Prelude","(,,,,,)") [TVar 0,TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TVar 1,TCons ("Prelude","(,)") [TVar 2,TCons ("Imports","InterfaceOrFlatProg") []]]],TVar 3,TVar 4,TVar 5,TVar 6]]) (TCons ("Prelude","IO") [TCons ("Prelude","[]") [TCons ("FlatCurry","Prog") []]])) (Rule [] (Var 0)),Func ("BrowserGUI","getIntWithName") 2 Public (FuncType (TCons ("IOExts","IORef") [TCons ("Prelude","(,,,,,)") [TVar 0,TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TVar 1,TCons ("Prelude","(,)") [TVar 2,TCons ("Imports","InterfaceOrFlatProg") []]]],TVar 3,TVar 4,TVar 5,TVar 6]]) (FuncType (TVar 1) (TCons ("Prelude","IO") [TCons ("FlatCurry","Prog") []]))) (Rule [] (Var 0)),Func ("BrowserGUI","getProgWithName") 3 Public (FuncType (TCons ("IOExts","IORef") [TCons ("Prelude","(,,,,,)") [TVar 0,TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TVar 1,TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Imports","InterfaceOrFlatProg") []]]],TVar 2,TVar 3,TVar 4,TVar 5]]) (FuncType (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TVar 6])) (FuncType (TVar 1) (TCons ("Prelude","IO") [TCons ("FlatCurry","Prog") []])))) (Rule [] (Var 0)),Func ("BrowserGUI","getAllTypes") 3 Public (FuncType (TCons ("IOExts","IORef") [TCons ("Prelude","(,,,,,)") [TCons ("Prelude","[]") [TCons ("BrowserGUI","Tree") [TCons ("Prelude","(,)") [TVar 0,TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TVar 1,TCons ("Prelude","[]") [TVar 1]]]]]],TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TVar 1,TCons ("Prelude","(,)") [TVar 2,TCons ("Imports","InterfaceOrFlatProg") []]]],TVar 3,TVar 4,TVar 5,TVar 6]]) (FuncType (TVar 7) (FuncType (TVar 1) (TCons ("Prelude","IO") [TCons ("Prelude","[]") [TCons ("FlatCurry","TypeDecl") []]])))) (Rule [] (Var 0)),Func ("BrowserGUI","getAllFunctions") 3 Public (FuncType (TCons ("IOExts","IORef") [TCons ("Prelude","(,,,,,)") [TCons ("Prelude","[]") [TCons ("BrowserGUI","Tree") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]]]]],TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Imports","InterfaceOrFlatProg") []]]],TCons ("Prelude","[]") [TCons ("FlatCurry","FuncDecl") []],TCons ("Prelude","(,,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("AnalysisTypes","ContentsKind") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","Bool") [],TCons ("Prelude","Maybe") [TCons ("AnalysisTypes","FunctionAnalysis") [TCons ("AnalysisTypes","AnalysisResult") []]]]]) (FuncType (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","[]") [TCons ("FlatCurry","FuncDecl") []]])))) (Rule [] (Var 0)),Func ("BrowserGUI","getAllFunctionNames") 2 Public (FuncType (TCons ("IOExts","IORef") [TCons ("Prelude","(,,,,,)") [TCons ("Prelude","[]") [TCons ("BrowserGUI","Tree") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]]]]],TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Imports","InterfaceOrFlatProg") []]]],TCons ("Prelude","[]") [TCons ("FlatCurry","FuncDecl") []],TCons ("Prelude","(,,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("AnalysisTypes","ContentsKind") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","Bool") [],TCons ("Prelude","Maybe") [TCons ("AnalysisTypes","FunctionAnalysis") [TCons ("AnalysisTypes","AnalysisResult") []]]]]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]]))) (Rule [] (Var 0)),Func ("BrowserGUI","getCurrentFunctionAnalysis") 1 Public (FuncType (TCons ("IOExts","IORef") [TCons ("Prelude","(,,,,,)") [TCons ("Prelude","[]") [TCons ("BrowserGUI","Tree") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]]]]],TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Imports","InterfaceOrFlatProg") []]]],TCons ("Prelude","[]") [TCons ("FlatCurry","FuncDecl") []],TCons ("Prelude","(,,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("AnalysisTypes","ContentsKind") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","Bool") [],TCons ("Prelude","Maybe") [TCons ("AnalysisTypes","FunctionAnalysis") [TCons ("AnalysisTypes","AnalysisResult") []]]]]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TCons ("AnalysisTypes","FunctionAnalysis") [TCons ("AnalysisTypes","AnalysisResult") []]]])) (Rule [] (Var 0)),Func ("BrowserGUI","setCurrentFunctionAnalysis") 2 Public (FuncType (TCons ("IOExts","IORef") [TCons ("Prelude","(,,,,,)") [TCons ("Prelude","[]") [TCons ("BrowserGUI","Tree") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]]]]],TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Imports","InterfaceOrFlatProg") []]]],TCons ("Prelude","[]") [TCons ("FlatCurry","FuncDecl") []],TCons ("Prelude","(,,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("AnalysisTypes","ContentsKind") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","Bool") [],TCons ("Prelude","Maybe") [TCons ("AnalysisTypes","FunctionAnalysis") [TCons ("AnalysisTypes","AnalysisResult") []]]]]) (FuncType (TCons ("Prelude","Maybe") [TCons ("AnalysisTypes","FunctionAnalysis") [TCons ("AnalysisTypes","AnalysisResult") []]]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []]))) (Rule [] (Var 0)),Func ("BrowserGUI","readProgAndStore") 3 Public (FuncType (TCons ("IOExts","IORef") [TCons ("Prelude","(,,,,,)") [TVar 0,TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TVar 1,TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Imports","InterfaceOrFlatProg") []]]],TVar 2,TVar 3,TVar 4,TVar 5]]) (FuncType (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TVar 6])) (FuncType (TVar 1) (TCons ("Prelude","IO") [TCons ("FlatCurry","Prog") []])))) (Rule [] (Var 0)),Func ("BrowserGUI","readProgAndStoreIfNecessary") 3 Public (FuncType (TCons ("IOExts","IORef") [TCons ("Prelude","(,,,,,)") [TVar 0,TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TVar 1,TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Imports","InterfaceOrFlatProg") []]]],TVar 2,TVar 3,TVar 4,TVar 5]]) (FuncType (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TVar 6])) (FuncType (TCons ("Prelude","(,)") [TVar 1,TCons ("Prelude","(,)") [TVar 7,TCons ("Imports","InterfaceOrFlatProg") []]]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])))) (Rule [] (Var 0)),Func ("BrowserGUI","findDecl4name") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("FlatCurry","FuncDecl") []]) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (TCons ("FlatCurry","FuncDecl") []))) (Rule [] (Var 0)),Func ("BrowserGUI","browserGUI") 4 Public (FuncType (TCons ("IOExts","IORef") [TCons ("Prelude","(,,,,,)") [TCons ("Prelude","[]") [TCons ("BrowserGUI","Tree") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]]]]],TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Imports","InterfaceOrFlatProg") []]]],TCons ("Prelude","[]") [TCons ("FlatCurry","FuncDecl") []],TCons ("Prelude","(,,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("AnalysisTypes","ContentsKind") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","Bool") [],TCons ("Prelude","Maybe") [TCons ("AnalysisTypes","FunctionAnalysis") [TCons ("AnalysisTypes","AnalysisResult") []]]]]) (FuncType (TCons ("GUI","WidgetRef") []) (FuncType (TCons ("GUI","WidgetRef") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (TCons ("GUI","Widget") []))))) (Rule [] (Var 0)),Func ("BrowserGUI","isPublic") 1 Public (FuncType (TCons ("FlatCurry","FuncDecl") []) (TCons ("Prelude","Bool") [])) (Rule [] (Var 0)),Func ("BrowserGUI","findFunDeclInProgText") 3 Public (FuncType (TCons ("AnalysisTypes","ContentsKind") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (TCons ("Prelude","Int") [])))) (Rule [] (Var 0)),Func ("BrowserGUI","findFirstDeclLine") 3 Public (FuncType (TCons ("Prelude","[]") [TVar 0]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TVar 0]]) (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","Int") [])))) (Rule [] (Var 0)),Func ("BrowserGUI","browserDir") 0 Public (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (Rule [] (Var 0)),Func ("BrowserGUI","leqQName") 2 Public (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (TCons ("Prelude","Bool") []))) (Rule [] (Var 0)),Func ("BrowserGUI","showQNameWithMod") 1 Public (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Var 0)),Func ("BrowserGUI","noAnalysisText") 0 Public (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (Rule [] (Var 0)),Func ("BrowserGUI","getAnswer") 3 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])))) (Rule [] (Var 0))] []