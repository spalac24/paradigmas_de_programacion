Prog "Analysis" ["CurryFiles","FlatCurry","GenericProgInfo","LoadAnalysis","Prelude","FlatCurryGoodies"] [Type ("Analysis","Analysis") Public [0] [Cons ("Analysis","SimpleFuncAnalysis") 2 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TCons ("FlatCurry","FuncDecl") []) (TVar 0)],Cons ("Analysis","SimpleTypeAnalysis") 2 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TCons ("FlatCurry","TypeDecl") []) (TVar 0)],Cons ("Analysis","SimpleConstructorAnalysis") 2 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TCons ("FlatCurry","ConsDecl") []) (FuncType (TCons ("FlatCurry","TypeDecl") []) (TVar 0))],Cons ("Analysis","DependencyFuncAnalysis") 3 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TVar 0,FuncType (TCons ("FlatCurry","FuncDecl") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TVar 0]]) (TVar 0))],Cons ("Analysis","DependencyTypeAnalysis") 3 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TVar 0,FuncType (TCons ("FlatCurry","TypeDecl") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TVar 0]]) (TVar 0))],Cons ("Analysis","CombinedSimpleFuncAnalysis") 4 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","Bool") [],FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [FuncType (TCons ("FlatCurry","FuncDecl") []) (TVar 0)])],Cons ("Analysis","CombinedSimpleTypeAnalysis") 4 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","Bool") [],FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [FuncType (TCons ("FlatCurry","TypeDecl") []) (TVar 0)])],Cons ("Analysis","CombinedDependencyFuncAnalysis") 5 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","Bool") [],TVar 0,FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [FuncType (TCons ("FlatCurry","FuncDecl") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TVar 0]]) (TVar 0))])],Cons ("Analysis","CombinedDependencyTypeAnalysis") 5 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","Bool") [],TVar 0,FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [FuncType (TCons ("FlatCurry","TypeDecl") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TVar 0]]) (TVar 0))])]]] [Func ("Analysis","simpleFuncAnalysis") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (FuncType (TCons ("FlatCurry","FuncDecl") []) (TVar 0)) (TCons ("Analysis","Analysis") [TVar 0]))) (Rule [1,2] (Comb ConsCall ("Analysis","SimpleFuncAnalysis") [Var 1,Var 2])),Func ("Analysis","simpleTypeAnalysis") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (FuncType (TCons ("FlatCurry","TypeDecl") []) (TVar 0)) (TCons ("Analysis","Analysis") [TVar 0]))) (Rule [1,2] (Comb ConsCall ("Analysis","SimpleTypeAnalysis") [Var 1,Var 2])),Func ("Analysis","simpleConstructorAnalysis") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (FuncType (TCons ("FlatCurry","ConsDecl") []) (FuncType (TCons ("FlatCurry","TypeDecl") []) (TVar 0))) (TCons ("Analysis","Analysis") [TVar 0]))) (Rule [1,2] (Comb ConsCall ("Analysis","SimpleConstructorAnalysis") [Var 1,Var 2])),Func ("Analysis","dependencyFuncAnalysis") 3 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TVar 0) (FuncType (FuncType (TCons ("FlatCurry","FuncDecl") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TVar 0]]) (TVar 0))) (TCons ("Analysis","Analysis") [TVar 0])))) (Rule [1,2,3] (Comb ConsCall ("Analysis","DependencyFuncAnalysis") [Var 1,Var 2,Var 3])),Func ("Analysis","dependencyTypeAnalysis") 3 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TVar 0) (FuncType (FuncType (TCons ("FlatCurry","TypeDecl") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TVar 0]]) (TVar 0))) (TCons ("Analysis","Analysis") [TVar 0])))) (Rule [1,2,3] (Comb ConsCall ("Analysis","DependencyTypeAnalysis") [Var 1,Var 2,Var 3])),Func ("Analysis","combinedSimpleFuncAnalysis") 3 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Analysis","Analysis") [TVar 0]) (FuncType (FuncType (TCons ("GenericProgInfo","ProgInfo") [TVar 0]) (FuncType (TCons ("FlatCurry","FuncDecl") []) (TVar 1))) (TCons ("Analysis","Analysis") [TVar 1])))) (Rule [1,2,3] (Let [(4,Comb FuncCall ("Analysis","analysisName") [Var 2])] (Comb ConsCall ("Analysis","CombinedSimpleFuncAnalysis") [Var 4,Var 1,Comb ConsCall ("Prelude","True") [],Comb (FuncPartCall 1) ("Analysis","runWithBaseAnalysis") [Var 2,Var 3]]))),Func ("Analysis","combinedSimpleTypeAnalysis") 3 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Analysis","Analysis") [TVar 0]) (FuncType (FuncType (TCons ("GenericProgInfo","ProgInfo") [TVar 0]) (FuncType (TCons ("FlatCurry","TypeDecl") []) (TVar 1))) (TCons ("Analysis","Analysis") [TVar 1])))) (Rule [1,2,3] (Let [(4,Comb FuncCall ("Analysis","analysisName") [Var 2])] (Comb ConsCall ("Analysis","CombinedSimpleTypeAnalysis") [Var 4,Var 1,Comb ConsCall ("Prelude","True") [],Comb (FuncPartCall 1) ("Analysis","runWithBaseAnalysis") [Var 2,Var 3]]))),Func ("Analysis","combinedDependencyFuncAnalysis") 4 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Analysis","Analysis") [TVar 0]) (FuncType (TVar 1) (FuncType (FuncType (TCons ("GenericProgInfo","ProgInfo") [TVar 0]) (FuncType (TCons ("FlatCurry","FuncDecl") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TVar 1]]) (TVar 1)))) (TCons ("Analysis","Analysis") [TVar 1]))))) (Rule [1,2,3,4] (Let [(5,Comb FuncCall ("Analysis","analysisName") [Var 2])] (Comb ConsCall ("Analysis","CombinedDependencyFuncAnalysis") [Var 5,Var 1,Comb ConsCall ("Prelude","True") [],Var 3,Comb (FuncPartCall 1) ("Analysis","runWithBaseAnalysis") [Var 2,Var 4]]))),Func ("Analysis","combinedDependencyTypeAnalysis") 4 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Analysis","Analysis") [TVar 0]) (FuncType (TVar 1) (FuncType (FuncType (TCons ("GenericProgInfo","ProgInfo") [TVar 0]) (FuncType (TCons ("FlatCurry","TypeDecl") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TVar 1]]) (TVar 1)))) (TCons ("Analysis","Analysis") [TVar 1]))))) (Rule [1,2,3,4] (Let [(5,Comb FuncCall ("Analysis","analysisName") [Var 2])] (Comb ConsCall ("Analysis","CombinedDependencyTypeAnalysis") [Var 5,Var 1,Comb ConsCall ("Prelude","True") [],Var 3,Comb (FuncPartCall 1) ("Analysis","runWithBaseAnalysis") [Var 2,Var 4]]))),Func ("Analysis","runWithBaseAnalysis") 3 Private (FuncType (TCons ("Analysis","Analysis") [TVar 0]) (FuncType (FuncType (TCons ("GenericProgInfo","ProgInfo") [TVar 0]) (FuncType (TVar 1) (TVar 2))) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [FuncType (TVar 1) (TVar 2)])))) (Rule [1,2,3] (Comb FuncCall ("Prelude",">>=") [Comb FuncCall ("CurryFiles","getImports") [Var 3],Comb (FuncPartCall 1) ("Analysis","runWithBaseAnalysis._#lambda1") [Var 2,Var 1,Var 3]])),Func ("Analysis","runWithBaseAnalysis._#lambda1") 4 Private (FuncType (FuncType (TCons ("GenericProgInfo","ProgInfo") [TVar 71]) (FuncType (TVar 64) (TVar 65))) (FuncType (TCons ("Analysis","Analysis") [TVar 71]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (TCons ("Prelude","IO") [FuncType (TVar 64) (TVar 65)]))))) (Rule [1,2,3,4] (Let [(5,Comb FuncCall ("Analysis","analysisName") [Var 2])] (Comb FuncCall ("Prelude",">>=") [Comb FuncCall ("LoadAnalysis","getInterfaceInfos") [Var 5,Var 4],Comb (FuncPartCall 1) ("Analysis","runWithBaseAnalysis._#lambda1._#lambda2") [Var 1,Var 5,Var 3]]))),Func ("Analysis","runWithBaseAnalysis._#lambda1._#lambda2") 4 Private (FuncType (FuncType (TCons ("GenericProgInfo","ProgInfo") [TVar 71]) (FuncType (TVar 64) (TVar 65))) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("GenericProgInfo","ProgInfo") [TVar 71]) (TCons ("Prelude","IO") [FuncType (TVar 64) (TVar 65)]))))) (Rule [1,2,3,4] (Comb FuncCall ("Prelude",">>=") [Comb FuncCall ("LoadAnalysis","loadCompleteAnalysis") [Var 2,Var 3],Comb (FuncPartCall 1) ("Analysis","runWithBaseAnalysis._#lambda1._#lambda2._#lambda3") [Var 1,Var 4]])),Func ("Analysis","runWithBaseAnalysis._#lambda1._#lambda2._#lambda3") 3 Private (FuncType (FuncType (TCons ("GenericProgInfo","ProgInfo") [TVar 71]) (FuncType (TVar 64) (TVar 65))) (FuncType (TCons ("GenericProgInfo","ProgInfo") [TVar 71]) (FuncType (TCons ("GenericProgInfo","ProgInfo") [TVar 71]) (TCons ("Prelude","IO") [FuncType (TVar 64) (TVar 65)])))) (Rule [1,2,3] (Let [(4,Comb FuncCall ("GenericProgInfo","combineProgInfo") [Var 2,Var 3])] (Comb FuncCall ("Prelude","return") [Comb FuncCall ("Prelude","apply") [Var 1,Var 4]]))),Func ("Analysis","isSimpleAnalysis") 1 Public (FuncType (TCons ("Analysis","Analysis") [TVar 0]) (TCons ("Prelude","Bool") [])) (Rule [1] (Case  Rigid (Var 1) [Branch (Pattern ("Analysis","SimpleFuncAnalysis") [2,3]) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Analysis","SimpleTypeAnalysis") [4,5]) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Analysis","SimpleConstructorAnalysis") [6,7]) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Analysis","CombinedSimpleFuncAnalysis") [8,9,10,11]) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Analysis","CombinedSimpleTypeAnalysis") [12,13,14,15]) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Analysis","DependencyFuncAnalysis") [16,17,18]) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Analysis","DependencyTypeAnalysis") [19,20,21]) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Analysis","CombinedDependencyFuncAnalysis") [22,23,24,25,26]) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Analysis","CombinedDependencyTypeAnalysis") [27,28,29,30,31]) (Comb ConsCall ("Prelude","False") [])])),Func ("Analysis","isCombinedAnalysis") 1 Public (FuncType (TCons ("Analysis","Analysis") [TVar 0]) (TCons ("Prelude","Bool") [])) (Rule [1] (Case  Rigid (Var 1) [Branch (Pattern ("Analysis","CombinedSimpleFuncAnalysis") [2,3,4,5]) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Analysis","CombinedSimpleTypeAnalysis") [6,7,8,9]) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Analysis","CombinedDependencyFuncAnalysis") [10,11,12,13,14]) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Analysis","CombinedDependencyTypeAnalysis") [15,16,17,18,19]) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Analysis","SimpleFuncAnalysis") [20,21]) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Analysis","SimpleTypeAnalysis") [22,23]) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Analysis","SimpleConstructorAnalysis") [24,25]) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Analysis","DependencyFuncAnalysis") [26,27,28]) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("Analysis","DependencyTypeAnalysis") [29,30,31]) (Comb ConsCall ("Prelude","False") [])])),Func ("Analysis","analysisName") 1 Public (FuncType (TCons ("Analysis","Analysis") [TVar 0]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Analysis","SimpleFuncAnalysis") [2,3]) (Var 2),Branch (Pattern ("Analysis","SimpleTypeAnalysis") [4,5]) (Var 4),Branch (Pattern ("Analysis","SimpleConstructorAnalysis") [6,7]) (Var 6),Branch (Pattern ("Analysis","DependencyFuncAnalysis") [8,9,10]) (Var 8),Branch (Pattern ("Analysis","DependencyTypeAnalysis") [11,12,13]) (Var 11),Branch (Pattern ("Analysis","CombinedSimpleFuncAnalysis") [14,15,16,17]) (Var 15),Branch (Pattern ("Analysis","CombinedSimpleTypeAnalysis") [18,19,20,21]) (Var 19),Branch (Pattern ("Analysis","CombinedDependencyFuncAnalysis") [22,23,24,25,26]) (Var 23),Branch (Pattern ("Analysis","CombinedDependencyTypeAnalysis") [27,28,29,30,31]) (Var 28)])),Func ("Analysis","baseAnalysisName") 1 Public (FuncType (TCons ("Analysis","Analysis") [TVar 0]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Analysis","CombinedSimpleFuncAnalysis") [2,3,4,5]) (Var 2),Branch (Pattern ("Analysis","CombinedSimpleTypeAnalysis") [6,7,8,9]) (Var 6),Branch (Pattern ("Analysis","CombinedDependencyFuncAnalysis") [10,11,12,13,14]) (Var 10),Branch (Pattern ("Analysis","CombinedDependencyTypeAnalysis") [15,16,17,18,19]) (Var 15)])),Func ("Analysis","startValue") 1 Public (FuncType (TCons ("Analysis","Analysis") [TVar 0]) (TVar 0)) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Analysis","DependencyFuncAnalysis") [2,3,4]) (Var 3),Branch (Pattern ("Analysis","DependencyTypeAnalysis") [5,6,7]) (Var 6),Branch (Pattern ("Analysis","CombinedDependencyFuncAnalysis") [8,9,10,11,12]) (Var 11),Branch (Pattern ("Analysis","CombinedDependencyTypeAnalysis") [13,14,15,16,17]) (Var 16)]))] []