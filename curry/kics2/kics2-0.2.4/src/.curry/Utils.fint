Prog "Utils" ["Char","Prelude"] [] [Func ("Utils","foldIO") 3 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (TCons ("Prelude","IO") [TVar 0]))) (FuncType (TVar 0) (FuncType (TCons ("Prelude","[]") [TVar 1]) (TCons ("Prelude","IO") [TVar 0])))) (Rule [] (Var 0)),Func ("Utils","liftIO") 2 Public (FuncType (FuncType (TVar 0) (TVar 1)) (FuncType (TCons ("Prelude","IO") [TVar 0]) (TCons ("Prelude","IO") [TVar 1]))) (Rule [] (Var 0)),Func ("Utils","unless") 2 Public (FuncType (TCons ("Prelude","Bool") []) (FuncType (TCons ("Prelude","IO") [TCons ("Prelude","()") []]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []]))) (Rule [] (Var 0)),Func ("Utils","notNull") 0 Public (FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("Prelude","Bool") [])) (Rule [] (Var 0)),Func ("Utils","when") 2 Public (FuncType (TCons ("Prelude","Bool") []) (FuncType (TCons ("Prelude","IO") [TCons ("Prelude","()") []]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []]))) (Rule [] (Var 0)),Func ("Utils","mapFst") 2 Public (FuncType (FuncType (TVar 0) (TVar 1)) (FuncType (TCons ("Prelude","(,)") [TVar 0,TVar 2]) (TCons ("Prelude","(,)") [TVar 1,TVar 2]))) (Rule [] (Var 0)),Func ("Utils","mapSnd") 2 Public (FuncType (FuncType (TVar 0) (TVar 1)) (FuncType (TCons ("Prelude","(,)") [TVar 2,TVar 0]) (TCons ("Prelude","(,)") [TVar 2,TVar 1]))) (Rule [] (Var 0)),Func ("Utils","strip") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Var 0))] []