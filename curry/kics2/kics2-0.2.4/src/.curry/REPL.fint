Prog "REPL" ["AbstractCurry","AbstractCurryGoodies","Char","Directory","Distribution","FileGoodies","FilePath","Files","FlatCurry","GhciComm","IO","IOExts","Installation","Linker","List","Names","Prelude","RCFile","ReadNumeric","ReadShowTerm","Sort","System","Utils","Time"] [Type ("REPL","GoalCompile") Public [] [Cons ("REPL","GoalError") 0 Public [],Cons ("REPL","GoalWithoutBindings") 1 Public [TCons ("AbstractCurry","CurryProg") []],Cons ("REPL","GoalWithBindings") 3 Public [TCons ("AbstractCurry","CurryProg") [],TCons ("Prelude","Int") [],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]] [Func ("REPL","writeErrorMsg") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])) (Rule [] (Var 0)),Func ("REPL","main") 0 Public (TCons ("Prelude","IO") [TCons ("Prelude","()") []]) (Rule [] (Var 0)),Func ("REPL","defaultImportPaths") 1 Public (FuncType (TCons ("Linker","ReplState") []) (TCons ("Prelude","IO") [TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]])) (Rule [] (Var 0)),Func ("REPL","defaultImportPathsWith") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]))) (Rule [] (Var 0)),Func ("REPL","processArgsAndStart") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []]))) (Rule [] (Var 0)),Func ("REPL","getBanner") 0 Public (TCons ("Prelude","IO") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (Rule [] (Var 0)),Func ("REPL","repl") 1 Public (FuncType (TCons ("Linker","ReplState") []) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])) (Rule [] (Var 0)),Func ("REPL","calcPrompt") 1 Public (FuncType (TCons ("Linker","ReplState") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Var 0)),Func ("REPL","cleanUpRepl") 1 Public (FuncType (TCons ("Linker","ReplState") []) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])) (Rule [] (Var 0)),Func ("REPL","processInput") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []]))) (Rule [] (Var 0)),Func ("REPL","evalExpression") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Linker","ReplState") []]))) (Rule [] (Var 0)),Func ("REPL","writeSimpleMainGoalFile") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []]))) (Rule [] (Var 0)),Func ("REPL","writeMainGoalFile") 4 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (FuncType (TCons ("Prelude","Maybe") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []]))))) (Rule [] (Var 0)),Func ("REPL","cleanMainGoalFile") 1 Public (FuncType (TCons ("Linker","ReplState") []) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])) (Rule [] (Var 0)),Func ("REPL","getAcyOfMainGoal") 1 Public (FuncType (TCons ("Linker","ReplState") []) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TCons ("AbstractCurry","CurryProg") []]])) (Rule [] (Var 0)),Func ("REPL","getAcyOfExpr") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TCons ("AbstractCurry","CurryProg") []]]))) (Rule [] (Var 0)),Func ("REPL","showTypeOfGoal") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Bool") []]))) (Rule [] (Var 0)),Func ("REPL","getModuleOfFunction") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]))) (Rule [] (Var 0)),Func ("REPL","compileProgramWithGoal") 3 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","Bool") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","(,)") [TCons ("Linker","ReplState") [],TCons ("Linker","MainCompile") []]])))) (Rule [] (Var 0)),Func ("REPL","insertFreeVarsInMainGoal") 3 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","Maybe") [TCons ("AbstractCurry","CurryProg") []]) (TCons ("Prelude","IO") [TCons ("REPL","GoalCompile") []])))) (Rule [] (Var 0)),Func ("REPL","makeMainGoalMonomorphic") 3 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("AbstractCurry","CurryProg") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Bool") []])))) (Rule [] (Var 0)),Func ("REPL","compileCurryProgram") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Int") []]))) (Rule [] (Var 0)),Func ("REPL","execMain") 3 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Linker","MainCompile") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])))) (Rule [] (Var 0)),Func ("REPL","processCommand") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TCons ("Linker","ReplState") []]]))) (Rule [] (Var 0)),Func ("REPL","replCommands") 0 Public (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TCons ("Linker","ReplState") []]]))]]) (Rule [] (Var 0)),Func ("REPL","skipCommand") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TCons ("Linker","ReplState") []]])) (Rule [] (Var 0)),Func ("REPL","processSysCall") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TCons ("Linker","ReplState") []]]))) (Rule [] (Var 0)),Func ("REPL","processQuit") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TCons ("Linker","ReplState") []]]))) (Rule [] (Var 0)),Func ("REPL","processHelp") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TCons ("Linker","ReplState") []]]))) (Rule [] (Var 0)),Func ("REPL","processLoad") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TCons ("Linker","ReplState") []]]))) (Rule [] (Var 0)),Func ("REPL","processReload") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TCons ("Linker","ReplState") []]]))) (Rule [] (Var 0)),Func ("REPL","processAdd") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TCons ("Linker","ReplState") []]]))) (Rule [] (Var 0)),Func ("REPL","processEval") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TCons ("Linker","ReplState") []]]))) (Rule [] (Var 0)),Func ("REPL","processType") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TCons ("Linker","ReplState") []]]))) (Rule [] (Var 0)),Func ("REPL","processCd") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TCons ("Linker","ReplState") []]]))) (Rule [] (Var 0)),Func ("REPL","processPrograms") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TCons ("Linker","ReplState") []]]))) (Rule [] (Var 0)),Func ("REPL","processEdit") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TCons ("Linker","ReplState") []]]))) (Rule [] (Var 0)),Func ("REPL","processSource") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TCons ("Linker","ReplState") []]]))) (Rule [] (Var 0)),Func ("REPL","processShow") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TCons ("Linker","ReplState") []]]))) (Rule [] (Var 0)),Func ("REPL","processInterface") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TCons ("Linker","ReplState") []]]))) (Rule [] (Var 0)),Func ("REPL","processBrowse") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TCons ("Linker","ReplState") []]]))) (Rule [] (Var 0)),Func ("REPL","processUsedImports") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TCons ("Linker","ReplState") []]]))) (Rule [] (Var 0)),Func ("REPL","processSave") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TCons ("Linker","ReplState") []]]))) (Rule [] (Var 0)),Func ("REPL","processFork") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TCons ("Linker","ReplState") []]]))) (Rule [] (Var 0)),Func ("REPL","processSetOption") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TCons ("Linker","ReplState") []]]))) (Rule [] (Var 0)),Func ("REPL","availOptions") 0 Public (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TCons ("Linker","ReplState") []]]))]]) (Rule [] (Var 0)),Func ("REPL","replOptions") 0 Public (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TCons ("Linker","ReplState") []]]))]]) (Rule [] (Var 0)),Func ("REPL","setPrompt") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TCons ("Linker","ReplState") []]]))) (Rule [] (Var 0)),Func ("REPL","setNoGhci") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TCons ("Linker","ReplState") []]]))) (Rule [] (Var 0)),Func ("REPL","setOptionPath") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TCons ("Linker","ReplState") []]]))) (Rule [] (Var 0)),Func ("REPL","setOptionNDMode") 4 Public (FuncType (FuncType (TCons ("Prelude","Int") []) (TCons ("Linker","NonDetMode") [])) (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TCons ("Linker","ReplState") []]]))))) (Rule [] (Var 0)),Func ("REPL","setOptionSupply") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TCons ("Linker","ReplState") []]]))) (Rule [] (Var 0)),Func ("REPL","printOptions") 1 Public (FuncType (TCons ("Linker","ReplState") []) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])) (Rule [] (Var 0)),Func ("REPL","ifLocal") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Var 0)),Func ("REPL","showCurrentOptions") 1 Public (FuncType (TCons ("Linker","ReplState") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Var 0)),Func ("REPL","printHelpOnCommands") 0 Public (TCons ("Prelude","IO") [TCons ("Prelude","()") []]) (Rule [] (Var 0)),Func ("REPL","printAllLoadPathPrograms") 1 Public (FuncType (TCons ("Linker","ReplState") []) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])) (Rule [] (Var 0)),Func ("REPL","showFunctionInModule") 3 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TCons ("Linker","ReplState") []]])))) (Rule [] (Var 0)),Func ("REPL","callTool") 3 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TCons ("Linker","ReplState") []]])))) (Rule [] (Var 0)),Func ("REPL","errorMissingTool") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TCons ("Linker","ReplState") []]])) (Rule [] (Var 0)),Func ("REPL","readAndProcessSourceFileOptions") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TCons ("Linker","ReplState") []]]))) (Rule [] (Var 0)),Func ("REPL","processSourceFileOptions") 2 Public (FuncType (TCons ("Linker","ReplState") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]) (TCons ("Prelude","IO") [TCons ("Prelude","Maybe") [TCons ("Linker","ReplState") []]]))) (Rule [] (Var 0)),Func ("REPL","readSourceFileOptions") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","IO") [TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]])) (Rule [] (Var 0)),Func ("REPL","terminateSourceProgGUIs") 1 Public (FuncType (TCons ("Linker","ReplState") []) (TCons ("Prelude","IO") [TCons ("Linker","ReplState") []])) (Rule [] (Var 0))] []