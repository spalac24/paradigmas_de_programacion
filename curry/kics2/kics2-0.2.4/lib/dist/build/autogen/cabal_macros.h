/* DO NOT EDIT: This file is automatically generated by Cabal */

/* package base-4.6.0.1 */
#define VERSION_base "4.6.0.1"
#define MIN_VERSION_base(major1,major2,minor) (\
  (major1) <  4 || \
  (major1) == 4 && (major2) <  6 || \
  (major1) == 4 && (major2) == 6 && (minor) <= 0)

/* package directory-1.2.0.1 */
#define VERSION_directory "1.2.0.1"
#define MIN_VERSION_directory(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  2 || \
  (major1) == 1 && (major2) == 2 && (minor) <= 0)

/* package kics2-runtime-0.2.4 */
#define VERSION_kics2_runtime "0.2.4"
#define MIN_VERSION_kics2_runtime(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  2 || \
  (major1) == 0 && (major2) == 2 && (minor) <= 4)

/* package network-2.4.1.2 */
#define VERSION_network "2.4.1.2"
#define MIN_VERSION_network(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  4 || \
  (major1) == 2 && (major2) == 4 && (minor) <= 1)

/* package old-time-1.1.0.1 */
#define VERSION_old_time "1.1.0.1"
#define MIN_VERSION_old_time(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  1 || \
  (major1) == 1 && (major2) == 1 && (minor) <= 0)

/* package parallel-tree-search-0.4.1 */
#define VERSION_parallel_tree_search "0.4.1"
#define MIN_VERSION_parallel_tree_search(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  4 || \
  (major1) == 0 && (major2) == 4 && (minor) <= 1)

/* package process-1.1.0.2 */
#define VERSION_process "1.1.0.2"
#define MIN_VERSION_process(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  1 || \
  (major1) == 1 && (major2) == 1 && (minor) <= 0)

/* package time-1.4.0.1 */
#define VERSION_time "1.4.0.1"
#define MIN_VERSION_time(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  4 || \
  (major1) == 1 && (major2) == 4 && (minor) <= 0)

/* package unbounded-delays-0.1.0.5 */
#define VERSION_unbounded_delays "0.1.0.5"
#define MIN_VERSION_unbounded_delays(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 0)

/* package unix-2.6.0.1 */
#define VERSION_unix "2.6.0.1"
#define MIN_VERSION_unix(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  6 || \
  (major1) == 2 && (major2) == 6 && (minor) <= 0)

