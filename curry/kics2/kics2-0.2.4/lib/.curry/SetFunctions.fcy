Prog "SetFunctions" ["List","Prelude","SearchTree","Sort"] [Type ("SetFunctions","Values") Public [0] [Cons ("SetFunctions","Values") 1 Private [TCons ("Prelude","[]") [TVar 0]]]] [Func ("SetFunctions","set0") 1 Public (FuncType (TVar 0) (TCons ("SetFunctions","Values") [TVar 0])) (Rule [1] (Comb FuncCall ("SetFunctions","set0With") [Comb (FuncPartCall 1) ("SearchTree","dfsStrategy") [],Var 1])),Func ("SetFunctions","set0With") 2 Public (FuncType (FuncType (TCons ("SearchTree","SearchTree") [TVar 0]) (TCons ("SearchTree","ValueSequence") [TVar 0])) (FuncType (TVar 0) (TCons ("SetFunctions","Values") [TVar 0]))) (Rule [1,2] (Comb FuncCall ("SetFunctions","allVs") [Var 1,Var 2])),Func ("SetFunctions","set1") 2 Public (FuncType (FuncType (TVar 0) (TVar 1)) (FuncType (TVar 0) (TCons ("SetFunctions","Values") [TVar 1]))) (Rule [1,2] (Comb FuncCall ("SetFunctions","set1With") [Comb (FuncPartCall 1) ("SearchTree","dfsStrategy") [],Var 1,Var 2])),Func ("SetFunctions","set1With") 3 Public (FuncType (FuncType (TCons ("SearchTree","SearchTree") [TVar 0]) (TCons ("SearchTree","ValueSequence") [TVar 0])) (FuncType (FuncType (TVar 1) (TVar 0)) (FuncType (TVar 1) (TCons ("SetFunctions","Values") [TVar 0])))) (Rule [1,2,3] (Comb FuncCall ("SetFunctions","allVs") [Var 1,Comb FuncCall ("Prelude","apply") [Var 2,Comb FuncCall ("SetFunctions","cover") [Var 3]]])),Func ("SetFunctions","set2") 3 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (TVar 2))) (FuncType (TVar 0) (FuncType (TVar 1) (TCons ("SetFunctions","Values") [TVar 2])))) (Rule [1,2,3] (Comb FuncCall ("SetFunctions","set2With") [Comb (FuncPartCall 1) ("SearchTree","dfsStrategy") [],Var 1,Var 2,Var 3])),Func ("SetFunctions","set2With") 4 Public (FuncType (FuncType (TCons ("SearchTree","SearchTree") [TVar 0]) (TCons ("SearchTree","ValueSequence") [TVar 0])) (FuncType (FuncType (TVar 1) (FuncType (TVar 2) (TVar 0))) (FuncType (TVar 1) (FuncType (TVar 2) (TCons ("SetFunctions","Values") [TVar 0]))))) (Rule [1,2,3,4] (Comb FuncCall ("SetFunctions","allVs") [Var 1,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 2,Comb FuncCall ("SetFunctions","cover") [Var 3]],Comb FuncCall ("SetFunctions","cover") [Var 4]]])),Func ("SetFunctions","set3") 4 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (FuncType (TVar 2) (TVar 3)))) (FuncType (TVar 0) (FuncType (TVar 1) (FuncType (TVar 2) (TCons ("SetFunctions","Values") [TVar 3]))))) (Rule [1,2,3,4] (Comb FuncCall ("SetFunctions","set3With") [Comb (FuncPartCall 1) ("SearchTree","dfsStrategy") [],Var 1,Var 2,Var 3,Var 4])),Func ("SetFunctions","set3With") 5 Public (FuncType (FuncType (TCons ("SearchTree","SearchTree") [TVar 0]) (TCons ("SearchTree","ValueSequence") [TVar 0])) (FuncType (FuncType (TVar 1) (FuncType (TVar 2) (FuncType (TVar 3) (TVar 0)))) (FuncType (TVar 1) (FuncType (TVar 2) (FuncType (TVar 3) (TCons ("SetFunctions","Values") [TVar 0])))))) (Rule [1,2,3,4,5] (Comb FuncCall ("SetFunctions","allVs") [Var 1,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 2,Comb FuncCall ("SetFunctions","cover") [Var 3]],Comb FuncCall ("SetFunctions","cover") [Var 4]],Comb FuncCall ("SetFunctions","cover") [Var 5]]])),Func ("SetFunctions","set4") 5 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (FuncType (TVar 2) (FuncType (TVar 3) (TVar 4))))) (FuncType (TVar 0) (FuncType (TVar 1) (FuncType (TVar 2) (FuncType (TVar 3) (TCons ("SetFunctions","Values") [TVar 4])))))) (Rule [1,2,3,4,5] (Comb FuncCall ("SetFunctions","set4With") [Comb (FuncPartCall 1) ("SearchTree","dfsStrategy") [],Var 1,Var 2,Var 3,Var 4,Var 5])),Func ("SetFunctions","set4With") 6 Public (FuncType (FuncType (TCons ("SearchTree","SearchTree") [TVar 0]) (TCons ("SearchTree","ValueSequence") [TVar 0])) (FuncType (FuncType (TVar 1) (FuncType (TVar 2) (FuncType (TVar 3) (FuncType (TVar 4) (TVar 0))))) (FuncType (TVar 1) (FuncType (TVar 2) (FuncType (TVar 3) (FuncType (TVar 4) (TCons ("SetFunctions","Values") [TVar 0]))))))) (Rule [1,2,3,4,5,6] (Comb FuncCall ("SetFunctions","allVs") [Var 1,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 2,Comb FuncCall ("SetFunctions","cover") [Var 3]],Comb FuncCall ("SetFunctions","cover") [Var 4]],Comb FuncCall ("SetFunctions","cover") [Var 5]],Comb FuncCall ("SetFunctions","cover") [Var 6]]])),Func ("SetFunctions","set5") 6 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (FuncType (TVar 2) (FuncType (TVar 3) (FuncType (TVar 4) (TVar 5)))))) (FuncType (TVar 0) (FuncType (TVar 1) (FuncType (TVar 2) (FuncType (TVar 3) (FuncType (TVar 4) (TCons ("SetFunctions","Values") [TVar 5]))))))) (Rule [1,2,3,4,5,6] (Comb FuncCall ("SetFunctions","set5With") [Comb (FuncPartCall 1) ("SearchTree","dfsStrategy") [],Var 1,Var 2,Var 3,Var 4,Var 5,Var 6])),Func ("SetFunctions","set5With") 7 Public (FuncType (FuncType (TCons ("SearchTree","SearchTree") [TVar 0]) (TCons ("SearchTree","ValueSequence") [TVar 0])) (FuncType (FuncType (TVar 1) (FuncType (TVar 2) (FuncType (TVar 3) (FuncType (TVar 4) (FuncType (TVar 5) (TVar 0)))))) (FuncType (TVar 1) (FuncType (TVar 2) (FuncType (TVar 3) (FuncType (TVar 4) (FuncType (TVar 5) (TCons ("SetFunctions","Values") [TVar 0])))))))) (Rule [1,2,3,4,5,6,7] (Comb FuncCall ("SetFunctions","allVs") [Var 1,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 2,Comb FuncCall ("SetFunctions","cover") [Var 3]],Comb FuncCall ("SetFunctions","cover") [Var 4]],Comb FuncCall ("SetFunctions","cover") [Var 5]],Comb FuncCall ("SetFunctions","cover") [Var 6]],Comb FuncCall ("SetFunctions","cover") [Var 7]]])),Func ("SetFunctions","set6") 7 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (FuncType (TVar 2) (FuncType (TVar 3) (FuncType (TVar 4) (FuncType (TVar 5) (TVar 6))))))) (FuncType (TVar 0) (FuncType (TVar 1) (FuncType (TVar 2) (FuncType (TVar 3) (FuncType (TVar 4) (FuncType (TVar 5) (TCons ("SetFunctions","Values") [TVar 6])))))))) (Rule [1,2,3,4,5,6,7] (Comb FuncCall ("SetFunctions","set6With") [Comb (FuncPartCall 1) ("SearchTree","dfsStrategy") [],Var 1,Var 2,Var 3,Var 4,Var 5,Var 6,Var 7])),Func ("SetFunctions","set6With") 8 Public (FuncType (FuncType (TCons ("SearchTree","SearchTree") [TVar 0]) (TCons ("SearchTree","ValueSequence") [TVar 0])) (FuncType (FuncType (TVar 1) (FuncType (TVar 2) (FuncType (TVar 3) (FuncType (TVar 4) (FuncType (TVar 5) (FuncType (TVar 6) (TVar 0))))))) (FuncType (TVar 1) (FuncType (TVar 2) (FuncType (TVar 3) (FuncType (TVar 4) (FuncType (TVar 5) (FuncType (TVar 6) (TCons ("SetFunctions","Values") [TVar 0]))))))))) (Rule [1,2,3,4,5,6,7,8] (Comb FuncCall ("SetFunctions","allVs") [Var 1,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 2,Comb FuncCall ("SetFunctions","cover") [Var 3]],Comb FuncCall ("SetFunctions","cover") [Var 4]],Comb FuncCall ("SetFunctions","cover") [Var 5]],Comb FuncCall ("SetFunctions","cover") [Var 6]],Comb FuncCall ("SetFunctions","cover") [Var 7]],Comb FuncCall ("SetFunctions","cover") [Var 8]]])),Func ("SetFunctions","set7") 8 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 1) (FuncType (TVar 2) (FuncType (TVar 3) (FuncType (TVar 4) (FuncType (TVar 5) (FuncType (TVar 6) (TVar 7)))))))) (FuncType (TVar 0) (FuncType (TVar 1) (FuncType (TVar 2) (FuncType (TVar 3) (FuncType (TVar 4) (FuncType (TVar 5) (FuncType (TVar 6) (TCons ("SetFunctions","Values") [TVar 7]))))))))) (Rule [1,2,3,4,5,6,7,8] (Comb FuncCall ("SetFunctions","set7With") [Comb (FuncPartCall 1) ("SearchTree","dfsStrategy") [],Var 1,Var 2,Var 3,Var 4,Var 5,Var 6,Var 7,Var 8])),Func ("SetFunctions","set7With") 9 Public (FuncType (FuncType (TCons ("SearchTree","SearchTree") [TVar 0]) (TCons ("SearchTree","ValueSequence") [TVar 0])) (FuncType (FuncType (TVar 1) (FuncType (TVar 2) (FuncType (TVar 3) (FuncType (TVar 4) (FuncType (TVar 5) (FuncType (TVar 6) (FuncType (TVar 7) (TVar 0)))))))) (FuncType (TVar 1) (FuncType (TVar 2) (FuncType (TVar 3) (FuncType (TVar 4) (FuncType (TVar 5) (FuncType (TVar 6) (FuncType (TVar 7) (TCons ("SetFunctions","Values") [TVar 0])))))))))) (Rule [1,2,3,4,5,6,7,8,9] (Comb FuncCall ("SetFunctions","allVs") [Var 1,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 2,Comb FuncCall ("SetFunctions","cover") [Var 3]],Comb FuncCall ("SetFunctions","cover") [Var 4]],Comb FuncCall ("SetFunctions","cover") [Var 5]],Comb FuncCall ("SetFunctions","cover") [Var 6]],Comb FuncCall ("SetFunctions","cover") [Var 7]],Comb FuncCall ("SetFunctions","cover") [Var 8]],Comb FuncCall ("SetFunctions","cover") [Var 9]]])),Func ("SetFunctions","allVs") 2 Private (FuncType (FuncType (TCons ("SearchTree","SearchTree") [TVar 0]) (TCons ("SearchTree","ValueSequence") [TVar 1])) (FuncType (TVar 0) (TCons ("SetFunctions","Values") [TVar 1]))) (Rule [1,2] (Comb ConsCall ("SetFunctions","Values") [Comb FuncCall ("SearchTree","vsToList") [Comb FuncCall ("Prelude","apply") [Var 1,Comb FuncCall ("SearchTree","someSearchTree") [Var 2]]]])),Func ("SetFunctions","cover") 1 Private (FuncType (TVar 0) (TVar 0)) (External "SetFunctions.cover"),Func ("SetFunctions","isEmpty") 1 Public (FuncType (TCons ("SetFunctions","Values") [TVar 0]) (TCons ("Prelude","Bool") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("SetFunctions","Values") [2]) (Comb FuncCall ("Prelude","null") [Var 2])])),Func ("SetFunctions","valueOf") 2 Public (FuncType (TVar 0) (FuncType (TCons ("SetFunctions","Values") [TVar 0]) (TCons ("Prelude","Bool") []))) (Rule [1,2] (Case  Flex (Var 2) [Branch (Pattern ("SetFunctions","Values") [3]) (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","elem") [Var 1],Var 3])])),Func ("SetFunctions","choose") 1 Public (FuncType (TCons ("SetFunctions","Values") [TVar 0]) (TCons ("Prelude","(,)") [TVar 0,TCons ("SetFunctions","Values") [TVar 0]])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("SetFunctions","Values") [2]) (Let [(3,Comb FuncCall ("Prelude","foldr1") [Comb (FuncPartCall 2) ("Prelude","?") [],Var 2]),(4,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("List","delete") [],Var 3],Var 2])] (Comb ConsCall ("Prelude","(,)") [Var 3,Comb ConsCall ("SetFunctions","Values") [Var 4]]))])),Func ("SetFunctions","chooseValue") 1 Public (FuncType (TCons ("SetFunctions","Values") [TVar 0]) (TVar 0)) (Rule [1] (Comb FuncCall ("Prelude","fst") [Comb FuncCall ("SetFunctions","choose") [Var 1]])),Func ("SetFunctions","select") 1 Public (FuncType (TCons ("SetFunctions","Values") [TVar 0]) (TCons ("Prelude","(,)") [TVar 0,TCons ("SetFunctions","Values") [TVar 0]])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("SetFunctions","Values") [2]) (Case  Flex (Var 2) [Branch (Pattern ("Prelude",":") [3,4]) (Comb ConsCall ("Prelude","(,)") [Var 3,Comb ConsCall ("SetFunctions","Values") [Var 4]])])])),Func ("SetFunctions","selectValue") 1 Public (FuncType (TCons ("SetFunctions","Values") [TVar 0]) (TVar 0)) (Rule [1] (Comb FuncCall ("Prelude","fst") [Comb FuncCall ("SetFunctions","select") [Var 1]])),Func ("SetFunctions","mapValues") 2 Public (FuncType (FuncType (TVar 0) (TVar 1)) (FuncType (TCons ("SetFunctions","Values") [TVar 0]) (TCons ("SetFunctions","Values") [TVar 1]))) (Rule [1,2] (Case  Flex (Var 2) [Branch (Pattern ("SetFunctions","Values") [3]) (Comb ConsCall ("SetFunctions","Values") [Comb FuncCall ("Prelude","map") [Var 1,Var 3]])])),Func ("SetFunctions","foldValues") 3 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TVar 0))) (FuncType (TVar 0) (FuncType (TCons ("SetFunctions","Values") [TVar 0]) (TVar 0)))) (Rule [1,2,3] (Case  Flex (Var 3) [Branch (Pattern ("SetFunctions","Values") [4]) (Comb FuncCall ("Prelude","foldr") [Var 1,Var 2,Var 4])])),Func ("SetFunctions","minValue") 2 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons ("Prelude","Bool") []))) (FuncType (TCons ("SetFunctions","Values") [TVar 0]) (TVar 0))) (Rule [1,2] (Case  Flex (Var 2) [Branch (Pattern ("SetFunctions","Values") [3]) (Comb FuncCall ("SetFunctions","minValue.minOf.54") [Var 1,Var 3])])),Func ("SetFunctions","minValue.minOf.54") 2 Private (FuncType (FuncType (TVar 356) (FuncType (TVar 356) (TCons ("Prelude","Bool") []))) (FuncType (TCons ("Prelude","[]") [TVar 356]) (TVar 356))) (Rule [1,2] (Case  Flex (Var 2) [Branch (Pattern ("Prelude",":") [3,4]) (Case  Flex (Var 4) [Branch (Pattern ("Prelude","[]") []) (Var 3),Branch (Pattern ("Prelude",":") [5,6]) (Let [(7,Comb FuncCall ("SetFunctions","minValue.minOf.54") [Var 1,Comb ConsCall ("Prelude",":") [Var 5,Var 6]])] (Case  Rigid (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 1,Var 3],Var 7]) [Branch (Pattern ("Prelude","True") []) (Var 3),Branch (Pattern ("Prelude","False") []) (Var 7)]))])])),Func ("SetFunctions","maxValue") 2 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons ("Prelude","Bool") []))) (FuncType (TCons ("SetFunctions","Values") [TVar 0]) (TVar 0))) (Rule [1,2] (Case  Flex (Var 2) [Branch (Pattern ("SetFunctions","Values") [3]) (Comb FuncCall ("SetFunctions","maxValue.maxOf.62") [Var 1,Var 3])])),Func ("SetFunctions","maxValue.maxOf.62") 2 Private (FuncType (FuncType (TVar 376) (FuncType (TVar 376) (TCons ("Prelude","Bool") []))) (FuncType (TCons ("Prelude","[]") [TVar 376]) (TVar 376))) (Rule [1,2] (Case  Flex (Var 2) [Branch (Pattern ("Prelude",":") [3,4]) (Case  Flex (Var 4) [Branch (Pattern ("Prelude","[]") []) (Var 3),Branch (Pattern ("Prelude",":") [5,6]) (Let [(7,Comb FuncCall ("SetFunctions","maxValue.maxOf.62") [Var 1,Comb ConsCall ("Prelude",":") [Var 5,Var 6]])] (Case  Rigid (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 1,Var 3],Var 7]) [Branch (Pattern ("Prelude","True") []) (Var 7),Branch (Pattern ("Prelude","False") []) (Var 3)]))])])),Func ("SetFunctions","values2list") 1 Public (FuncType (TCons ("SetFunctions","Values") [TVar 0]) (TCons ("Prelude","IO") [TCons ("Prelude","[]") [TVar 0]])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("SetFunctions","Values") [2]) (Comb FuncCall ("Prelude","return") [Var 2])])),Func ("SetFunctions","printValues") 1 Public (FuncType (TCons ("SetFunctions","Values") [TVar 0]) (TCons ("Prelude","IO") [TCons ("Prelude","()") []])) (Rule [1] (Comb FuncCall ("Prelude",">>=") [Comb FuncCall ("SetFunctions","values2list") [Var 1],Comb FuncCall ("Prelude","mapIO_") [Comb (FuncPartCall 1) ("Prelude","print") []]])),Func ("SetFunctions","sortValues") 0 Public (FuncType (TCons ("SetFunctions","Values") [TVar 0]) (TCons ("Prelude","[]") [TVar 0])) (Rule [] (Comb (FuncPartCall 1) ("SetFunctions","sortValuesBy") [Comb (FuncPartCall 2) ("Prelude","<=") []])),Func ("SetFunctions","sortValuesBy") 2 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons ("Prelude","Bool") []))) (FuncType (TCons ("SetFunctions","Values") [TVar 0]) (TCons ("Prelude","[]") [TVar 0]))) (Rule [1,2] (Case  Flex (Var 2) [Branch (Pattern ("SetFunctions","Values") [3]) (Comb FuncCall ("Sort","mergeSort") [Var 1,Var 3])]))] []