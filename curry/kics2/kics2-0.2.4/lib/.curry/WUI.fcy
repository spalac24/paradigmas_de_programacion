Prog "WUI" ["Char","HTML","List","Maybe","Prelude","Read","ReadShowTerm"] [TypeSyn ("WUI","Rendering") Public [] (FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") [])),TypeSyn ("WUI","WuiParams") Private [0] (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 0) (TCons ("Prelude","Bool") [])]),TypeSyn ("WUI","HtmlState") Private [] (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]),Type ("WUI","WuiState") Private [] [Cons ("WUI","Ref") 1 Private [TCons ("HTML","CgiRef") []],Cons ("WUI","Hidden") 1 Private [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],Cons ("WUI","CompNode") 1 Private [TCons ("Prelude","[]") [TCons ("WUI","WuiState") []]],Cons ("WUI","AltNode") 1 Private [TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("WUI","WuiState") []]]],Type ("WUI","WuiHandler") Public [] [Cons ("WUI","WHandler") 1 Private [FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (TCons ("Prelude","IO") [TCons ("HTML","HtmlForm") []])]],Type ("WUI","WuiSpec") Public [0] [Cons ("WUI","WuiSpec") 3 Private [TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 0) (TCons ("Prelude","Bool") [])],FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 0) (TCons ("Prelude","Bool") [])]) (FuncType (TVar 0) (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []])),FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 0) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (FuncType (TCons ("WUI","WuiState") []) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 0],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]])))]],Type ("WUI","WTree") Public [0] [Cons ("WUI","WLeaf") 1 Public [TVar 0],Cons ("WUI","WNode") 1 Public [TCons ("Prelude","[]") [TCons ("WUI","WTree") [TVar 0]]]]] [Func ("WUI","cgiRef2state") 1 Private (FuncType (TCons ("HTML","CgiRef") []) (TCons ("WUI","WuiState") [])) (Rule [1] (Comb ConsCall ("WUI","Ref") [Var 1])),Func ("WUI","state2cgiRef") 1 Private (FuncType (TCons ("WUI","WuiState") []) (TCons ("HTML","CgiRef") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("WUI","Ref") [2]) (Var 2)])),Func ("WUI","value2state") 1 Private (FuncType (TVar 0) (TCons ("WUI","WuiState") [])) (Rule [1] (Comb ConsCall ("WUI","Hidden") [Comb FuncCall ("ReadShowTerm","showQTerm") [Var 1]])),Func ("WUI","state2value") 1 Private (FuncType (TCons ("WUI","WuiState") []) (TVar 0)) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("WUI","Hidden") [2]) (Comb FuncCall ("ReadShowTerm","readQTerm") [Var 2])])),Func ("WUI","states2state") 1 Private (FuncType (TCons ("Prelude","[]") [TCons ("WUI","WuiState") []]) (TCons ("WUI","WuiState") [])) (Rule [1] (Comb ConsCall ("WUI","CompNode") [Var 1])),Func ("WUI","state2states") 1 Private (FuncType (TCons ("WUI","WuiState") []) (TCons ("Prelude","[]") [TCons ("WUI","WuiState") []])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("WUI","CompNode") [2]) (Var 2)])),Func ("WUI","altstate2state") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("WUI","WuiState") []]) (TCons ("WUI","WuiState") [])) (Rule [1] (Comb ConsCall ("WUI","AltNode") [Var 1])),Func ("WUI","state2altstate") 1 Private (FuncType (TCons ("WUI","WuiState") []) (TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("WUI","WuiState") []])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("WUI","AltNode") [2]) (Var 2)])),Func ("WUI","renderOf") 1 Private (FuncType (TCons ("Prelude","(,,)") [TVar 0,TVar 1,TVar 2]) (TVar 0)) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,,)") [2,3,4]) (Var 2)])),Func ("WUI","errorOf") 1 Private (FuncType (TCons ("Prelude","(,,)") [TVar 0,TVar 1,TVar 2]) (TVar 1)) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,,)") [2,3,4]) (Var 3)])),Func ("WUI","conditionOf") 1 Private (FuncType (TCons ("Prelude","(,,)") [TVar 0,TVar 1,TVar 2]) (TVar 2)) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,,)") [2,3,4]) (Var 4)])),Func ("WUI","wuiHandler2button") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("WUI","WuiHandler") []) (TCons ("HTML","HtmlExp") []))) (Rule [1,2] (Case  Flex (Var 2) [Branch (Pattern ("WUI","WHandler") [3]) (Comb FuncCall ("HTML","button") [Var 1,Var 3])])),Func ("WUI","withRendering") 2 Public (FuncType (TCons ("WUI","WuiSpec") [TVar 0]) (FuncType (FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") [])) (TCons ("WUI","WuiSpec") [TVar 0]))) (Rule [1,2] (Case  Flex (Var 1) [Branch (Pattern ("WUI","WuiSpec") [3,4,5]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,,)") [6,7,8]) (Comb ConsCall ("WUI","WuiSpec") [Comb ConsCall ("Prelude","(,,)") [Var 2,Var 7,Var 8],Var 4,Var 5])])])),Func ("WUI","withError") 2 Public (FuncType (TCons ("WUI","WuiSpec") [TVar 0]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("WUI","WuiSpec") [TVar 0]))) (Rule [1,2] (Case  Flex (Var 1) [Branch (Pattern ("WUI","WuiSpec") [3,4,5]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,,)") [6,7,8]) (Comb ConsCall ("WUI","WuiSpec") [Comb ConsCall ("Prelude","(,,)") [Var 6,Var 2,Var 8],Var 4,Var 5])])])),Func ("WUI","withCondition") 2 Public (FuncType (TCons ("WUI","WuiSpec") [TVar 0]) (FuncType (FuncType (TVar 0) (TCons ("Prelude","Bool") [])) (TCons ("WUI","WuiSpec") [TVar 0]))) (Rule [1,2] (Case  Flex (Var 1) [Branch (Pattern ("WUI","WuiSpec") [3,4,5]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,,)") [6,7,8]) (Comb ConsCall ("WUI","WuiSpec") [Comb ConsCall ("Prelude","(,,)") [Var 6,Var 7,Var 2],Var 4,Var 5])])])),Func ("WUI","transformWSpec") 2 Public (FuncType (TCons ("Prelude","(,)") [FuncType (TVar 0) (TVar 1),FuncType (TVar 1) (TVar 0)]) (FuncType (TCons ("WUI","WuiSpec") [TVar 0]) (TCons ("WUI","WuiSpec") [TVar 1]))) (Rule [1,2] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [3,4]) (Case  Flex (Var 2) [Branch (Pattern ("WUI","WuiSpec") [5,6,7]) (Comb ConsCall ("WUI","WuiSpec") [Comb FuncCall ("WUI","transformWSpec.transParam.41") [Var 4,Var 5],Comb (FuncPartCall 2) ("WUI","transformWSpec._#lambda1") [Var 3,Var 4,Var 6],Comb (FuncPartCall 3) ("WUI","transformWSpec._#lambda2") [Var 3,Var 7]])])])),Func ("WUI","transformWSpec.transParam.41") 2 Private (FuncType (FuncType (TVar 0) (TVar 1)) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 1) (TCons ("Prelude","Bool") [])]) (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 0) (TCons ("Prelude","Bool") [])]))) (Rule [1,2] (Case  Flex (Var 2) [Branch (Pattern ("Prelude","(,,)") [3,4,5]) (Comb ConsCall ("Prelude","(,,)") [Var 3,Var 4,Comb FuncCall ("Prelude",".") [Var 5,Var 1]])])),Func ("WUI","transformWSpec._#lambda1") 5 Private (FuncType (FuncType (TVar 76) (TVar 77)) (FuncType (FuncType (TVar 77) (TVar 76)) (FuncType (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 76) (TCons ("Prelude","Bool") [])]) (FuncType (TVar 76) (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]))) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 77) (TCons ("Prelude","Bool") [])]) (FuncType (TVar 77) (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []])))))) (Rule [1,2,3,4,5] (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 3,Comb FuncCall ("WUI","transformWSpec.transParam.41") [Var 1,Var 4]],Comb FuncCall ("Prelude","apply") [Var 2,Var 5]])),Func ("WUI","transformWSpec._#lambda2") 5 Private (FuncType (FuncType (TVar 76) (TVar 77)) (FuncType (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 76) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (FuncType (TCons ("WUI","WuiState") []) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 76],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]])))) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 77) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (FuncType (TCons ("WUI","WuiState") []) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 77],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]])))))) (Rule [1,2,3,4,5] (Let [(6,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 2,Comb FuncCall ("WUI","transformWSpec.transParam.41") [Var 1,Var 3]],Var 4],Var 5]),(7,Comb FuncCall ("WUI","transformWSpec._#lambda2._#selFP2#mba") [Var 6]),(8,Comb FuncCall ("WUI","transformWSpec._#lambda2._#selFP3#errv") [Var 6])] (Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("Prelude","maybe") [Comb ConsCall ("Prelude","Nothing") [],Comb FuncCall ("Prelude",".") [Comb (ConsPartCall 1) ("Prelude","Just") [],Var 1],Var 7],Var 8]))),Func ("WUI","transformWSpec._#lambda2._#selFP2#mba") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 76],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]) (TCons ("Prelude","Maybe") [TVar 76])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 2)])),Func ("WUI","transformWSpec._#lambda2._#selFP3#errv") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 76],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]) (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 3)])),Func ("WUI","wHidden") 0 Public (TCons ("WUI","WuiSpec") [TVar 0]) (Rule [] (Comb ConsCall ("WUI","WuiSpec") [Comb ConsCall ("Prelude","(,,)") [Comb (FuncPartCall 1) ("Prelude","head") [],Comb ConsCall ("Prelude",":") [Lit (Charc  '?'),Comb ConsCall ("Prelude","[]") []],Comb (FuncPartCall 1) ("Prelude","const") [Comb ConsCall ("Prelude","True") []]],Comb (FuncPartCall 2) ("WUI","wHidden._#lambda3") [],Comb (FuncPartCall 3) ("WUI","wHidden._#lambda4") []])),Func ("WUI","wHidden._#lambda3") 2 Private (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 104) (TCons ("Prelude","Bool") [])]) (FuncType (TVar 104) (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]))) (Rule [1,2] (Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("HTML","hempty") [],Comb FuncCall ("WUI","value2state") [Var 2]])),Func ("WUI","wHidden._#lambda4") 3 Private (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 104) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (FuncType (TCons ("WUI","WuiState") []) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 1659],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]])))) (Rule [1,2,3] (Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude","Just") [Comb FuncCall ("WUI","state2value") [Var 3]],Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("HTML","hempty") [],Var 3]])),Func ("WUI","wConstant") 1 Public (FuncType (FuncType (TVar 0) (TCons ("HTML","HtmlExp") [])) (TCons ("WUI","WuiSpec") [TVar 0])) (Rule [1] (Comb ConsCall ("WUI","WuiSpec") [Comb ConsCall ("Prelude","(,,)") [Comb (FuncPartCall 1) ("Prelude","head") [],Comb ConsCall ("Prelude",":") [Lit (Charc  '?'),Comb ConsCall ("Prelude","[]") []],Comb (FuncPartCall 1) ("Prelude","const") [Comb ConsCall ("Prelude","True") []]],Comb (FuncPartCall 2) ("WUI","wConstant._#lambda5") [Var 1],Comb (FuncPartCall 3) ("WUI","wConstant._#lambda6") [Var 1]])),Func ("WUI","wConstant._#lambda5") 3 Private (FuncType (FuncType (TVar 128) (TCons ("HTML","HtmlExp") [])) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 128) (TCons ("Prelude","Bool") [])]) (FuncType (TVar 128) (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []])))) (Rule [1,2,3] (Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("WUI","renderOf") [Var 2],Comb ConsCall ("Prelude",":") [Comb FuncCall ("Prelude","apply") [Var 1,Var 3],Comb ConsCall ("Prelude","[]") []]],Comb FuncCall ("WUI","value2state") [Var 3]])),Func ("WUI","wConstant._#lambda6") 4 Private (FuncType (FuncType (TVar 128) (TCons ("HTML","HtmlExp") [])) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 128) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (FuncType (TCons ("WUI","WuiState") []) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 128],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]))))) (Rule [1,2,3,4] (Case  Flex (Var 2) [Branch (Pattern ("Prelude","(,,)") [5,6,7]) (Let [(8,Comb FuncCall ("WUI","state2value") [Var 4])] (Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude","Just") [Var 8],Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("Prelude","apply") [Var 5,Comb ConsCall ("Prelude",":") [Comb FuncCall ("Prelude","apply") [Var 1,Var 8],Comb ConsCall ("Prelude","[]") []]],Var 4]]))])),Func ("WUI","wInt") 0 Public (TCons ("WUI","WuiSpec") [TCons ("Prelude","Int") []]) (Rule [] (Comb ConsCall ("WUI","WuiSpec") [Comb ConsCall ("Prelude","(,,)") [Comb (FuncPartCall 1) ("Prelude","head") [],Comb ConsCall ("Prelude",":") [Lit (Charc  'I'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude",":") [Lit (Charc  'g'),Comb ConsCall ("Prelude",":") [Lit (Charc  'a'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude",":") [Lit (Charc  ' '),Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  'n'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude",":") [Lit (Charc  'g'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  ':'),Comb ConsCall ("Prelude","[]") []]]]]]]]]]]]]]]]],Comb (FuncPartCall 1) ("Prelude","const") [Comb ConsCall ("Prelude","True") []]],Comb (FuncPartCall 2) ("WUI","wInt._#lambda7") [],Comb (FuncPartCall 3) ("WUI","wInt._#lambda8") []])),Func ("WUI","wInt.intWidget.65") 2 Private (FuncType (FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TVar 0)) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","(,)") [TVar 0,TCons ("WUI","WuiState") []]))) (Rule [1,2] (Free [3] (Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("Prelude","apply") [Var 1,Comb ConsCall ("Prelude",":") [Comb FuncCall ("HTML","addAttr") [Comb FuncCall ("HTML","textfield") [Var 3,Var 2],Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude",":") [Lit (Charc  's'),Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  'z'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude","[]") []]]]],Comb ConsCall ("Prelude",":") [Lit (Charc  '6'),Comb ConsCall ("Prelude","[]") []]]],Comb ConsCall ("Prelude","[]") []]],Comb FuncCall ("WUI","cgiRef2state") [Var 3]]))),Func ("WUI","wInt._#lambda7") 2 Private (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","Bool") [])]) (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]))) (Rule [1,2] (Comb FuncCall ("WUI","wInt.intWidget.65") [Comb FuncCall ("WUI","renderOf") [Var 1],Comb FuncCall ("Prelude","show") [Var 2]])),Func ("WUI","wInt._#lambda8") 3 Private (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (FuncType (TCons ("WUI","WuiState") []) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TCons ("Prelude","Int") []],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]])))) (Rule [1,2,3] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,,)") [4,5,6]) (Let [(7,Comb FuncCall ("Prelude","apply") [Var 2,Comb FuncCall ("WUI","state2cgiRef") [Var 3]]),(8,Comb (FuncPartCall 1) ("WUI","renderError") [Var 4,Var 5])] (Comb FuncCall ("Prelude","maybe") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude","Nothing") [],Comb FuncCall ("WUI","wInt.intWidget.65") [Var 8,Var 7]],Comb (FuncPartCall 1) ("WUI","wInt._#lambda8._#lambda9") [Var 7,Var 6,Var 4,Var 8],Comb FuncCall ("WUI","readMaybeInt") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("WUI","stripSpaces") [],Var 7]]]))])),Func ("WUI","wInt._#lambda8._#lambda9") 5 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","Bool") [])) (FuncType (FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") [])) (FuncType (FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") [])) (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TCons ("Prelude","Int") []],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]])))))) (Rule [1,2,3,4,5] (Case  Rigid (Comb FuncCall ("Prelude","apply") [Var 2,Var 5]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude","Just") [Var 5],Comb FuncCall ("WUI","wInt.intWidget.65") [Var 3,Var 1]]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude","Nothing") [],Comb FuncCall ("WUI","wInt.intWidget.65") [Var 4,Var 1]])])),Func ("WUI","stripSpaces") 0 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Comb FuncCall ("Prelude",".") [Comb FuncCall ("Prelude","reverse") [],Comb FuncCall ("Prelude",".") [Comb (FuncPartCall 1) ("Prelude","dropWhile") [Comb (FuncPartCall 1) ("Char","isSpace") []],Comb FuncCall ("Prelude",".") [Comb FuncCall ("Prelude","reverse") [],Comb (FuncPartCall 1) ("Prelude","dropWhile") [Comb (FuncPartCall 1) ("Char","isSpace") []]]]])),Func ("WUI","readMaybeInt") 1 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","Maybe") [TCons ("Prelude","Int") []])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude","Nothing") []),Branch (Pattern ("Prelude",":") [2,3]) (Case  Rigid (Comb FuncCall ("Prelude","==") [Var 2,Lit (Charc  '-')]) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("Prelude","maybe") [Comb ConsCall ("Prelude","Nothing") [],Comb (FuncPartCall 1) ("WUI","readMaybeInt._#lambda10") [],Comb FuncCall ("WUI","readMaybeInt.acc.80") [Lit (Intc  0),Var 3]]),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Char","isDigit") [Var 2]) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("WUI","readMaybeInt.acc.80") [Lit (Intc  0),Comb ConsCall ("Prelude",":") [Var 2,Var 3]]),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Prelude","otherwise") []) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude","Nothing") []),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("Prelude","failed") [])])])])])),Func ("WUI","readMaybeInt.acc.80") 2 Private (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","Maybe") [TCons ("Prelude","Int") []]))) (Rule [1,2] (Case  Flex (Var 2) [Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude","Just") [Var 1]),Branch (Pattern ("Prelude",":") [3,4]) (Case  Rigid (Comb FuncCall ("Char","isDigit") [Var 3]) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("WUI","readMaybeInt.acc.80") [Comb FuncCall ("Prelude","-") [Comb FuncCall ("Prelude","+") [Comb FuncCall ("Prelude","*") [Lit (Intc  10),Var 1],Comb FuncCall ("Prelude","ord") [Var 3]],Comb FuncCall ("Prelude","ord") [Lit (Charc  '0')]],Var 4]),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Prelude","otherwise") []) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude","Nothing") []),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("Prelude","failed") [])])])])),Func ("WUI","readMaybeInt._#lambda10") 1 Private (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","Maybe") [TCons ("Prelude","Int") []])) (Rule [1] (Comb ConsCall ("Prelude","Just") [Comb FuncCall ("Prelude","negate") [Var 1]])),Func ("WUI","checkLegalInput") 3 Private (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 0) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") [])) (FuncType (TVar 0) (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]))) (FuncType (TVar 0) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 0],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]])))) (Rule [1,2,3] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,,)") [4,5,6]) (Case  Rigid (Comb FuncCall ("Prelude","apply") [Var 6,Var 3]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude","Just") [Var 3],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 2,Var 4],Var 3]]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude","Nothing") [],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 2,Comb (FuncPartCall 1) ("WUI","renderError") [Var 4,Var 5]],Var 3]])])])),Func ("WUI","filterStringInput") 0 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [] (Comb (FuncPartCall 1) ("WUI","removeCRs") [])),Func ("WUI","removeCRs") 1 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude","[]") []),Branch (Pattern ("Prelude",":") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude",":") [Var 2,Comb ConsCall ("Prelude","[]") []]),Branch (Pattern ("Prelude",":") [4,5]) (Case  Rigid (Comb FuncCall ("Prelude","&&") [Comb FuncCall ("Prelude","==") [Var 2,Lit (Charc  '\013')],Comb FuncCall ("Prelude","==") [Var 4,Lit (Charc  '\010')]]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude",":") [Lit (Charc  '\010'),Comb FuncCall ("WUI","removeCRs") [Var 5]]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude",":") [Var 2,Comb FuncCall ("WUI","removeCRs") [Comb ConsCall ("Prelude",":") [Var 4,Var 5]]])])])])),Func ("WUI","wString") 0 Public (TCons ("WUI","WuiSpec") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (Rule [] (Comb FuncCall ("WUI","wStringAttrs") [Comb ConsCall ("Prelude","[]") []])),Func ("WUI","wStringSize") 1 Public (FuncType (TCons ("Prelude","Int") []) (TCons ("WUI","WuiSpec") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]])) (Rule [1] (Comb FuncCall ("WUI","wStringAttrs") [Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude",":") [Lit (Charc  's'),Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  'z'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude","[]") []]]]],Comb FuncCall ("Prelude","show") [Var 1]],Comb ConsCall ("Prelude","[]") []]])),Func ("WUI","wStringAttrs") 1 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]) (TCons ("WUI","WuiSpec") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]])) (Rule [1] (Comb ConsCall ("WUI","WuiSpec") [Comb ConsCall ("Prelude","(,,)") [Comb (FuncPartCall 1) ("Prelude","head") [],Comb ConsCall ("Prelude",":") [Lit (Charc  '?'),Comb ConsCall ("Prelude","[]") []],Comb (FuncPartCall 1) ("Prelude","const") [Comb ConsCall ("Prelude","True") []]],Comb (FuncPartCall 2) ("WUI","wStringAttrs._#lambda11") [Var 1],Comb (FuncPartCall 3) ("WUI","wStringAttrs._#lambda12") [Var 1]])),Func ("WUI","wStringAttrs.stringWidget.104") 3 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]) (FuncType (FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TVar 0)) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","(,)") [TVar 0,TCons ("WUI","WuiState") []])))) (Rule [1,2,3] (Free [4] (Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("Prelude","apply") [Var 2,Comb ConsCall ("Prelude",":") [Comb FuncCall ("Prelude","foldr") [Comb (FuncPartCall 2) ("Prelude","flip") [Comb (FuncPartCall 2) ("HTML","addAttr") []],Comb FuncCall ("HTML","textfield") [Var 4,Var 3],Var 1],Comb ConsCall ("Prelude","[]") []]],Comb FuncCall ("WUI","cgiRef2state") [Var 4]]))),Func ("WUI","wStringAttrs._#lambda11") 3 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","Bool") [])]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []])))) (Rule [1,2,3] (Comb FuncCall ("WUI","wStringAttrs.stringWidget.104") [Var 1,Comb FuncCall ("WUI","renderOf") [Var 2],Var 3])),Func ("WUI","wStringAttrs._#lambda12") 4 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (FuncType (TCons ("WUI","WuiState") []) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]))))) (Rule [1,2,3,4] (Comb FuncCall ("WUI","checkLegalInput") [Var 2,Comb (FuncPartCall 2) ("WUI","wStringAttrs.stringWidget.104") [Var 1],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("WUI","filterStringInput") [],Comb FuncCall ("Prelude","apply") [Var 3,Comb FuncCall ("WUI","state2cgiRef") [Var 4]]]])),Func ("WUI","wRequiredString") 0 Public (TCons ("WUI","WuiSpec") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (Rule [] (Comb FuncCall ("WUI","withCondition") [Comb FuncCall ("WUI","withError") [Comb FuncCall ("WUI","wString") [],Comb ConsCall ("Prelude",":") [Lit (Charc  'M'),Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  's'),Comb ConsCall ("Prelude",":") [Lit (Charc  's'),Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  'n'),Comb ConsCall ("Prelude",":") [Lit (Charc  'g'),Comb ConsCall ("Prelude",":") [Lit (Charc  ' '),Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  'n'),Comb ConsCall ("Prelude",":") [Lit (Charc  'p'),Comb ConsCall ("Prelude",":") [Lit (Charc  'u'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  ':'),Comb ConsCall ("Prelude","[]") []]]]]]]]]]]]]]]],Comb FuncCall ("Prelude",".") [Comb (FuncPartCall 1) ("Prelude","not") [],Comb (FuncPartCall 1) ("Prelude","null") []]])),Func ("WUI","wRequiredStringSize") 1 Public (FuncType (TCons ("Prelude","Int") []) (TCons ("WUI","WuiSpec") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]])) (Rule [1] (Comb FuncCall ("WUI","withCondition") [Comb FuncCall ("WUI","withError") [Comb FuncCall ("WUI","wStringSize") [Var 1],Comb ConsCall ("Prelude",":") [Lit (Charc  'M'),Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  's'),Comb ConsCall ("Prelude",":") [Lit (Charc  's'),Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  'n'),Comb ConsCall ("Prelude",":") [Lit (Charc  'g'),Comb ConsCall ("Prelude",":") [Lit (Charc  ' '),Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  'n'),Comb ConsCall ("Prelude",":") [Lit (Charc  'p'),Comb ConsCall ("Prelude",":") [Lit (Charc  'u'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  ':'),Comb ConsCall ("Prelude","[]") []]]]]]]]]]]]]]]],Comb FuncCall ("Prelude",".") [Comb (FuncPartCall 1) ("Prelude","not") [],Comb (FuncPartCall 1) ("Prelude","null") []]])),Func ("WUI","wTextArea") 1 Public (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("Prelude","Int") []]) (TCons ("WUI","WuiSpec") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]])) (Rule [1] (Comb ConsCall ("WUI","WuiSpec") [Comb ConsCall ("Prelude","(,,)") [Comb (FuncPartCall 1) ("Prelude","head") [],Comb ConsCall ("Prelude",":") [Lit (Charc  '?'),Comb ConsCall ("Prelude","[]") []],Comb (FuncPartCall 1) ("Prelude","const") [Comb ConsCall ("Prelude","True") []]],Comb (FuncPartCall 2) ("WUI","wTextArea._#lambda13") [Var 1],Comb (FuncPartCall 3) ("WUI","wTextArea._#lambda14") [Var 1]])),Func ("WUI","wTextArea.textareaWidget.115") 3 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("Prelude","Int") []]) (FuncType (FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TVar 0)) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","(,)") [TVar 0,TCons ("WUI","WuiState") []])))) (Rule [1,2,3] (Free [4] (Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("Prelude","apply") [Var 2,Comb ConsCall ("Prelude",":") [Comb FuncCall ("HTML","textarea") [Var 4,Var 1,Var 3],Comb ConsCall ("Prelude","[]") []]],Comb FuncCall ("WUI","cgiRef2state") [Var 4]]))),Func ("WUI","wTextArea._#lambda13") 3 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("Prelude","Int") []]) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","Bool") [])]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []])))) (Rule [1,2,3] (Comb FuncCall ("WUI","wTextArea.textareaWidget.115") [Var 1,Comb FuncCall ("WUI","renderOf") [Var 2],Var 3])),Func ("WUI","wTextArea._#lambda14") 4 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("Prelude","Int") []]) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (FuncType (TCons ("WUI","WuiState") []) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]))))) (Rule [1,2,3,4] (Comb FuncCall ("WUI","checkLegalInput") [Var 2,Comb (FuncPartCall 2) ("WUI","wTextArea.textareaWidget.115") [Var 1],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("WUI","filterStringInput") [],Comb FuncCall ("Prelude","apply") [Var 3,Comb FuncCall ("WUI","state2cgiRef") [Var 4]]]])),Func ("WUI","wSelect") 2 Public (FuncType (FuncType (TVar 0) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("WUI","WuiSpec") [TVar 0]))) (Rule [1,2] (Comb ConsCall ("WUI","WuiSpec") [Comb ConsCall ("Prelude","(,,)") [Comb (FuncPartCall 1) ("Prelude","head") [],Comb ConsCall ("Prelude",":") [Lit (Charc  '?'),Comb ConsCall ("Prelude","[]") []],Comb (FuncPartCall 1) ("Prelude","const") [Comb ConsCall ("Prelude","True") []]],Comb (FuncPartCall 2) ("WUI","wSelect._#lambda16") [Var 2,Var 1],Comb (FuncPartCall 3) ("WUI","wSelect._#lambda17") [Var 2,Var 1]])),Func ("WUI","wSelect.selWidget.122") 4 Private (FuncType (TCons ("Prelude","[]") [TVar 359]) (FuncType (FuncType (TVar 359) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (FuncType (FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TVar 0)) (FuncType (TVar 359) (TCons ("Prelude","(,)") [TVar 0,TCons ("WUI","WuiState") []]))))) (Rule [1,2,3,4] (Free [5] (Let [(6,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("List","elemIndex") [Var 4],Var 1]),(7,Comb FuncCall ("Prelude","zip") [Comb FuncCall ("Prelude","map") [Var 2,Var 1],Comb FuncCall ("Prelude","map") [Comb (FuncPartCall 1) ("Prelude","show") [],Comb FuncCall ("Prelude","enumFrom") [Lit (Intc  0)]]])] (Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("Prelude","apply") [Var 3,Comb ConsCall ("Prelude",":") [Comb FuncCall ("Prelude","maybe") [Comb FuncCall ("HTML","selection") [Var 5,Var 7],Comb (FuncPartCall 1) ("WUI","wSelect.selWidget.122._#lambda15") [Var 7,Var 5],Var 6],Comb ConsCall ("Prelude","[]") []]],Comb FuncCall ("WUI","cgiRef2state") [Var 5]])))),Func ("WUI","wSelect.selWidget.122._#lambda15") 3 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]) (FuncType (TCons ("HTML","CgiRef") []) (FuncType (TCons ("Prelude","Int") []) (TCons ("HTML","HtmlExp") [])))) (Rule [1,2,3] (Comb FuncCall ("HTML","selectionInitial") [Var 2,Var 1,Var 3])),Func ("WUI","wSelect._#lambda16") 4 Private (FuncType (TCons ("Prelude","[]") [TVar 359]) (FuncType (FuncType (TVar 359) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 359) (TCons ("Prelude","Bool") [])]) (FuncType (TVar 359) (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]))))) (Rule [1,2,3,4] (Comb FuncCall ("WUI","wSelect.selWidget.122") [Var 1,Var 2,Comb FuncCall ("WUI","renderOf") [Var 3],Var 4])),Func ("WUI","wSelect._#lambda17") 5 Private (FuncType (TCons ("Prelude","[]") [TVar 359]) (FuncType (FuncType (TVar 359) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 359) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (FuncType (TCons ("WUI","WuiState") []) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 359],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]])))))) (Rule [1,2,3,4,5] (Comb FuncCall ("WUI","checkLegalInput") [Var 3,Comb (FuncPartCall 2) ("WUI","wSelect.selWidget.122") [Var 1,Var 2],Comb FuncCall ("Prelude","!!") [Var 1,Comb FuncCall ("Read","readNat") [Comb FuncCall ("Prelude","apply") [Var 4,Comb FuncCall ("WUI","state2cgiRef") [Var 5]]]]])),Func ("WUI","wSelectInt") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Int") []]) (TCons ("WUI","WuiSpec") [TCons ("Prelude","Int") []])) (Rule [] (Comb (FuncPartCall 1) ("WUI","wSelect") [Comb (FuncPartCall 1) ("Prelude","show") []])),Func ("WUI","wSelectBool") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("WUI","WuiSpec") [TCons ("Prelude","Bool") []]))) (Rule [1,2] (Comb FuncCall ("WUI","wSelect") [Comb (FuncPartCall 1) ("WUI","wSelectBool._#lambda18") [Var 2,Var 1],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","True") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","False") [],Comb ConsCall ("Prelude","[]") []]]])),Func ("WUI","wSelectBool._#lambda18") 3 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","Bool") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])))) (Rule [1,2,3] (Case  Rigid (Var 3) [Branch (Pattern ("Prelude","True") []) (Var 2),Branch (Pattern ("Prelude","False") []) (Var 1)])),Func ("WUI","wCheckBool") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("WUI","WuiSpec") [TCons ("Prelude","Bool") []])) (Rule [1] (Comb ConsCall ("WUI","WuiSpec") [Comb ConsCall ("Prelude","(,,)") [Comb (FuncPartCall 1) ("Prelude","head") [],Comb ConsCall ("Prelude",":") [Lit (Charc  '?'),Comb ConsCall ("Prelude","[]") []],Comb (FuncPartCall 1) ("Prelude","const") [Comb ConsCall ("Prelude","True") []]],Comb (FuncPartCall 2) ("WUI","wCheckBool._#lambda19") [Var 1],Comb (FuncPartCall 3) ("WUI","wCheckBool._#lambda20") [Var 1]])),Func ("WUI","wCheckBool.checkWidget.138") 3 Private (FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (FuncType (FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TVar 0)) (FuncType (TCons ("Prelude","Bool") []) (TCons ("Prelude","(,)") [TVar 0,TCons ("WUI","WuiState") []])))) (Rule [1,2,3] (Free [4] (Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("Prelude","apply") [Var 2,Comb ConsCall ("Prelude",":") [Comb FuncCall ("HTML","inline") [Comb ConsCall ("Prelude",":") [Comb FuncCall ("Prelude","apply") [Case  Rigid (Var 3) [Branch (Pattern ("Prelude","True") []) (Comb (FuncPartCall 1) ("HTML","checkedbox") [Var 4]),Branch (Pattern ("Prelude","False") []) (Comb (FuncPartCall 1) ("HTML","checkbox") [Var 4])],Comb ConsCall ("Prelude",":") [Lit (Charc  'T'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  'u'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude","[]") []]]]]],Var 1]],Comb ConsCall ("Prelude","[]") []]],Comb FuncCall ("WUI","cgiRef2state") [Var 4]]))),Func ("WUI","wCheckBool._#lambda19") 3 Private (FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TCons ("Prelude","Bool") []) (TCons ("Prelude","Bool") [])]) (FuncType (TCons ("Prelude","Bool") []) (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []])))) (Rule [1,2,3] (Comb FuncCall ("WUI","wCheckBool.checkWidget.138") [Var 1,Comb FuncCall ("WUI","renderOf") [Var 2],Var 3])),Func ("WUI","wCheckBool._#lambda20") 4 Private (FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TCons ("Prelude","Bool") []) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (FuncType (TCons ("WUI","WuiState") []) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TCons ("Prelude","Bool") []],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]))))) (Rule [1,2,3,4] (Comb FuncCall ("WUI","checkLegalInput") [Var 2,Comb (FuncPartCall 2) ("WUI","wCheckBool.checkWidget.138") [Var 1],Comb FuncCall ("Prelude","==") [Comb FuncCall ("Prelude","apply") [Var 3,Comb FuncCall ("WUI","state2cgiRef") [Var 4]],Comb ConsCall ("Prelude",":") [Lit (Charc  'T'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  'u'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude","[]") []]]]]]])),Func ("WUI","wMultiCheckSelect") 2 Public (FuncType (FuncType (TVar 0) (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []])) (FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("WUI","WuiSpec") [TCons ("Prelude","[]") [TVar 0]]))) (Rule [1,2] (Comb ConsCall ("WUI","WuiSpec") [Comb ConsCall ("Prelude","(,,)") [Comb (FuncPartCall 1) ("WUI","renderTuple") [],Comb FuncCall ("WUI","tupleError") [],Comb (FuncPartCall 1) ("Prelude","const") [Comb ConsCall ("Prelude","True") []]],Comb (FuncPartCall 2) ("WUI","wMultiCheckSelect._#lambda21") [Var 2,Var 1],Comb (FuncPartCall 3) ("WUI","wMultiCheckSelect._#lambda22") [Var 2,Var 1]])),Func ("WUI","wMultiCheckSelect.checkWidget.145") 4 Private (FuncType (TCons ("Prelude","[]") [TVar 424]) (FuncType (FuncType (TVar 424) (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []])) (FuncType (FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TVar 0)) (FuncType (TCons ("Prelude","[]") [TVar 424]) (TCons ("Prelude","(,)") [TVar 0,TCons ("WUI","WuiState") []]))))) (Rule [1,2,3,4] (Let [(5,Comb FuncCall ("Prelude","take") [Comb FuncCall ("Prelude","length") [Var 1],Comb FuncCall ("WUI","newVars") []]),(6,Comb FuncCall ("Prelude","zip") [Var 5,Var 1])] (Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("Prelude","apply") [Var 3,Comb FuncCall ("Prelude","map") [Comb (FuncPartCall 1) ("WUI","wMultiCheckSelect.checkWidget.145.showItem.148") [Var 2,Var 4],Var 6]],Comb FuncCall ("WUI","states2state") [Comb FuncCall ("Prelude","map") [Comb (FuncPartCall 1) ("WUI","cgiRef2state") [],Var 5]]]))),Func ("WUI","wMultiCheckSelect.checkWidget.145.showItem.148") 3 Private (FuncType (FuncType (TVar 424) (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []])) (FuncType (TCons ("Prelude","[]") [TVar 424]) (FuncType (TCons ("Prelude","(,)") [TCons ("HTML","CgiRef") [],TVar 424]) (TCons ("HTML","HtmlExp") [])))) (Rule [1,2,3] (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Comb FuncCall ("HTML","inline") [Comb ConsCall ("Prelude",":") [Comb FuncCall ("Prelude","apply") [Case  Rigid (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","elem") [Var 5],Var 2]) [Branch (Pattern ("Prelude","True") []) (Comb (FuncPartCall 1) ("HTML","checkedbox") [Var 4]),Branch (Pattern ("Prelude","False") []) (Comb (FuncPartCall 1) ("HTML","checkbox") [Var 4])],Comb ConsCall ("Prelude",":") [Lit (Charc  'T'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  'u'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude","[]") []]]]]],Comb FuncCall ("Prelude","apply") [Var 1,Var 5]]])])),Func ("WUI","wMultiCheckSelect._#lambda21") 4 Private (FuncType (TCons ("Prelude","[]") [TVar 424]) (FuncType (FuncType (TVar 424) (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []])) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TCons ("Prelude","[]") [TVar 424]) (TCons ("Prelude","Bool") [])]) (FuncType (TCons ("Prelude","[]") [TVar 424]) (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]))))) (Rule [1,2,3,4] (Comb FuncCall ("WUI","wMultiCheckSelect.checkWidget.145") [Var 1,Var 2,Comb FuncCall ("WUI","renderOf") [Var 3],Var 4])),Func ("WUI","wMultiCheckSelect._#lambda22") 5 Private (FuncType (TCons ("Prelude","[]") [TVar 424]) (FuncType (FuncType (TVar 424) (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []])) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TCons ("Prelude","[]") [TVar 424]) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (FuncType (TCons ("WUI","WuiState") []) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TCons ("Prelude","[]") [TVar 424]],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]])))))) (Rule [1,2,3,4,5] (Comb FuncCall ("WUI","checkLegalInput") [Var 3,Comb (FuncPartCall 2) ("WUI","wMultiCheckSelect.checkWidget.145") [Var 1,Var 2],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","concatMap") [Comb (FuncPartCall 1) ("WUI","wMultiCheckSelect._#lambda22._#lambda23") [Var 4]],Comb FuncCall ("Prelude","zip") [Comb FuncCall ("Prelude","map") [Comb (FuncPartCall 1) ("WUI","state2cgiRef") [],Comb FuncCall ("WUI","state2states") [Var 5]],Var 1]]])),Func ("WUI","wMultiCheckSelect._#lambda22._#lambda23") 2 Private (FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (FuncType (TCons ("Prelude","(,)") [TCons ("HTML","CgiRef") [],TVar 424]) (TCons ("Prelude","[]") [TVar 424]))) (Rule [1,2] (Case  Flex (Var 2) [Branch (Pattern ("Prelude","(,)") [3,4]) (Case  Rigid (Comb FuncCall ("Prelude","==") [Comb FuncCall ("Prelude","apply") [Var 1,Var 3],Comb ConsCall ("Prelude",":") [Lit (Charc  'T'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  'u'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude","[]") []]]]]]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude",":") [Var 4,Comb ConsCall ("Prelude","[]") []]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","[]") [])])])),Func ("WUI","newVars") 0 Private (TCons ("Prelude","[]") [TVar 0]) (Rule [] (Comb ConsCall ("Prelude",":") [Comb FuncCall ("Prelude","unknown") [],Comb FuncCall ("WUI","newVars") []])),Func ("WUI","wRadioSelect") 2 Public (FuncType (FuncType (TVar 0) (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []])) (FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("WUI","WuiSpec") [TVar 0]))) (Rule [1,2] (Comb ConsCall ("WUI","WuiSpec") [Comb ConsCall ("Prelude","(,,)") [Comb (FuncPartCall 1) ("WUI","renderTuple") [],Comb FuncCall ("WUI","tupleError") [],Comb (FuncPartCall 1) ("Prelude","const") [Comb ConsCall ("Prelude","True") []]],Comb (FuncPartCall 2) ("WUI","wRadioSelect._#lambda24") [Var 2,Var 1],Comb (FuncPartCall 3) ("WUI","wRadioSelect._#lambda25") [Var 2,Var 1]])),Func ("WUI","wRadioSelect.radioWidget.159") 4 Private (FuncType (TCons ("Prelude","[]") [TVar 504]) (FuncType (FuncType (TVar 504) (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []])) (FuncType (FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TVar 0)) (FuncType (TVar 504) (TCons ("Prelude","(,)") [TVar 0,TCons ("WUI","WuiState") []]))))) (Rule [1,2,3,4] (Free [5] (Let [(6,Comb FuncCall ("Prelude","maybe") [Lit (Intc  0),Comb (FuncPartCall 1) ("Prelude","id") [],Comb FuncCall ("Prelude","apply") [Comb FuncCall ("List","elemIndex") [Var 4],Var 1]]),(7,Comb FuncCall ("Prelude","zip") [Comb FuncCall ("Prelude","enumFrom") [Lit (Intc  0)],Comb FuncCall ("Prelude","map") [Var 2,Var 1]])] (Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("Prelude","apply") [Var 3,Comb FuncCall ("Prelude","map") [Comb (FuncPartCall 1) ("WUI","wRadioSelect.radioWidget.159.showItem.162") [Var 6,Var 5],Var 7]],Comb FuncCall ("WUI","cgiRef2state") [Var 5]])))),Func ("WUI","wRadioSelect.radioWidget.159.showItem.162") 3 Private (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("HTML","CgiRef") []) (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]]) (TCons ("HTML","HtmlExp") [])))) (Rule [1,2,3] (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Comb FuncCall ("HTML","table") [Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude",":") [Comb FuncCall ("Prelude","apply") [Case  Rigid (Comb FuncCall ("Prelude","==") [Var 4,Var 1]) [Branch (Pattern ("Prelude","True") []) (Comb (FuncPartCall 1) ("HTML","radio_main") [Var 2]),Branch (Pattern ("Prelude","False") []) (Comb (FuncPartCall 1) ("HTML","radio_other") [Var 2])],Comb FuncCall ("Prelude","show") [Var 4]],Comb ConsCall ("Prelude","[]") []],Comb ConsCall ("Prelude",":") [Var 5,Comb ConsCall ("Prelude","[]") []]],Comb ConsCall ("Prelude","[]") []]])])),Func ("WUI","wRadioSelect._#lambda24") 4 Private (FuncType (TCons ("Prelude","[]") [TVar 504]) (FuncType (FuncType (TVar 504) (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []])) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 504) (TCons ("Prelude","Bool") [])]) (FuncType (TVar 504) (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]))))) (Rule [1,2,3,4] (Comb FuncCall ("WUI","wRadioSelect.radioWidget.159") [Var 1,Var 2,Comb FuncCall ("WUI","renderOf") [Var 3],Var 4])),Func ("WUI","wRadioSelect._#lambda25") 5 Private (FuncType (TCons ("Prelude","[]") [TVar 504]) (FuncType (FuncType (TVar 504) (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []])) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 504) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (FuncType (TCons ("WUI","WuiState") []) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 504],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]])))))) (Rule [1,2,3,4,5] (Comb FuncCall ("WUI","checkLegalInput") [Var 3,Comb (FuncPartCall 2) ("WUI","wRadioSelect.radioWidget.159") [Var 1,Var 2],Comb FuncCall ("Prelude","!!") [Var 1,Comb FuncCall ("Read","readNat") [Comb FuncCall ("Prelude","apply") [Var 4,Comb FuncCall ("WUI","state2cgiRef") [Var 5]]]]])),Func ("WUI","wRadioBool") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("WUI","WuiSpec") [TCons ("Prelude","Bool") []]))) (Rule [1,2] (Comb FuncCall ("WUI","wRadioSelect") [Comb (FuncPartCall 1) ("WUI","wRadioBool._#lambda26") [Var 2,Var 1],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","True") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","False") [],Comb ConsCall ("Prelude","[]") []]]])),Func ("WUI","wRadioBool._#lambda26") 3 Private (FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (FuncType (TCons ("Prelude","Bool") []) (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []])))) (Rule [1,2,3] (Case  Rigid (Var 3) [Branch (Pattern ("Prelude","True") []) (Var 2),Branch (Pattern ("Prelude","False") []) (Var 1)])),Func ("WUI","wPair") 2 Public (FuncType (TCons ("WUI","WuiSpec") [TVar 0]) (FuncType (TCons ("WUI","WuiSpec") [TVar 1]) (TCons ("WUI","WuiSpec") [TCons ("Prelude","(,)") [TVar 0,TVar 1]]))) (Rule [1,2] (Case  Flex (Var 1) [Branch (Pattern ("WUI","WuiSpec") [3,4,5]) (Case  Flex (Var 2) [Branch (Pattern ("WUI","WuiSpec") [6,7,8]) (Comb ConsCall ("WUI","WuiSpec") [Comb ConsCall ("Prelude","(,,)") [Comb (FuncPartCall 1) ("WUI","renderTuple") [],Comb FuncCall ("WUI","tupleError") [],Comb (FuncPartCall 1) ("Prelude","const") [Comb ConsCall ("Prelude","True") []]],Comb (FuncPartCall 2) ("WUI","wPair.showc.175") [Var 3,Var 6,Var 4,Var 7],Comb (FuncPartCall 3) ("WUI","wPair.readc.175") [Var 5,Var 8,Var 3,Var 6]])])])),Func ("WUI","wPair.showc.175") 6 Private (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 567) (TCons ("Prelude","Bool") [])]) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 569) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 567) (TCons ("Prelude","Bool") [])]) (FuncType (TVar 567) (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]))) (FuncType (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 569) (TCons ("Prelude","Bool") [])]) (FuncType (TVar 569) (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]))) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TVar 0),TVar 1,TVar 2]) (FuncType (TCons ("Prelude","(,)") [TVar 567,TVar 569]) (TCons ("Prelude","(,)") [TVar 0,TCons ("WUI","WuiState") []]))))))) (Rule [1,2,3,4,5,6] (Case  Flex (Var 6) [Branch (Pattern ("Prelude","(,)") [7,8]) (Let [(9,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 3,Var 1],Var 7]),(10,Comb FuncCall ("WUI","wPair.showc.175._#selFP8#hea") [Var 9]),(11,Comb FuncCall ("WUI","wPair.showc.175._#selFP9#rta") [Var 9]),(12,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 4,Var 2],Var 8]),(13,Comb FuncCall ("WUI","wPair.showc.175._#selFP6#heb") [Var 12]),(14,Comb FuncCall ("WUI","wPair.showc.175._#selFP7#rtb") [Var 12])] (Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("WUI","renderOf") [Var 5],Comb ConsCall ("Prelude",":") [Var 10,Comb ConsCall ("Prelude",":") [Var 13,Comb ConsCall ("Prelude","[]") []]]],Comb FuncCall ("WUI","states2state") [Comb ConsCall ("Prelude",":") [Var 11,Comb ConsCall ("Prelude",":") [Var 14,Comb ConsCall ("Prelude","[]") []]]]]))])),Func ("WUI","wPair.showc.175._#selFP8#hea") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]) (TCons ("HTML","HtmlExp") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 2)])),Func ("WUI","wPair.showc.175._#selFP9#rta") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]) (TCons ("WUI","WuiState") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 3)])),Func ("WUI","wPair.showc.175._#selFP6#heb") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]) (TCons ("HTML","HtmlExp") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 2)])),Func ("WUI","wPair.showc.175._#selFP7#rtb") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]) (TCons ("WUI","WuiState") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 3)])),Func ("WUI","wPair.readc.175") 7 Private (FuncType (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 567) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (FuncType (TCons ("WUI","WuiState") []) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 567],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]])))) (FuncType (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 569) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (FuncType (TCons ("WUI","WuiState") []) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 569],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]])))) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 567) (TCons ("Prelude","Bool") [])]) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 569) (TCons ("Prelude","Bool") [])]) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TCons ("Prelude","(,)") [TVar 567,TVar 569]) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (FuncType (TCons ("WUI","WuiState") []) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TCons ("Prelude","(,)") [TVar 567,TVar 569]],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]])))))))) (Rule [1,2,3,4,5,6,7] (Case  Flex (Var 5) [Branch (Pattern ("Prelude","(,,)") [8,9,10]) (Let [(11,Comb FuncCall ("WUI","state2states") [Var 7]),(12,Comb FuncCall ("WUI","wPair.readc.175._#selFP19#ra") [Var 11]),(13,Comb FuncCall ("WUI","wPair.readc.175._#selFP20#rb") [Var 11]),(14,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 1,Var 3],Var 6],Var 12]),(15,Comb FuncCall ("WUI","wPair.readc.175._#selFP16#rav") [Var 14]),(16,Comb FuncCall ("WUI","wPair.readc.175._#selFP17#hea") [Var 14]),(17,Comb FuncCall ("WUI","wPair.readc.175._#selFP18#rta") [Var 14]),(18,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 2,Var 4],Var 6],Var 13]),(19,Comb FuncCall ("WUI","wPair.readc.175._#selFP13#rbv") [Var 18]),(20,Comb FuncCall ("WUI","wPair.readc.175._#selFP14#heb") [Var 18]),(21,Comb FuncCall ("WUI","wPair.readc.175._#selFP15#rtb") [Var 18]),(22,Comb ConsCall ("Prelude",":") [Var 16,Comb ConsCall ("Prelude",":") [Var 20,Comb ConsCall ("Prelude","[]") []]]),(23,Comb FuncCall ("WUI","states2state") [Comb ConsCall ("Prelude",":") [Var 17,Comb ConsCall ("Prelude",":") [Var 21,Comb ConsCall ("Prelude","[]") []]]])] (Case  Rigid (Comb FuncCall ("Prelude","||") [Comb FuncCall ("Prelude","==") [Var 15,Comb ConsCall ("Prelude","Nothing") []],Comb FuncCall ("Prelude","==") [Var 19,Comb ConsCall ("Prelude","Nothing") []]]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude","Nothing") [],Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("Prelude","apply") [Var 8,Var 22],Var 23]]),Branch (Pattern ("Prelude","False") []) (Let [(24,Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("Maybe","fromJust") [Var 15],Comb FuncCall ("Maybe","fromJust") [Var 19]])] (Case  Rigid (Comb FuncCall ("Prelude","apply") [Var 10,Var 24]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude","Just") [Var 24],Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("Prelude","apply") [Var 8,Var 22],Var 23]]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude","Nothing") [],Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("WUI","renderError") [Var 8,Var 9,Var 22],Var 23]])]))]))])),Func ("WUI","wPair.readc.175._#selFP19#ra") 1 Private (FuncType (TCons ("Prelude","[]") [TCons ("WUI","WuiState") []]) (TCons ("WUI","WuiState") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude",":") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude",":") [4,5]) (Case  Flex (Var 5) [Branch (Pattern ("Prelude","[]") []) (Var 2)])])])),Func ("WUI","wPair.readc.175._#selFP20#rb") 1 Private (FuncType (TCons ("Prelude","[]") [TCons ("WUI","WuiState") []]) (TCons ("WUI","WuiState") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude",":") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude",":") [4,5]) (Case  Flex (Var 5) [Branch (Pattern ("Prelude","[]") []) (Var 4)])])])),Func ("WUI","wPair.readc.175._#selFP16#rav") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 567],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]) (TCons ("Prelude","Maybe") [TVar 567])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Var 2)])])),Func ("WUI","wPair.readc.175._#selFP17#hea") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 567],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]) (TCons ("HTML","HtmlExp") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Var 4)])])),Func ("WUI","wPair.readc.175._#selFP18#rta") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 567],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]) (TCons ("WUI","WuiState") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Var 5)])])),Func ("WUI","wPair.readc.175._#selFP13#rbv") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 569],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]) (TCons ("Prelude","Maybe") [TVar 569])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Var 2)])])),Func ("WUI","wPair.readc.175._#selFP14#heb") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 569],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]) (TCons ("HTML","HtmlExp") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Var 4)])])),Func ("WUI","wPair.readc.175._#selFP15#rtb") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 569],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]) (TCons ("WUI","WuiState") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Var 5)])])),Func ("WUI","wTriple") 3 Public (FuncType (TCons ("WUI","WuiSpec") [TVar 0]) (FuncType (TCons ("WUI","WuiSpec") [TVar 1]) (FuncType (TCons ("WUI","WuiSpec") [TVar 2]) (TCons ("WUI","WuiSpec") [TCons ("Prelude","(,,)") [TVar 0,TVar 1,TVar 2]])))) (Rule [1,2,3] (Case  Flex (Var 1) [Branch (Pattern ("WUI","WuiSpec") [4,5,6]) (Case  Flex (Var 2) [Branch (Pattern ("WUI","WuiSpec") [7,8,9]) (Case  Flex (Var 3) [Branch (Pattern ("WUI","WuiSpec") [10,11,12]) (Comb ConsCall ("WUI","WuiSpec") [Comb ConsCall ("Prelude","(,,)") [Comb (FuncPartCall 1) ("WUI","renderTuple") [],Comb FuncCall ("WUI","tupleError") [],Comb (FuncPartCall 1) ("Prelude","const") [Comb ConsCall ("Prelude","True") []]],Comb (FuncPartCall 2) ("WUI","wTriple.showd.192") [Var 4,Var 7,Var 10,Var 5,Var 8,Var 11],Comb (FuncPartCall 3) ("WUI","wTriple.readd.192") [Var 6,Var 9,Var 12,Var 4,Var 7,Var 10]])])])])),Func ("WUI","wTriple.showd.192") 8 Private (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 643) (TCons ("Prelude","Bool") [])]) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 645) (TCons ("Prelude","Bool") [])]) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 647) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 643) (TCons ("Prelude","Bool") [])]) (FuncType (TVar 643) (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]))) (FuncType (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 645) (TCons ("Prelude","Bool") [])]) (FuncType (TVar 645) (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]))) (FuncType (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 647) (TCons ("Prelude","Bool") [])]) (FuncType (TVar 647) (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]))) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TVar 0),TVar 1,TVar 2]) (FuncType (TCons ("Prelude","(,,)") [TVar 643,TVar 645,TVar 647]) (TCons ("Prelude","(,)") [TVar 0,TCons ("WUI","WuiState") []]))))))))) (Rule [1,2,3,4,5,6,7,8] (Case  Flex (Var 8) [Branch (Pattern ("Prelude","(,,)") [9,10,11]) (Let [(12,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 4,Var 1],Var 9]),(13,Comb FuncCall ("WUI","wTriple.showd.192._#selFP28#hea") [Var 12]),(14,Comb FuncCall ("WUI","wTriple.showd.192._#selFP29#rta") [Var 12]),(15,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 5,Var 2],Var 10]),(16,Comb FuncCall ("WUI","wTriple.showd.192._#selFP26#heb") [Var 15]),(17,Comb FuncCall ("WUI","wTriple.showd.192._#selFP27#rtb") [Var 15]),(18,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 6,Var 3],Var 11]),(19,Comb FuncCall ("WUI","wTriple.showd.192._#selFP24#hec") [Var 18]),(20,Comb FuncCall ("WUI","wTriple.showd.192._#selFP25#rtc") [Var 18])] (Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("WUI","renderOf") [Var 7],Comb ConsCall ("Prelude",":") [Var 13,Comb ConsCall ("Prelude",":") [Var 16,Comb ConsCall ("Prelude",":") [Var 19,Comb ConsCall ("Prelude","[]") []]]]],Comb FuncCall ("WUI","states2state") [Comb ConsCall ("Prelude",":") [Var 14,Comb ConsCall ("Prelude",":") [Var 17,Comb ConsCall ("Prelude",":") [Var 20,Comb ConsCall ("Prelude","[]") []]]]]]))])),Func ("WUI","wTriple.showd.192._#selFP28#hea") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]) (TCons ("HTML","HtmlExp") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 2)])),Func ("WUI","wTriple.showd.192._#selFP29#rta") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]) (TCons ("WUI","WuiState") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 3)])),Func ("WUI","wTriple.showd.192._#selFP26#heb") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]) (TCons ("HTML","HtmlExp") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 2)])),Func ("WUI","wTriple.showd.192._#selFP27#rtb") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]) (TCons ("WUI","WuiState") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 3)])),Func ("WUI","wTriple.showd.192._#selFP24#hec") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]) (TCons ("HTML","HtmlExp") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 2)])),Func ("WUI","wTriple.showd.192._#selFP25#rtc") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]) (TCons ("WUI","WuiState") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 3)])),Func ("WUI","wTriple.readd.192") 9 Private (FuncType (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 643) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (FuncType (TCons ("WUI","WuiState") []) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 643],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]])))) (FuncType (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 645) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (FuncType (TCons ("WUI","WuiState") []) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 645],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]])))) (FuncType (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 647) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (FuncType (TCons ("WUI","WuiState") []) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 647],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]])))) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 643) (TCons ("Prelude","Bool") [])]) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 645) (TCons ("Prelude","Bool") [])]) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 647) (TCons ("Prelude","Bool") [])]) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TCons ("Prelude","(,,)") [TVar 643,TVar 645,TVar 647]) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (FuncType (TCons ("WUI","WuiState") []) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TCons ("Prelude","(,,)") [TVar 643,TVar 645,TVar 647]],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]])))))))))) (Rule [1,2,3,4,5,6,7,8,9] (Case  Flex (Var 7) [Branch (Pattern ("Prelude","(,,)") [10,11,12]) (Let [(13,Comb FuncCall ("WUI","state2states") [Var 9]),(14,Comb FuncCall ("WUI","wTriple.readd.192._#selFP43#ra") [Var 13]),(15,Comb FuncCall ("WUI","wTriple.readd.192._#selFP44#rb") [Var 13]),(16,Comb FuncCall ("WUI","wTriple.readd.192._#selFP45#rc") [Var 13]),(17,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 1,Var 4],Var 8],Var 14]),(18,Comb FuncCall ("WUI","wTriple.readd.192._#selFP40#rav") [Var 17]),(19,Comb FuncCall ("WUI","wTriple.readd.192._#selFP41#hea") [Var 17]),(20,Comb FuncCall ("WUI","wTriple.readd.192._#selFP42#rta") [Var 17]),(21,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 2,Var 5],Var 8],Var 15]),(22,Comb FuncCall ("WUI","wTriple.readd.192._#selFP37#rbv") [Var 21]),(23,Comb FuncCall ("WUI","wTriple.readd.192._#selFP38#heb") [Var 21]),(24,Comb FuncCall ("WUI","wTriple.readd.192._#selFP39#rtb") [Var 21]),(25,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 3,Var 6],Var 8],Var 16]),(26,Comb FuncCall ("WUI","wTriple.readd.192._#selFP34#rcv") [Var 25]),(27,Comb FuncCall ("WUI","wTriple.readd.192._#selFP35#hec") [Var 25]),(28,Comb FuncCall ("WUI","wTriple.readd.192._#selFP36#rtc") [Var 25]),(29,Comb ConsCall ("Prelude",":") [Var 19,Comb ConsCall ("Prelude",":") [Var 23,Comb ConsCall ("Prelude",":") [Var 27,Comb ConsCall ("Prelude","[]") []]]]),(30,Comb FuncCall ("WUI","states2state") [Comb ConsCall ("Prelude",":") [Var 20,Comb ConsCall ("Prelude",":") [Var 24,Comb ConsCall ("Prelude",":") [Var 28,Comb ConsCall ("Prelude","[]") []]]]])] (Case  Rigid (Comb FuncCall ("Prelude","||") [Comb FuncCall ("Prelude","==") [Var 18,Comb ConsCall ("Prelude","Nothing") []],Comb FuncCall ("Prelude","||") [Comb FuncCall ("Prelude","==") [Var 22,Comb ConsCall ("Prelude","Nothing") []],Comb FuncCall ("Prelude","==") [Var 26,Comb ConsCall ("Prelude","Nothing") []]]]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude","Nothing") [],Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("Prelude","apply") [Var 10,Var 29],Var 30]]),Branch (Pattern ("Prelude","False") []) (Let [(31,Comb ConsCall ("Prelude","(,,)") [Comb FuncCall ("Maybe","fromJust") [Var 18],Comb FuncCall ("Maybe","fromJust") [Var 22],Comb FuncCall ("Maybe","fromJust") [Var 26]])] (Case  Rigid (Comb FuncCall ("Prelude","apply") [Var 12,Var 31]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude","Just") [Var 31],Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("Prelude","apply") [Var 10,Var 29],Var 30]]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude","Nothing") [],Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("WUI","renderError") [Var 10,Var 11,Var 29],Var 30]])]))]))])),Func ("WUI","wTriple.readd.192._#selFP43#ra") 1 Private (FuncType (TCons ("Prelude","[]") [TCons ("WUI","WuiState") []]) (TCons ("WUI","WuiState") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude",":") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude",":") [4,5]) (Case  Flex (Var 5) [Branch (Pattern ("Prelude",":") [6,7]) (Case  Flex (Var 7) [Branch (Pattern ("Prelude","[]") []) (Var 2)])])])])),Func ("WUI","wTriple.readd.192._#selFP44#rb") 1 Private (FuncType (TCons ("Prelude","[]") [TCons ("WUI","WuiState") []]) (TCons ("WUI","WuiState") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude",":") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude",":") [4,5]) (Case  Flex (Var 5) [Branch (Pattern ("Prelude",":") [6,7]) (Case  Flex (Var 7) [Branch (Pattern ("Prelude","[]") []) (Var 4)])])])])),Func ("WUI","wTriple.readd.192._#selFP45#rc") 1 Private (FuncType (TCons ("Prelude","[]") [TCons ("WUI","WuiState") []]) (TCons ("WUI","WuiState") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude",":") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude",":") [4,5]) (Case  Flex (Var 5) [Branch (Pattern ("Prelude",":") [6,7]) (Case  Flex (Var 7) [Branch (Pattern ("Prelude","[]") []) (Var 6)])])])])),Func ("WUI","wTriple.readd.192._#selFP40#rav") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 643],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]) (TCons ("Prelude","Maybe") [TVar 643])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Var 2)])])),Func ("WUI","wTriple.readd.192._#selFP41#hea") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 643],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]) (TCons ("HTML","HtmlExp") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Var 4)])])),Func ("WUI","wTriple.readd.192._#selFP42#rta") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 643],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]) (TCons ("WUI","WuiState") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Var 5)])])),Func ("WUI","wTriple.readd.192._#selFP37#rbv") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 645],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]) (TCons ("Prelude","Maybe") [TVar 645])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Var 2)])])),Func ("WUI","wTriple.readd.192._#selFP38#heb") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 645],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]) (TCons ("HTML","HtmlExp") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Var 4)])])),Func ("WUI","wTriple.readd.192._#selFP39#rtb") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 645],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]) (TCons ("WUI","WuiState") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Var 5)])])),Func ("WUI","wTriple.readd.192._#selFP34#rcv") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 647],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]) (TCons ("Prelude","Maybe") [TVar 647])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Var 2)])])),Func ("WUI","wTriple.readd.192._#selFP35#hec") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 647],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]) (TCons ("HTML","HtmlExp") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Var 4)])])),Func ("WUI","wTriple.readd.192._#selFP36#rtc") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 647],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]) (TCons ("WUI","WuiState") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Var 5)])])),Func ("WUI","w4Tuple") 4 Public (FuncType (TCons ("WUI","WuiSpec") [TVar 0]) (FuncType (TCons ("WUI","WuiSpec") [TVar 1]) (FuncType (TCons ("WUI","WuiSpec") [TVar 2]) (FuncType (TCons ("WUI","WuiSpec") [TVar 3]) (TCons ("WUI","WuiSpec") [TCons ("Prelude","(,,,)") [TVar 0,TVar 1,TVar 2,TVar 3]]))))) (Rule [1,2,3,4] (Comb FuncCall ("WUI","transformWSpec") [Comb ConsCall ("Prelude","(,)") [Comb (FuncPartCall 1) ("WUI","w4Tuple._#lambda27") [],Comb (FuncPartCall 1) ("WUI","w4Tuple._#lambda28") []],Comb FuncCall ("WUI","wJoinTuple") [Comb FuncCall ("WUI","wPair") [Var 1,Var 2],Comb FuncCall ("WUI","wPair") [Var 3,Var 4]]])),Func ("WUI","w4Tuple._#lambda27") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","(,)") [TVar 786,TVar 787],TCons ("Prelude","(,)") [TVar 788,TVar 789]]) (TCons ("Prelude","(,,,)") [TVar 786,TVar 787,TVar 788,TVar 789])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 2) [Branch (Pattern ("Prelude","(,)") [4,5]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [6,7]) (Comb ConsCall ("Prelude","(,,,)") [Var 4,Var 5,Var 6,Var 7])])])])),Func ("WUI","w4Tuple._#lambda28") 1 Private (FuncType (TCons ("Prelude","(,,,)") [TVar 786,TVar 787,TVar 788,TVar 789]) (TCons ("Prelude","(,)") [TCons ("Prelude","(,)") [TVar 786,TVar 787],TCons ("Prelude","(,)") [TVar 788,TVar 789]])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,,,)") [2,3,4,5]) (Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude","(,)") [Var 2,Var 3],Comb ConsCall ("Prelude","(,)") [Var 4,Var 5]])])),Func ("WUI","w5Tuple") 5 Public (FuncType (TCons ("WUI","WuiSpec") [TVar 0]) (FuncType (TCons ("WUI","WuiSpec") [TVar 1]) (FuncType (TCons ("WUI","WuiSpec") [TVar 2]) (FuncType (TCons ("WUI","WuiSpec") [TVar 3]) (FuncType (TCons ("WUI","WuiSpec") [TVar 4]) (TCons ("WUI","WuiSpec") [TCons ("Prelude","(,,,,)") [TVar 0,TVar 1,TVar 2,TVar 3,TVar 4]])))))) (Rule [1,2,3,4,5] (Comb FuncCall ("WUI","transformWSpec") [Comb ConsCall ("Prelude","(,)") [Comb (FuncPartCall 1) ("WUI","w5Tuple._#lambda29") [],Comb (FuncPartCall 1) ("WUI","w5Tuple._#lambda30") []],Comb FuncCall ("WUI","wJoinTuple") [Comb FuncCall ("WUI","wTriple") [Var 1,Var 2,Var 3],Comb FuncCall ("WUI","wPair") [Var 4,Var 5]]])),Func ("WUI","w5Tuple._#lambda29") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","(,,)") [TVar 814,TVar 815,TVar 816],TCons ("Prelude","(,)") [TVar 817,TVar 818]]) (TCons ("Prelude","(,,,,)") [TVar 814,TVar 815,TVar 816,TVar 817,TVar 818])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 2) [Branch (Pattern ("Prelude","(,,)") [4,5,6]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [7,8]) (Comb ConsCall ("Prelude","(,,,,)") [Var 4,Var 5,Var 6,Var 7,Var 8])])])])),Func ("WUI","w5Tuple._#lambda30") 1 Private (FuncType (TCons ("Prelude","(,,,,)") [TVar 814,TVar 815,TVar 816,TVar 817,TVar 818]) (TCons ("Prelude","(,)") [TCons ("Prelude","(,,)") [TVar 814,TVar 815,TVar 816],TCons ("Prelude","(,)") [TVar 817,TVar 818]])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,,,,)") [2,3,4,5,6]) (Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude","(,,)") [Var 2,Var 3,Var 4],Comb ConsCall ("Prelude","(,)") [Var 5,Var 6]])])),Func ("WUI","w6Tuple") 6 Public (FuncType (TCons ("WUI","WuiSpec") [TVar 0]) (FuncType (TCons ("WUI","WuiSpec") [TVar 1]) (FuncType (TCons ("WUI","WuiSpec") [TVar 2]) (FuncType (TCons ("WUI","WuiSpec") [TVar 3]) (FuncType (TCons ("WUI","WuiSpec") [TVar 4]) (FuncType (TCons ("WUI","WuiSpec") [TVar 5]) (TCons ("WUI","WuiSpec") [TCons ("Prelude","(,,,,,)") [TVar 0,TVar 1,TVar 2,TVar 3,TVar 4,TVar 5]]))))))) (Rule [1,2,3,4,5,6] (Comb FuncCall ("WUI","transformWSpec") [Comb ConsCall ("Prelude","(,)") [Comb (FuncPartCall 1) ("WUI","w6Tuple._#lambda31") [],Comb (FuncPartCall 1) ("WUI","w6Tuple._#lambda32") []],Comb FuncCall ("WUI","wJoinTuple") [Comb FuncCall ("WUI","wTriple") [Var 1,Var 2,Var 3],Comb FuncCall ("WUI","wTriple") [Var 4,Var 5,Var 6]]])),Func ("WUI","w6Tuple._#lambda31") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","(,,)") [TVar 847,TVar 848,TVar 849],TCons ("Prelude","(,,)") [TVar 850,TVar 851,TVar 852]]) (TCons ("Prelude","(,,,,,)") [TVar 847,TVar 848,TVar 849,TVar 850,TVar 851,TVar 852])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 2) [Branch (Pattern ("Prelude","(,,)") [4,5,6]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,,)") [7,8,9]) (Comb ConsCall ("Prelude","(,,,,,)") [Var 4,Var 5,Var 6,Var 7,Var 8,Var 9])])])])),Func ("WUI","w6Tuple._#lambda32") 1 Private (FuncType (TCons ("Prelude","(,,,,,)") [TVar 847,TVar 848,TVar 849,TVar 850,TVar 851,TVar 852]) (TCons ("Prelude","(,)") [TCons ("Prelude","(,,)") [TVar 847,TVar 848,TVar 849],TCons ("Prelude","(,,)") [TVar 850,TVar 851,TVar 852]])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,,,,,)") [2,3,4,5,6,7]) (Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude","(,,)") [Var 2,Var 3,Var 4],Comb ConsCall ("Prelude","(,,)") [Var 5,Var 6,Var 7]])])),Func ("WUI","w7Tuple") 7 Public (FuncType (TCons ("WUI","WuiSpec") [TVar 0]) (FuncType (TCons ("WUI","WuiSpec") [TVar 1]) (FuncType (TCons ("WUI","WuiSpec") [TVar 2]) (FuncType (TCons ("WUI","WuiSpec") [TVar 3]) (FuncType (TCons ("WUI","WuiSpec") [TVar 4]) (FuncType (TCons ("WUI","WuiSpec") [TVar 5]) (FuncType (TCons ("WUI","WuiSpec") [TVar 6]) (TCons ("WUI","WuiSpec") [TCons ("Prelude","(,,,,,,)") [TVar 0,TVar 1,TVar 2,TVar 3,TVar 4,TVar 5,TVar 6]])))))))) (Rule [1,2,3,4,5,6,7] (Comb FuncCall ("WUI","transformWSpec") [Comb ConsCall ("Prelude","(,)") [Comb (FuncPartCall 1) ("WUI","w7Tuple._#lambda33") [],Comb (FuncPartCall 1) ("WUI","w7Tuple._#lambda34") []],Comb FuncCall ("WUI","wJoinTuple") [Comb FuncCall ("WUI","w4Tuple") [Var 1,Var 2,Var 3,Var 4],Comb FuncCall ("WUI","wTriple") [Var 5,Var 6,Var 7]]])),Func ("WUI","w7Tuple._#lambda33") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","(,,,)") [TVar 885,TVar 886,TVar 887,TVar 888],TCons ("Prelude","(,,)") [TVar 889,TVar 890,TVar 891]]) (TCons ("Prelude","(,,,,,,)") [TVar 885,TVar 886,TVar 887,TVar 888,TVar 889,TVar 890,TVar 891])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 2) [Branch (Pattern ("Prelude","(,,,)") [4,5,6,7]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,,)") [8,9,10]) (Comb ConsCall ("Prelude","(,,,,,,)") [Var 4,Var 5,Var 6,Var 7,Var 8,Var 9,Var 10])])])])),Func ("WUI","w7Tuple._#lambda34") 1 Private (FuncType (TCons ("Prelude","(,,,,,,)") [TVar 885,TVar 886,TVar 887,TVar 888,TVar 889,TVar 890,TVar 891]) (TCons ("Prelude","(,)") [TCons ("Prelude","(,,,)") [TVar 885,TVar 886,TVar 887,TVar 888],TCons ("Prelude","(,,)") [TVar 889,TVar 890,TVar 891]])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,,,,,,)") [2,3,4,5,6,7,8]) (Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude","(,,,)") [Var 2,Var 3,Var 4,Var 5],Comb ConsCall ("Prelude","(,,)") [Var 6,Var 7,Var 8]])])),Func ("WUI","w8Tuple") 8 Public (FuncType (TCons ("WUI","WuiSpec") [TVar 0]) (FuncType (TCons ("WUI","WuiSpec") [TVar 1]) (FuncType (TCons ("WUI","WuiSpec") [TVar 2]) (FuncType (TCons ("WUI","WuiSpec") [TVar 3]) (FuncType (TCons ("WUI","WuiSpec") [TVar 4]) (FuncType (TCons ("WUI","WuiSpec") [TVar 5]) (FuncType (TCons ("WUI","WuiSpec") [TVar 6]) (FuncType (TCons ("WUI","WuiSpec") [TVar 7]) (TCons ("WUI","WuiSpec") [TCons ("Prelude","(,,,,,,,)") [TVar 0,TVar 1,TVar 2,TVar 3,TVar 4,TVar 5,TVar 6,TVar 7]]))))))))) (Rule [1,2,3,4,5,6,7,8] (Comb FuncCall ("WUI","transformWSpec") [Comb ConsCall ("Prelude","(,)") [Comb (FuncPartCall 1) ("WUI","w8Tuple._#lambda35") [],Comb (FuncPartCall 1) ("WUI","w8Tuple._#lambda36") []],Comb FuncCall ("WUI","wJoinTuple") [Comb FuncCall ("WUI","w4Tuple") [Var 1,Var 2,Var 3,Var 4],Comb FuncCall ("WUI","w4Tuple") [Var 5,Var 6,Var 7,Var 8]]])),Func ("WUI","w8Tuple._#lambda35") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","(,,,)") [TVar 928,TVar 929,TVar 930,TVar 931],TCons ("Prelude","(,,,)") [TVar 932,TVar 933,TVar 934,TVar 935]]) (TCons ("Prelude","(,,,,,,,)") [TVar 928,TVar 929,TVar 930,TVar 931,TVar 932,TVar 933,TVar 934,TVar 935])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 2) [Branch (Pattern ("Prelude","(,,,)") [4,5,6,7]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,,,)") [8,9,10,11]) (Comb ConsCall ("Prelude","(,,,,,,,)") [Var 4,Var 5,Var 6,Var 7,Var 8,Var 9,Var 10,Var 11])])])])),Func ("WUI","w8Tuple._#lambda36") 1 Private (FuncType (TCons ("Prelude","(,,,,,,,)") [TVar 928,TVar 929,TVar 930,TVar 931,TVar 932,TVar 933,TVar 934,TVar 935]) (TCons ("Prelude","(,)") [TCons ("Prelude","(,,,)") [TVar 928,TVar 929,TVar 930,TVar 931],TCons ("Prelude","(,,,)") [TVar 932,TVar 933,TVar 934,TVar 935]])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,,,,,,,)") [2,3,4,5,6,7,8,9]) (Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude","(,,,)") [Var 2,Var 3,Var 4,Var 5],Comb ConsCall ("Prelude","(,,,)") [Var 6,Var 7,Var 8,Var 9]])])),Func ("WUI","w9Tuple") 9 Public (FuncType (TCons ("WUI","WuiSpec") [TVar 0]) (FuncType (TCons ("WUI","WuiSpec") [TVar 1]) (FuncType (TCons ("WUI","WuiSpec") [TVar 2]) (FuncType (TCons ("WUI","WuiSpec") [TVar 3]) (FuncType (TCons ("WUI","WuiSpec") [TVar 4]) (FuncType (TCons ("WUI","WuiSpec") [TVar 5]) (FuncType (TCons ("WUI","WuiSpec") [TVar 6]) (FuncType (TCons ("WUI","WuiSpec") [TVar 7]) (FuncType (TCons ("WUI","WuiSpec") [TVar 8]) (TCons ("WUI","WuiSpec") [TCons ("Prelude","(,,,,,,,,)") [TVar 0,TVar 1,TVar 2,TVar 3,TVar 4,TVar 5,TVar 6,TVar 7,TVar 8]])))))))))) (Rule [1,2,3,4,5,6,7,8,9] (Comb FuncCall ("WUI","transformWSpec") [Comb ConsCall ("Prelude","(,)") [Comb (FuncPartCall 1) ("WUI","w9Tuple._#lambda37") [],Comb (FuncPartCall 1) ("WUI","w9Tuple._#lambda38") []],Comb FuncCall ("WUI","wJoinTuple") [Comb FuncCall ("WUI","w5Tuple") [Var 1,Var 2,Var 3,Var 4,Var 5],Comb FuncCall ("WUI","w4Tuple") [Var 6,Var 7,Var 8,Var 9]]])),Func ("WUI","w9Tuple._#lambda37") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","(,,,,)") [TVar 976,TVar 977,TVar 978,TVar 979,TVar 980],TCons ("Prelude","(,,,)") [TVar 981,TVar 982,TVar 983,TVar 984]]) (TCons ("Prelude","(,,,,,,,,)") [TVar 976,TVar 977,TVar 978,TVar 979,TVar 980,TVar 981,TVar 982,TVar 983,TVar 984])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 2) [Branch (Pattern ("Prelude","(,,,,)") [4,5,6,7,8]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,,,)") [9,10,11,12]) (Comb ConsCall ("Prelude","(,,,,,,,,)") [Var 4,Var 5,Var 6,Var 7,Var 8,Var 9,Var 10,Var 11,Var 12])])])])),Func ("WUI","w9Tuple._#lambda38") 1 Private (FuncType (TCons ("Prelude","(,,,,,,,,)") [TVar 976,TVar 977,TVar 978,TVar 979,TVar 980,TVar 981,TVar 982,TVar 983,TVar 984]) (TCons ("Prelude","(,)") [TCons ("Prelude","(,,,,)") [TVar 976,TVar 977,TVar 978,TVar 979,TVar 980],TCons ("Prelude","(,,,)") [TVar 981,TVar 982,TVar 983,TVar 984]])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,,,,,,,,)") [2,3,4,5,6,7,8,9,10]) (Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude","(,,,,)") [Var 2,Var 3,Var 4,Var 5,Var 6],Comb ConsCall ("Prelude","(,,,)") [Var 7,Var 8,Var 9,Var 10]])])),Func ("WUI","w10Tuple") 10 Public (FuncType (TCons ("WUI","WuiSpec") [TVar 0]) (FuncType (TCons ("WUI","WuiSpec") [TVar 1]) (FuncType (TCons ("WUI","WuiSpec") [TVar 2]) (FuncType (TCons ("WUI","WuiSpec") [TVar 3]) (FuncType (TCons ("WUI","WuiSpec") [TVar 4]) (FuncType (TCons ("WUI","WuiSpec") [TVar 5]) (FuncType (TCons ("WUI","WuiSpec") [TVar 6]) (FuncType (TCons ("WUI","WuiSpec") [TVar 7]) (FuncType (TCons ("WUI","WuiSpec") [TVar 8]) (FuncType (TCons ("WUI","WuiSpec") [TVar 9]) (TCons ("WUI","WuiSpec") [TCons ("Prelude","(,,,,,,,,,)") [TVar 0,TVar 1,TVar 2,TVar 3,TVar 4,TVar 5,TVar 6,TVar 7,TVar 8,TVar 9]]))))))))))) (Rule [1,2,3,4,5,6,7,8,9,10] (Comb FuncCall ("WUI","transformWSpec") [Comb ConsCall ("Prelude","(,)") [Comb (FuncPartCall 1) ("WUI","w10Tuple._#lambda39") [],Comb (FuncPartCall 1) ("WUI","w10Tuple._#lambda40") []],Comb FuncCall ("WUI","wJoinTuple") [Comb FuncCall ("WUI","w5Tuple") [Var 1,Var 2,Var 3,Var 4,Var 5],Comb FuncCall ("WUI","w5Tuple") [Var 6,Var 7,Var 8,Var 9,Var 10]]])),Func ("WUI","w10Tuple._#lambda39") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","(,,,,)") [TVar 1029,TVar 1030,TVar 1031,TVar 1032,TVar 1033],TCons ("Prelude","(,,,,)") [TVar 1034,TVar 1035,TVar 1036,TVar 1037,TVar 1038]]) (TCons ("Prelude","(,,,,,,,,,)") [TVar 1029,TVar 1030,TVar 1031,TVar 1032,TVar 1033,TVar 1034,TVar 1035,TVar 1036,TVar 1037,TVar 1038])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 2) [Branch (Pattern ("Prelude","(,,,,)") [4,5,6,7,8]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,,,,)") [9,10,11,12,13]) (Comb ConsCall ("Prelude","(,,,,,,,,,)") [Var 4,Var 5,Var 6,Var 7,Var 8,Var 9,Var 10,Var 11,Var 12,Var 13])])])])),Func ("WUI","w10Tuple._#lambda40") 1 Private (FuncType (TCons ("Prelude","(,,,,,,,,,)") [TVar 1029,TVar 1030,TVar 1031,TVar 1032,TVar 1033,TVar 1034,TVar 1035,TVar 1036,TVar 1037,TVar 1038]) (TCons ("Prelude","(,)") [TCons ("Prelude","(,,,,)") [TVar 1029,TVar 1030,TVar 1031,TVar 1032,TVar 1033],TCons ("Prelude","(,,,,)") [TVar 1034,TVar 1035,TVar 1036,TVar 1037,TVar 1038]])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,,,,,,,,,)") [2,3,4,5,6,7,8,9,10,11]) (Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude","(,,,,)") [Var 2,Var 3,Var 4,Var 5,Var 6],Comb ConsCall ("Prelude","(,,,,)") [Var 7,Var 8,Var 9,Var 10,Var 11]])])),Func ("WUI","w11Tuple") 11 Public (FuncType (TCons ("WUI","WuiSpec") [TVar 0]) (FuncType (TCons ("WUI","WuiSpec") [TVar 1]) (FuncType (TCons ("WUI","WuiSpec") [TVar 2]) (FuncType (TCons ("WUI","WuiSpec") [TVar 3]) (FuncType (TCons ("WUI","WuiSpec") [TVar 4]) (FuncType (TCons ("WUI","WuiSpec") [TVar 5]) (FuncType (TCons ("WUI","WuiSpec") [TVar 6]) (FuncType (TCons ("WUI","WuiSpec") [TVar 7]) (FuncType (TCons ("WUI","WuiSpec") [TVar 8]) (FuncType (TCons ("WUI","WuiSpec") [TVar 9]) (FuncType (TCons ("WUI","WuiSpec") [TVar 10]) (TCons ("WUI","WuiSpec") [TCons ("Prelude","(,,,,,,,,,,)") [TVar 0,TVar 1,TVar 2,TVar 3,TVar 4,TVar 5,TVar 6,TVar 7,TVar 8,TVar 9,TVar 10]])))))))))))) (Rule [1,2,3,4,5,6,7,8,9,10,11] (Comb FuncCall ("WUI","transformWSpec") [Comb ConsCall ("Prelude","(,)") [Comb (FuncPartCall 1) ("WUI","w11Tuple._#lambda41") [],Comb (FuncPartCall 1) ("WUI","w11Tuple._#lambda42") []],Comb FuncCall ("WUI","wJoinTuple") [Comb FuncCall ("WUI","w5Tuple") [Var 1,Var 2,Var 3,Var 4,Var 5],Comb FuncCall ("WUI","w6Tuple") [Var 6,Var 7,Var 8,Var 9,Var 10,Var 11]]])),Func ("WUI","w11Tuple._#lambda41") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","(,,,,)") [TVar 1087,TVar 1088,TVar 1089,TVar 1090,TVar 1091],TCons ("Prelude","(,,,,,)") [TVar 1092,TVar 1093,TVar 1094,TVar 1095,TVar 1096,TVar 1097]]) (TCons ("Prelude","(,,,,,,,,,,)") [TVar 1087,TVar 1088,TVar 1089,TVar 1090,TVar 1091,TVar 1092,TVar 1093,TVar 1094,TVar 1095,TVar 1096,TVar 1097])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 2) [Branch (Pattern ("Prelude","(,,,,)") [4,5,6,7,8]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,,,,,)") [9,10,11,12,13,14]) (Comb ConsCall ("Prelude","(,,,,,,,,,,)") [Var 4,Var 5,Var 6,Var 7,Var 8,Var 9,Var 10,Var 11,Var 12,Var 13,Var 14])])])])),Func ("WUI","w11Tuple._#lambda42") 1 Private (FuncType (TCons ("Prelude","(,,,,,,,,,,)") [TVar 1087,TVar 1088,TVar 1089,TVar 1090,TVar 1091,TVar 1092,TVar 1093,TVar 1094,TVar 1095,TVar 1096,TVar 1097]) (TCons ("Prelude","(,)") [TCons ("Prelude","(,,,,)") [TVar 1087,TVar 1088,TVar 1089,TVar 1090,TVar 1091],TCons ("Prelude","(,,,,,)") [TVar 1092,TVar 1093,TVar 1094,TVar 1095,TVar 1096,TVar 1097]])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,,,,,,,,,,)") [2,3,4,5,6,7,8,9,10,11,12]) (Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude","(,,,,)") [Var 2,Var 3,Var 4,Var 5,Var 6],Comb ConsCall ("Prelude","(,,,,,)") [Var 7,Var 8,Var 9,Var 10,Var 11,Var 12]])])),Func ("WUI","w12Tuple") 12 Public (FuncType (TCons ("WUI","WuiSpec") [TVar 0]) (FuncType (TCons ("WUI","WuiSpec") [TVar 1]) (FuncType (TCons ("WUI","WuiSpec") [TVar 2]) (FuncType (TCons ("WUI","WuiSpec") [TVar 3]) (FuncType (TCons ("WUI","WuiSpec") [TVar 4]) (FuncType (TCons ("WUI","WuiSpec") [TVar 5]) (FuncType (TCons ("WUI","WuiSpec") [TVar 6]) (FuncType (TCons ("WUI","WuiSpec") [TVar 7]) (FuncType (TCons ("WUI","WuiSpec") [TVar 8]) (FuncType (TCons ("WUI","WuiSpec") [TVar 9]) (FuncType (TCons ("WUI","WuiSpec") [TVar 10]) (FuncType (TCons ("WUI","WuiSpec") [TVar 11]) (TCons ("WUI","WuiSpec") [TCons ("Prelude","(,,,,,,,,,,,)") [TVar 0,TVar 1,TVar 2,TVar 3,TVar 4,TVar 5,TVar 6,TVar 7,TVar 8,TVar 9,TVar 10,TVar 11]]))))))))))))) (Rule [1,2,3,4,5,6,7,8,9,10,11,12] (Comb FuncCall ("WUI","transformWSpec") [Comb ConsCall ("Prelude","(,)") [Comb (FuncPartCall 1) ("WUI","w12Tuple._#lambda43") [],Comb (FuncPartCall 1) ("WUI","w12Tuple._#lambda44") []],Comb FuncCall ("WUI","wJoinTuple") [Comb FuncCall ("WUI","w6Tuple") [Var 1,Var 2,Var 3,Var 4,Var 5,Var 6],Comb FuncCall ("WUI","w6Tuple") [Var 7,Var 8,Var 9,Var 10,Var 11,Var 12]]])),Func ("WUI","w12Tuple._#lambda43") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","(,,,,,)") [TVar 1150,TVar 1151,TVar 1152,TVar 1153,TVar 1154,TVar 1155],TCons ("Prelude","(,,,,,)") [TVar 1156,TVar 1157,TVar 1158,TVar 1159,TVar 1160,TVar 1161]]) (TCons ("Prelude","(,,,,,,,,,,,)") [TVar 1150,TVar 1151,TVar 1152,TVar 1153,TVar 1154,TVar 1155,TVar 1156,TVar 1157,TVar 1158,TVar 1159,TVar 1160,TVar 1161])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 2) [Branch (Pattern ("Prelude","(,,,,,)") [4,5,6,7,8,9]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,,,,,)") [10,11,12,13,14,15]) (Comb ConsCall ("Prelude","(,,,,,,,,,,,)") [Var 4,Var 5,Var 6,Var 7,Var 8,Var 9,Var 10,Var 11,Var 12,Var 13,Var 14,Var 15])])])])),Func ("WUI","w12Tuple._#lambda44") 1 Private (FuncType (TCons ("Prelude","(,,,,,,,,,,,)") [TVar 1150,TVar 1151,TVar 1152,TVar 1153,TVar 1154,TVar 1155,TVar 1156,TVar 1157,TVar 1158,TVar 1159,TVar 1160,TVar 1161]) (TCons ("Prelude","(,)") [TCons ("Prelude","(,,,,,)") [TVar 1150,TVar 1151,TVar 1152,TVar 1153,TVar 1154,TVar 1155],TCons ("Prelude","(,,,,,)") [TVar 1156,TVar 1157,TVar 1158,TVar 1159,TVar 1160,TVar 1161]])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,,,,,,,,,,,)") [2,3,4,5,6,7,8,9,10,11,12,13]) (Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude","(,,,,,)") [Var 2,Var 3,Var 4,Var 5,Var 6,Var 7],Comb ConsCall ("Prelude","(,,,,,)") [Var 8,Var 9,Var 10,Var 11,Var 12,Var 13]])])),Func ("WUI","wJoinTuple") 2 Public (FuncType (TCons ("WUI","WuiSpec") [TVar 0]) (FuncType (TCons ("WUI","WuiSpec") [TVar 1]) (TCons ("WUI","WuiSpec") [TCons ("Prelude","(,)") [TVar 0,TVar 1]]))) (Rule [1,2] (Case  Flex (Var 1) [Branch (Pattern ("WUI","WuiSpec") [3,4,5]) (Case  Flex (Var 2) [Branch (Pattern ("WUI","WuiSpec") [6,7,8]) (Comb ConsCall ("WUI","WuiSpec") [Comb ConsCall ("Prelude","(,,)") [Comb (FuncPartCall 1) ("WUI","renderTuple") [],Comb FuncCall ("WUI","tupleError") [],Comb (FuncPartCall 1) ("Prelude","const") [Comb ConsCall ("Prelude","True") []]],Comb (FuncPartCall 2) ("WUI","wJoinTuple.showc.247") [Var 3,Var 6,Var 4,Var 7],Comb (FuncPartCall 3) ("WUI","wJoinTuple.readc.247") [Var 5,Var 8,Var 3,Var 6]])])])),Func ("WUI","wJoinTuple.render2joinrender.247") 2 Private (FuncType (FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TVar 0)) (FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TVar 0))) (Rule [1,2] (Case  Flex (Var 2) [Branch (Pattern ("Prelude",":") [3,4]) (Case  Flex (Var 4) [Branch (Pattern ("Prelude",":") [5,6]) (Case  Flex (Var 6) [Branch (Pattern ("Prelude","[]") []) (Let [(7,Comb FuncCall ("WUI","unRenderTuple") [Var 3]),(8,Comb FuncCall ("WUI","unRenderTuple") [Var 5])] (Comb FuncCall ("Prelude","apply") [Var 1,Comb FuncCall ("Prelude","++") [Var 7,Var 8]]))])])])),Func ("WUI","wJoinTuple.showc.247") 6 Private (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 749) (TCons ("Prelude","Bool") [])]) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 751) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 749) (TCons ("Prelude","Bool") [])]) (FuncType (TVar 749) (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]))) (FuncType (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 751) (TCons ("Prelude","Bool") [])]) (FuncType (TVar 751) (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]))) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TVar 0),TVar 1,TVar 2]) (FuncType (TCons ("Prelude","(,)") [TVar 749,TVar 751]) (TCons ("Prelude","(,)") [TVar 0,TCons ("WUI","WuiState") []]))))))) (Rule [1,2,3,4,5,6] (Case  Flex (Var 6) [Branch (Pattern ("Prelude","(,)") [7,8]) (Let [(9,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 3,Var 1],Var 7]),(10,Comb FuncCall ("WUI","wJoinTuple.showc.247._#selFP50#hea") [Var 9]),(11,Comb FuncCall ("WUI","wJoinTuple.showc.247._#selFP51#rta") [Var 9]),(12,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 4,Var 2],Var 8]),(13,Comb FuncCall ("WUI","wJoinTuple.showc.247._#selFP48#heb") [Var 12]),(14,Comb FuncCall ("WUI","wJoinTuple.showc.247._#selFP49#rtb") [Var 12])] (Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("WUI","wJoinTuple.render2joinrender.247") [Comb FuncCall ("WUI","renderOf") [Var 5],Comb ConsCall ("Prelude",":") [Var 10,Comb ConsCall ("Prelude",":") [Var 13,Comb ConsCall ("Prelude","[]") []]]],Comb FuncCall ("WUI","states2state") [Comb ConsCall ("Prelude",":") [Var 11,Comb ConsCall ("Prelude",":") [Var 14,Comb ConsCall ("Prelude","[]") []]]]]))])),Func ("WUI","wJoinTuple.showc.247._#selFP50#hea") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]) (TCons ("HTML","HtmlExp") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 2)])),Func ("WUI","wJoinTuple.showc.247._#selFP51#rta") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]) (TCons ("WUI","WuiState") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 3)])),Func ("WUI","wJoinTuple.showc.247._#selFP48#heb") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]) (TCons ("HTML","HtmlExp") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 2)])),Func ("WUI","wJoinTuple.showc.247._#selFP49#rtb") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]) (TCons ("WUI","WuiState") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 3)])),Func ("WUI","wJoinTuple.readc.247") 7 Private (FuncType (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 749) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (FuncType (TCons ("WUI","WuiState") []) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 749],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]])))) (FuncType (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 751) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (FuncType (TCons ("WUI","WuiState") []) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 751],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]])))) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 749) (TCons ("Prelude","Bool") [])]) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 751) (TCons ("Prelude","Bool") [])]) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TCons ("Prelude","(,)") [TVar 749,TVar 751]) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (FuncType (TCons ("WUI","WuiState") []) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TCons ("Prelude","(,)") [TVar 749,TVar 751]],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]])))))))) (Rule [1,2,3,4,5,6,7] (Case  Flex (Var 5) [Branch (Pattern ("Prelude","(,,)") [8,9,10]) (Let [(11,Comb FuncCall ("WUI","state2states") [Var 7]),(12,Comb FuncCall ("WUI","wJoinTuple.readc.247._#selFP61#ra") [Var 11]),(13,Comb FuncCall ("WUI","wJoinTuple.readc.247._#selFP62#rb") [Var 11]),(14,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 1,Var 3],Var 6],Var 12]),(15,Comb FuncCall ("WUI","wJoinTuple.readc.247._#selFP58#rav") [Var 14]),(16,Comb FuncCall ("WUI","wJoinTuple.readc.247._#selFP59#hea") [Var 14]),(17,Comb FuncCall ("WUI","wJoinTuple.readc.247._#selFP60#rta") [Var 14]),(18,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 2,Var 4],Var 6],Var 13]),(19,Comb FuncCall ("WUI","wJoinTuple.readc.247._#selFP55#rbv") [Var 18]),(20,Comb FuncCall ("WUI","wJoinTuple.readc.247._#selFP56#heb") [Var 18]),(21,Comb FuncCall ("WUI","wJoinTuple.readc.247._#selFP57#rtb") [Var 18]),(22,Comb ConsCall ("Prelude",":") [Var 16,Comb ConsCall ("Prelude",":") [Var 20,Comb ConsCall ("Prelude","[]") []]]),(23,Comb FuncCall ("WUI","states2state") [Comb ConsCall ("Prelude",":") [Var 17,Comb ConsCall ("Prelude",":") [Var 21,Comb ConsCall ("Prelude","[]") []]]]),(24,Comb (FuncPartCall 1) ("WUI","wJoinTuple.render2joinrender.247") [Var 8])] (Case  Rigid (Comb FuncCall ("Prelude","||") [Comb FuncCall ("Prelude","==") [Var 15,Comb ConsCall ("Prelude","Nothing") []],Comb FuncCall ("Prelude","==") [Var 19,Comb ConsCall ("Prelude","Nothing") []]]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude","Nothing") [],Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("Prelude","apply") [Var 24,Var 22],Var 23]]),Branch (Pattern ("Prelude","False") []) (Let [(25,Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("Maybe","fromJust") [Var 15],Comb FuncCall ("Maybe","fromJust") [Var 19]])] (Case  Rigid (Comb FuncCall ("Prelude","apply") [Var 10,Var 25]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude","Just") [Var 25],Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("Prelude","apply") [Var 24,Var 22],Var 23]]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude","Nothing") [],Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("WUI","renderError") [Var 24,Var 9,Var 22],Var 23]])]))]))])),Func ("WUI","wJoinTuple.readc.247._#selFP61#ra") 1 Private (FuncType (TCons ("Prelude","[]") [TCons ("WUI","WuiState") []]) (TCons ("WUI","WuiState") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude",":") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude",":") [4,5]) (Case  Flex (Var 5) [Branch (Pattern ("Prelude","[]") []) (Var 2)])])])),Func ("WUI","wJoinTuple.readc.247._#selFP62#rb") 1 Private (FuncType (TCons ("Prelude","[]") [TCons ("WUI","WuiState") []]) (TCons ("WUI","WuiState") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude",":") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude",":") [4,5]) (Case  Flex (Var 5) [Branch (Pattern ("Prelude","[]") []) (Var 4)])])])),Func ("WUI","wJoinTuple.readc.247._#selFP58#rav") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 749],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]) (TCons ("Prelude","Maybe") [TVar 749])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Var 2)])])),Func ("WUI","wJoinTuple.readc.247._#selFP59#hea") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 749],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]) (TCons ("HTML","HtmlExp") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Var 4)])])),Func ("WUI","wJoinTuple.readc.247._#selFP60#rta") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 749],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]) (TCons ("WUI","WuiState") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Var 5)])])),Func ("WUI","wJoinTuple.readc.247._#selFP55#rbv") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 751],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]) (TCons ("Prelude","Maybe") [TVar 751])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Var 2)])])),Func ("WUI","wJoinTuple.readc.247._#selFP56#heb") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 751],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]) (TCons ("HTML","HtmlExp") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Var 4)])])),Func ("WUI","wJoinTuple.readc.247._#selFP57#rtb") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 751],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]) (TCons ("WUI","WuiState") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Var 5)])])),Func ("WUI","wList") 1 Public (FuncType (TCons ("WUI","WuiSpec") [TVar 0]) (TCons ("WUI","WuiSpec") [TCons ("Prelude","[]") [TVar 0]])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("WUI","WuiSpec") [2,3,4]) (Comb ConsCall ("WUI","WuiSpec") [Comb ConsCall ("Prelude","(,,)") [Comb (FuncPartCall 1) ("WUI","renderList") [],Comb ConsCall ("Prelude",":") [Lit (Charc  'I'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude",":") [Lit (Charc  'g'),Comb ConsCall ("Prelude",":") [Lit (Charc  'a'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude",":") [Lit (Charc  ' '),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  's'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  ':'),Comb ConsCall ("Prelude","[]") []]]]]]]]]]]]]],Comb (FuncPartCall 1) ("Prelude","const") [Comb ConsCall ("Prelude","True") []]],Comb (FuncPartCall 2) ("WUI","wList._#lambda45") [Var 2,Var 3],Comb (FuncPartCall 3) ("WUI","wList._#lambda46") [Var 4,Var 2]])])),Func ("WUI","wList.listWidget.270") 2 Private (FuncType (FuncType (TVar 0) (TVar 1)) (FuncType (TCons ("Prelude","(,)") [TVar 0,TCons ("Prelude","[]") [TCons ("WUI","WuiState") []]]) (TCons ("Prelude","(,)") [TVar 1,TCons ("WUI","WuiState") []]))) (Rule [1,2] (Case  Flex (Var 2) [Branch (Pattern ("Prelude","(,)") [3,4]) (Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("Prelude","apply") [Var 1,Var 3],Comb FuncCall ("WUI","states2state") [Var 4]])])),Func ("WUI","wList._#lambda45") 4 Private (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 1194) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 1194) (TCons ("Prelude","Bool") [])]) (FuncType (TVar 1194) (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]))) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TCons ("Prelude","[]") [TVar 1194]) (TCons ("Prelude","Bool") [])]) (FuncType (TCons ("Prelude","[]") [TVar 1194]) (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]))))) (Rule [1,2,3,4] (Comb FuncCall ("WUI","wList.listWidget.270") [Comb FuncCall ("WUI","renderOf") [Var 3],Comb FuncCall ("Prelude","unzip") [Comb FuncCall ("Prelude","map") [Comb FuncCall ("Prelude","apply") [Var 2,Var 1],Var 4]]])),Func ("WUI","wList._#lambda46") 5 Private (FuncType (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 1194) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (FuncType (TCons ("WUI","WuiState") []) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 1194],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]])))) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 1194) (TCons ("Prelude","Bool") [])]) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TCons ("Prelude","[]") [TVar 1194]) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (FuncType (TCons ("WUI","WuiState") []) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TCons ("Prelude","[]") [TVar 1194]],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]])))))) (Rule [1,2,3,4,5] (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,,)") [6,7,8]) (Let [(9,Comb FuncCall ("Prelude","map") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 1,Var 2],Var 4],Comb FuncCall ("WUI","state2states") [Var 5]])] (Case  Rigid (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","elem") [Comb ConsCall ("Prelude","Nothing") []],Comb FuncCall ("Prelude","map") [Comb (FuncPartCall 1) ("Prelude","fst") [],Var 9]]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude","Nothing") [],Comb FuncCall ("WUI","wList.listWidget.270") [Var 6,Comb FuncCall ("Prelude","unzip") [Comb FuncCall ("Prelude","map") [Comb (FuncPartCall 1) ("Prelude","snd") [],Var 9]]]]),Branch (Pattern ("Prelude","False") []) (Let [(10,Comb FuncCall ("Prelude","map") [Comb FuncCall ("Prelude",".") [Comb (FuncPartCall 1) ("Maybe","fromJust") [],Comb (FuncPartCall 1) ("Prelude","fst") []],Var 9])] (Case  Rigid (Comb FuncCall ("Prelude","apply") [Var 8,Var 10]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude","Just") [Var 10],Comb FuncCall ("WUI","wList.listWidget.270") [Var 6,Comb FuncCall ("Prelude","unzip") [Comb FuncCall ("Prelude","map") [Comb (FuncPartCall 1) ("Prelude","snd") [],Var 9]]]]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude","Nothing") [],Comb FuncCall ("WUI","wList.listWidget.270") [Comb (FuncPartCall 1) ("WUI","renderError") [Var 6,Var 7],Comb FuncCall ("Prelude","unzip") [Comb FuncCall ("Prelude","map") [Comb (FuncPartCall 1) ("Prelude","snd") [],Var 9]]]])]))]))])),Func ("WUI","wListWithHeadings") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (FuncType (TCons ("WUI","WuiSpec") [TVar 0]) (TCons ("WUI","WuiSpec") [TCons ("Prelude","[]") [TVar 0]]))) (Rule [1,2] (Comb FuncCall ("WUI","withRendering") [Comb FuncCall ("WUI","wList") [Var 2],Comb (FuncPartCall 1) ("WUI","wListWithHeadings.renderHeadings.280") [Var 1]])),Func ("WUI","wListWithHeadings.renderHeadings.280") 2 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []))) (Rule [1,2] (Comb FuncCall ("HTML","addHeadings") [Comb FuncCall ("WUI","renderList") [Var 2],Comb FuncCall ("Prelude","map") [Comb (FuncPartCall 1) ("WUI","wListWithHeadings.renderHeadings.280._#lambda47") [],Var 1]])),Func ("WUI","wListWithHeadings.renderHeadings.280._#lambda47") 1 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []])) (Rule [1] (Comb ConsCall ("Prelude",":") [Comb FuncCall ("HTML","htxt") [Var 1],Comb ConsCall ("Prelude","[]") []])),Func ("WUI","wHList") 1 Public (FuncType (TCons ("WUI","WuiSpec") [TVar 0]) (TCons ("WUI","WuiSpec") [TCons ("Prelude","[]") [TVar 0]])) (Rule [1] (Comb FuncCall ("WUI","withRendering") [Comb FuncCall ("WUI","wList") [Var 1],Comb (FuncPartCall 1) ("WUI","renderTuple") []])),Func ("WUI","wMatrix") 1 Public (FuncType (TCons ("WUI","WuiSpec") [TVar 0]) (TCons ("WUI","WuiSpec") [TCons ("Prelude","[]") [TCons ("Prelude","[]") [TVar 0]]])) (Rule [1] (Comb FuncCall ("WUI","wList") [Comb FuncCall ("WUI","wHList") [Var 1]])),Func ("WUI","wMaybe") 3 Public (FuncType (TCons ("WUI","WuiSpec") [TCons ("Prelude","Bool") []]) (FuncType (TCons ("WUI","WuiSpec") [TVar 0]) (FuncType (TVar 0) (TCons ("WUI","WuiSpec") [TCons ("Prelude","Maybe") [TVar 0]])))) (Rule [1,2,3] (Case  Flex (Var 1) [Branch (Pattern ("WUI","WuiSpec") [4,5,6]) (Case  Flex (Var 2) [Branch (Pattern ("WUI","WuiSpec") [7,8,9]) (Comb ConsCall ("WUI","WuiSpec") [Comb ConsCall ("Prelude","(,,)") [Comb (FuncPartCall 1) ("WUI","renderTuple") [],Comb FuncCall ("WUI","tupleError") [],Comb (FuncPartCall 1) ("Prelude","const") [Comb ConsCall ("Prelude","True") []]],Comb (FuncPartCall 2) ("WUI","wMaybe._#lambda48") [Var 3,Var 7,Var 4,Var 8,Var 5],Comb (FuncPartCall 3) ("WUI","wMaybe._#lambda49") [Var 7,Var 4,Var 9,Var 6]])])])),Func ("WUI","wMaybe._#lambda48") 7 Private (FuncType (TVar 1349) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 1349) (TCons ("Prelude","Bool") [])]) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TCons ("Prelude","Bool") []) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 1349) (TCons ("Prelude","Bool") [])]) (FuncType (TVar 1349) (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]))) (FuncType (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TCons ("Prelude","Bool") []) (TCons ("Prelude","Bool") [])]) (FuncType (TCons ("Prelude","Bool") []) (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]))) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TCons ("Prelude","Maybe") [TVar 1349]) (TCons ("Prelude","Bool") [])]) (FuncType (TCons ("Prelude","Maybe") [TVar 1349]) (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []])))))))) (Rule [1,2,3,4,5,6,7] (Let [(8,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 5,Var 3],Comb FuncCall ("Prelude","/=") [Var 7,Comb ConsCall ("Prelude","Nothing") []]]),(9,Comb FuncCall ("WUI","wMaybe._#lambda48._#selFP67#heb") [Var 8]),(10,Comb FuncCall ("WUI","wMaybe._#lambda48._#selFP68#rtb") [Var 8]),(11,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 4,Var 2],Comb FuncCall ("Prelude","maybe") [Var 1,Comb (FuncPartCall 1) ("Prelude","id") [],Var 7]]),(12,Comb FuncCall ("WUI","wMaybe._#lambda48._#selFP65#hea") [Var 11]),(13,Comb FuncCall ("WUI","wMaybe._#lambda48._#selFP66#rta") [Var 11])] (Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("WUI","renderOf") [Var 6],Comb ConsCall ("Prelude",":") [Var 9,Comb ConsCall ("Prelude",":") [Var 12,Comb ConsCall ("Prelude","[]") []]]],Comb FuncCall ("WUI","states2state") [Comb ConsCall ("Prelude",":") [Var 10,Comb ConsCall ("Prelude",":") [Var 13,Comb ConsCall ("Prelude","[]") []]]]]))),Func ("WUI","wMaybe._#lambda48._#selFP67#heb") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]) (TCons ("HTML","HtmlExp") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 2)])),Func ("WUI","wMaybe._#lambda48._#selFP68#rtb") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]) (TCons ("WUI","WuiState") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 3)])),Func ("WUI","wMaybe._#lambda48._#selFP65#hea") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]) (TCons ("HTML","HtmlExp") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 2)])),Func ("WUI","wMaybe._#lambda48._#selFP66#rta") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]) (TCons ("WUI","WuiState") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 3)])),Func ("WUI","wMaybe._#lambda49") 7 Private (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 1349) (TCons ("Prelude","Bool") [])]) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TCons ("Prelude","Bool") []) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 1349) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (FuncType (TCons ("WUI","WuiState") []) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 1349],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]])))) (FuncType (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TCons ("Prelude","Bool") []) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (FuncType (TCons ("WUI","WuiState") []) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TCons ("Prelude","Bool") []],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]])))) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TCons ("Prelude","Maybe") [TVar 1349]) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (FuncType (TCons ("WUI","WuiState") []) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TCons ("Prelude","Maybe") [TVar 1349]],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]])))))))) (Rule [1,2,3,4,5,6,7] (Case  Flex (Var 5) [Branch (Pattern ("Prelude","(,,)") [8,9,10]) (Let [(11,Comb FuncCall ("WUI","state2states") [Var 7]),(12,Comb FuncCall ("WUI","wMaybe._#lambda49._#selFP78#rb") [Var 11]),(13,Comb FuncCall ("WUI","wMaybe._#lambda49._#selFP79#ra") [Var 11]),(14,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 4,Var 2],Var 6],Var 12]),(15,Comb FuncCall ("WUI","wMaybe._#lambda49._#selFP75#rbv") [Var 14]),(16,Comb FuncCall ("WUI","wMaybe._#lambda49._#selFP76#heb") [Var 14]),(17,Comb FuncCall ("WUI","wMaybe._#lambda49._#selFP77#rtb") [Var 14]),(18,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 3,Var 1],Var 6],Var 13]),(19,Comb FuncCall ("WUI","wMaybe._#lambda49._#selFP72#rav") [Var 18]),(20,Comb FuncCall ("WUI","wMaybe._#lambda49._#selFP73#hea") [Var 18]),(21,Comb FuncCall ("WUI","wMaybe._#lambda49._#selFP74#rta") [Var 18]),(22,Comb ConsCall ("Prelude",":") [Var 16,Comb ConsCall ("Prelude",":") [Var 20,Comb ConsCall ("Prelude","[]") []]]),(23,Comb FuncCall ("WUI","states2state") [Comb ConsCall ("Prelude",":") [Var 17,Comb ConsCall ("Prelude",":") [Var 21,Comb ConsCall ("Prelude","[]") []]]])] (Case  Rigid (Comb FuncCall ("Prelude","||") [Comb FuncCall ("Prelude","==") [Var 15,Comb ConsCall ("Prelude","Nothing") []],Comb FuncCall ("Prelude","==") [Var 19,Comb ConsCall ("Prelude","Nothing") []]]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude","Nothing") [],Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("Prelude","apply") [Var 8,Var 22],Var 23]]),Branch (Pattern ("Prelude","False") []) (Let [(24,Case  Rigid (Comb FuncCall ("Maybe","fromJust") [Var 15]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude","Just") [Comb FuncCall ("Maybe","fromJust") [Var 19]]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","Nothing") [])])] (Case  Rigid (Comb FuncCall ("Prelude","apply") [Var 10,Var 24]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude","Just") [Var 24],Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("Prelude","apply") [Var 8,Var 22],Var 23]]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude","Nothing") [],Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("WUI","renderError") [Var 8,Var 9,Var 22],Var 23]])]))]))])),Func ("WUI","wMaybe._#lambda49._#selFP78#rb") 1 Private (FuncType (TCons ("Prelude","[]") [TCons ("WUI","WuiState") []]) (TCons ("WUI","WuiState") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude",":") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude",":") [4,5]) (Case  Flex (Var 5) [Branch (Pattern ("Prelude","[]") []) (Var 2)])])])),Func ("WUI","wMaybe._#lambda49._#selFP79#ra") 1 Private (FuncType (TCons ("Prelude","[]") [TCons ("WUI","WuiState") []]) (TCons ("WUI","WuiState") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude",":") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude",":") [4,5]) (Case  Flex (Var 5) [Branch (Pattern ("Prelude","[]") []) (Var 4)])])])),Func ("WUI","wMaybe._#lambda49._#selFP75#rbv") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TCons ("Prelude","Bool") []],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]) (TCons ("Prelude","Maybe") [TCons ("Prelude","Bool") []])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Var 2)])])),Func ("WUI","wMaybe._#lambda49._#selFP76#heb") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TCons ("Prelude","Bool") []],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]) (TCons ("HTML","HtmlExp") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Var 4)])])),Func ("WUI","wMaybe._#lambda49._#selFP77#rtb") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TCons ("Prelude","Bool") []],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]) (TCons ("WUI","WuiState") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Var 5)])])),Func ("WUI","wMaybe._#lambda49._#selFP72#rav") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 1349],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]) (TCons ("Prelude","Maybe") [TVar 1349])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Var 2)])])),Func ("WUI","wMaybe._#lambda49._#selFP73#hea") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 1349],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]) (TCons ("HTML","HtmlExp") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Var 4)])])),Func ("WUI","wMaybe._#lambda49._#selFP74#rta") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 1349],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]) (TCons ("WUI","WuiState") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Var 5)])])),Func ("WUI","wCheckMaybe") 2 Public (FuncType (TCons ("WUI","WuiSpec") [TVar 0]) (FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (FuncType (TVar 0) (TCons ("WUI","WuiSpec") [TCons ("Prelude","Maybe") [TVar 0]])))) (Rule [1,2] (Comb (FuncPartCall 1) ("WUI","wMaybe") [Comb FuncCall ("WUI","wCheckBool") [Var 2],Var 1])),Func ("WUI","wRadioMaybe") 3 Public (FuncType (TCons ("WUI","WuiSpec") [TVar 0]) (FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (FuncType (TVar 0) (TCons ("WUI","WuiSpec") [TCons ("Prelude","Maybe") [TVar 0]]))))) (Rule [1,2,3] (Let [(4,Comb FuncCall ("WUI","wRadioSelect") [Comb (FuncPartCall 1) ("WUI","wRadioMaybe._#lambda50") [Var 3,Var 2],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","False") [],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","True") [],Comb ConsCall ("Prelude","[]") []]]])] (Comb (FuncPartCall 1) ("WUI","wMaybe") [Var 4,Var 1]))),Func ("WUI","wRadioMaybe._#lambda50") 3 Private (FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (FuncType (TCons ("Prelude","Bool") []) (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []])))) (Rule [1,2,3] (Case  Rigid (Var 3) [Branch (Pattern ("Prelude","True") []) (Var 1),Branch (Pattern ("Prelude","False") []) (Var 2)])),Func ("WUI","wEither") 2 Public (FuncType (TCons ("WUI","WuiSpec") [TVar 0]) (FuncType (TCons ("WUI","WuiSpec") [TVar 1]) (TCons ("WUI","WuiSpec") [TCons ("Prelude","Either") [TVar 0,TVar 1]]))) (Rule [1,2] (Case  Flex (Var 1) [Branch (Pattern ("WUI","WuiSpec") [3,4,5]) (Case  Flex (Var 2) [Branch (Pattern ("WUI","WuiSpec") [6,7,8]) (Comb ConsCall ("WUI","WuiSpec") [Comb ConsCall ("Prelude","(,,)") [Comb (FuncPartCall 1) ("Prelude","head") [],Comb ConsCall ("Prelude",":") [Lit (Charc  '?'),Comb ConsCall ("Prelude","[]") []],Comb (FuncPartCall 1) ("Prelude","const") [Comb ConsCall ("Prelude","True") []]],Comb (FuncPartCall 2) ("WUI","wEither.showEither.310") [Var 3,Var 6,Var 4,Var 7],Comb (FuncPartCall 3) ("WUI","wEither.readEither.310") [Var 5,Var 8,Var 3,Var 6]])])])),Func ("WUI","wEither.showEither.310") 6 Private (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 1446) (TCons ("Prelude","Bool") [])]) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 1445) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 1446) (TCons ("Prelude","Bool") [])]) (FuncType (TVar 1446) (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]))) (FuncType (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 1445) (TCons ("Prelude","Bool") [])]) (FuncType (TVar 1445) (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]))) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TVar 0),TVar 1,TVar 2]) (FuncType (TCons ("Prelude","Either") [TVar 1446,TVar 1445]) (TCons ("Prelude","(,)") [TVar 0,TCons ("WUI","WuiState") []]))))))) (Rule [1,2,3,4,5,6] (Case  Flex (Var 6) [Branch (Pattern ("Prelude","Left") [7]) (Let [(8,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 3,Var 1],Var 7]),(9,Comb FuncCall ("WUI","wEither.showEither.310._#selFP81#hea") [Var 8]),(10,Comb FuncCall ("WUI","wEither.showEither.310._#selFP82#rta") [Var 8])] (Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("WUI","renderOf") [Var 5],Comb ConsCall ("Prelude",":") [Var 9,Comb ConsCall ("Prelude","[]") []]],Comb FuncCall ("WUI","altstate2state") [Comb ConsCall ("Prelude","(,)") [Lit (Intc  1),Var 10]]])),Branch (Pattern ("Prelude","Right") [11]) (Let [(12,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 4,Var 2],Var 11]),(13,Comb FuncCall ("WUI","wEither.showEither.310._#selFP84#heb") [Var 12]),(14,Comb FuncCall ("WUI","wEither.showEither.310._#selFP85#rtb") [Var 12])] (Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("WUI","renderOf") [Var 5],Comb ConsCall ("Prelude",":") [Var 13,Comb ConsCall ("Prelude","[]") []]],Comb FuncCall ("WUI","altstate2state") [Comb ConsCall ("Prelude","(,)") [Lit (Intc  2),Var 14]]]))])),Func ("WUI","wEither.showEither.310._#selFP81#hea") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]) (TCons ("HTML","HtmlExp") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 2)])),Func ("WUI","wEither.showEither.310._#selFP82#rta") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]) (TCons ("WUI","WuiState") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 3)])),Func ("WUI","wEither.showEither.310._#selFP84#heb") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]) (TCons ("HTML","HtmlExp") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 2)])),Func ("WUI","wEither.showEither.310._#selFP85#rtb") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]) (TCons ("WUI","WuiState") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 3)])),Func ("WUI","wEither.readEither.310") 7 Private (FuncType (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 1446) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (FuncType (TCons ("WUI","WuiState") []) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 1446],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]])))) (FuncType (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 1445) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (FuncType (TCons ("WUI","WuiState") []) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 1445],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]])))) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 1446) (TCons ("Prelude","Bool") [])]) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 1445) (TCons ("Prelude","Bool") [])]) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TCons ("Prelude","Either") [TVar 1446,TVar 1445]) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (FuncType (TCons ("WUI","WuiState") []) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TCons ("Prelude","Either") [TVar 1446,TVar 1445]],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]])))))))) (Rule [1,2,3,4,5,6,7] (Case  Flex (Var 5) [Branch (Pattern ("Prelude","(,,)") [8,9,10]) (Let [(11,Comb FuncCall ("WUI","state2altstate") [Var 7]),(12,Comb FuncCall ("WUI","wEither.readEither.310._#selFP95#altindex") [Var 11]),(13,Comb FuncCall ("WUI","wEither.readEither.310._#selFP96#rab") [Var 11]),(14,Var 12)] (Case  Rigid (Comb FuncCall ("Prelude","==") [Var 14,Lit (Intc  1)]) [Branch (Pattern ("Prelude","True") []) (Let [(15,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 1,Var 3],Var 6],Var 13]),(16,Comb FuncCall ("WUI","wEither.readEither.310._#selFP88#rv") [Var 15]),(17,Comb FuncCall ("WUI","wEither.readEither.310._#selFP89#he") [Var 15]),(18,Comb FuncCall ("WUI","wEither.readEither.310._#selFP90#rst") [Var 15])] (Comb FuncCall ("WUI","wEither.readEither.310.checkValue.322") [Var 9,Var 10,Var 8,Comb FuncCall ("Prelude","==") [Var 16,Comb ConsCall ("Prelude","Nothing") []],Comb ConsCall ("Prelude","Left") [Comb FuncCall ("Maybe","fromJust") [Var 16]],Var 17,Comb FuncCall ("WUI","altstate2state") [Comb ConsCall ("Prelude","(,)") [Lit (Intc  1),Var 18]]])),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Prelude","==") [Var 14,Lit (Intc  2)]) [Branch (Pattern ("Prelude","True") []) (Let [(19,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 2,Var 4],Var 6],Var 13]),(20,Comb FuncCall ("WUI","wEither.readEither.310._#selFP92#rv") [Var 19]),(21,Comb FuncCall ("WUI","wEither.readEither.310._#selFP93#he") [Var 19]),(22,Comb FuncCall ("WUI","wEither.readEither.310._#selFP94#rst") [Var 19])] (Comb FuncCall ("WUI","wEither.readEither.310.checkValue.322") [Var 9,Var 10,Var 8,Comb FuncCall ("Prelude","==") [Var 20,Comb ConsCall ("Prelude","Nothing") []],Comb ConsCall ("Prelude","Right") [Comb FuncCall ("Maybe","fromJust") [Var 20]],Var 21,Comb FuncCall ("WUI","altstate2state") [Comb ConsCall ("Prelude","(,)") [Lit (Intc  2),Var 22]]])),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("Prelude","failed") [])])]))])),Func ("WUI","wEither.readEither.310.checkValue.322") 7 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (FuncType (TCons ("Prelude","Either") [TVar 1446,TVar 1445]) (TCons ("Prelude","Bool") [])) (FuncType (FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") [])) (FuncType (TCons ("Prelude","Bool") []) (FuncType (TCons ("Prelude","Either") [TVar 1446,TVar 1445]) (FuncType (TCons ("HTML","HtmlExp") []) (FuncType (TVar 0) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TCons ("Prelude","Either") [TVar 1446,TVar 1445]],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TVar 0]])))))))) (Rule [1,2,3,4,5,6,7] (Case  Rigid (Var 4) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude","Nothing") [],Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("Prelude","apply") [Var 3,Comb ConsCall ("Prelude",":") [Var 6,Comb ConsCall ("Prelude","[]") []]],Var 7]]),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Prelude","apply") [Var 2,Var 5]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude","Just") [Var 5],Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("Prelude","apply") [Var 3,Comb ConsCall ("Prelude",":") [Var 6,Comb ConsCall ("Prelude","[]") []]],Var 7]]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude","Nothing") [],Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("WUI","renderError") [Var 3,Var 1,Comb ConsCall ("Prelude",":") [Var 6,Comb ConsCall ("Prelude","[]") []]],Var 7]])])])),Func ("WUI","wEither.readEither.310._#selFP95#altindex") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("WUI","WuiState") []]) (TCons ("Prelude","Int") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 2)])),Func ("WUI","wEither.readEither.310._#selFP96#rab") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("WUI","WuiState") []]) (TCons ("WUI","WuiState") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 3)])),Func ("WUI","wEither.readEither.310._#selFP88#rv") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 1446],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]) (TCons ("Prelude","Maybe") [TVar 1446])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Var 2)])])),Func ("WUI","wEither.readEither.310._#selFP89#he") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 1446],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]) (TCons ("HTML","HtmlExp") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Var 4)])])),Func ("WUI","wEither.readEither.310._#selFP90#rst") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 1446],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]) (TCons ("WUI","WuiState") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Var 5)])])),Func ("WUI","wEither.readEither.310._#selFP92#rv") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 1445],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]) (TCons ("Prelude","Maybe") [TVar 1445])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Var 2)])])),Func ("WUI","wEither.readEither.310._#selFP93#he") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 1445],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]) (TCons ("HTML","HtmlExp") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Var 4)])])),Func ("WUI","wEither.readEither.310._#selFP94#rst") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 1445],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]) (TCons ("WUI","WuiState") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Var 5)])])),Func ("WUI","wTree") 1 Public (FuncType (TCons ("WUI","WuiSpec") [TVar 0]) (TCons ("WUI","WuiSpec") [TCons ("WUI","WTree") [TVar 0]])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("WUI","WuiSpec") [2,3,4]) (Comb ConsCall ("WUI","WuiSpec") [Comb ConsCall ("Prelude","(,,)") [Comb (FuncPartCall 1) ("WUI","renderList") [],Comb ConsCall ("Prelude",":") [Lit (Charc  'I'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude",":") [Lit (Charc  'g'),Comb ConsCall ("Prelude",":") [Lit (Charc  'a'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude",":") [Lit (Charc  ' '),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude",":") [Lit (Charc  ':'),Comb ConsCall ("Prelude","[]") []]]]]]]]]]]]]],Comb (FuncPartCall 1) ("Prelude","const") [Comb ConsCall ("Prelude","True") []]],Comb (FuncPartCall 2) ("WUI","wTree.showTree.340") [Var 2,Var 3],Comb (FuncPartCall 3) ("WUI","wTree.readTree.340") [Var 4,Var 2]])])),Func ("WUI","wTree.showTree.340") 4 Private (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 1539) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 1539) (TCons ("Prelude","Bool") [])]) (FuncType (TVar 1539) (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]))) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TVar 0,TVar 1]) (FuncType (TCons ("WUI","WTree") [TVar 1539]) (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]))))) (Rule [1,2,3,4] (Case  Flex (Var 4) [Branch (Pattern ("WUI","WLeaf") [5]) (Let [(6,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 2,Var 1],Var 5]),(7,Comb FuncCall ("WUI","wTree.showTree.340._#selFP98#hea") [Var 6]),(8,Comb FuncCall ("WUI","wTree.showTree.340._#selFP99#rta") [Var 6])] (Comb ConsCall ("Prelude","(,)") [Var 7,Comb FuncCall ("WUI","altstate2state") [Comb ConsCall ("Prelude","(,)") [Lit (Intc  1),Var 8]]])),Branch (Pattern ("WUI","WNode") [9]) (Let [(10,Comb FuncCall ("Prelude","unzip") [Comb FuncCall ("Prelude","map") [Comb (FuncPartCall 1) ("WUI","wTree.showTree.340") [Var 1,Var 2,Var 3],Var 9]]),(11,Comb FuncCall ("WUI","wTree.showTree.340._#selFP101#hes") [Var 10]),(12,Comb FuncCall ("WUI","wTree.showTree.340._#selFP102#sts") [Var 10])] (Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("WUI","renderOf") [Var 3],Var 11],Comb FuncCall ("WUI","altstate2state") [Comb ConsCall ("Prelude","(,)") [Lit (Intc  2),Comb FuncCall ("WUI","states2state") [Var 12]]]]))])),Func ("WUI","wTree.showTree.340._#selFP98#hea") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]) (TCons ("HTML","HtmlExp") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 2)])),Func ("WUI","wTree.showTree.340._#selFP99#rta") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]) (TCons ("WUI","WuiState") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 3)])),Func ("WUI","wTree.showTree.340._#selFP101#hes") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []],TCons ("Prelude","[]") [TCons ("WUI","WuiState") []]]) (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 2)])),Func ("WUI","wTree.showTree.340._#selFP102#sts") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []],TCons ("Prelude","[]") [TCons ("WUI","WuiState") []]]) (TCons ("Prelude","[]") [TCons ("WUI","WuiState") []])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 3)])),Func ("WUI","wTree.readTree.340") 5 Private (FuncType (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 1539) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (FuncType (TCons ("WUI","WuiState") []) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 1539],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]])))) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 1539) (TCons ("Prelude","Bool") [])]) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TCons ("WUI","WTree") [TVar 1539]) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (FuncType (TCons ("WUI","WuiState") []) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TCons ("WUI","WTree") [TVar 1539]],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]])))))) (Rule [1,2,3,4,5] (Let [(6,Comb FuncCall ("WUI","state2altstate") [Var 5]),(7,Comb FuncCall ("WUI","wTree.readTree.340._#selFP108#altindex") [Var 6]),(8,Comb FuncCall ("WUI","wTree.readTree.340._#selFP109#rab") [Var 6]),(9,Var 7)] (Case  Rigid (Comb FuncCall ("Prelude","==") [Var 9,Lit (Intc  1)]) [Branch (Pattern ("Prelude","True") []) (Let [(10,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 1,Var 2],Var 4],Var 8]),(11,Comb FuncCall ("WUI","wTree.readTree.340._#selFP105#rv") [Var 10]),(12,Comb FuncCall ("WUI","wTree.readTree.340._#selFP106#he") [Var 10]),(13,Comb FuncCall ("WUI","wTree.readTree.340._#selFP107#rst") [Var 10])] (Comb FuncCall ("WUI","wTree.readTree.340.checkValue.353") [Var 3,Comb FuncCall ("Prelude","==") [Var 11,Comb ConsCall ("Prelude","Nothing") []],Comb ConsCall ("WUI","WLeaf") [Comb FuncCall ("Maybe","fromJust") [Var 11]],Comb (FuncPartCall 1) ("Prelude","head") [],Comb ConsCall ("Prelude",":") [Var 12,Comb ConsCall ("Prelude","[]") []],Comb FuncCall ("WUI","altstate2state") [Comb ConsCall ("Prelude","(,)") [Lit (Intc  1),Var 13]]])),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Prelude","==") [Var 9,Lit (Intc  2)]) [Branch (Pattern ("Prelude","True") []) (Let [(14,Comb FuncCall ("Prelude","map") [Comb (FuncPartCall 1) ("WUI","wTree.readTree.340") [Var 1,Var 2,Var 3,Var 4],Comb FuncCall ("WUI","state2states") [Var 8]])] (Comb FuncCall ("WUI","wTree.readTree.340.checkValue.353") [Var 3,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","elem") [Comb ConsCall ("Prelude","Nothing") []],Comb FuncCall ("Prelude","map") [Comb (FuncPartCall 1) ("Prelude","fst") [],Var 14]],Comb ConsCall ("WUI","WNode") [Comb FuncCall ("Prelude","map") [Comb FuncCall ("Prelude",".") [Comb (FuncPartCall 1) ("Maybe","fromJust") [],Comb (FuncPartCall 1) ("Prelude","fst") []],Var 14]],Comb FuncCall ("WUI","renderOf") [Var 3],Comb FuncCall ("Prelude","map") [Comb FuncCall ("Prelude",".") [Comb (FuncPartCall 1) ("Prelude","fst") [],Comb (FuncPartCall 1) ("Prelude","snd") []],Var 14],Comb FuncCall ("WUI","altstate2state") [Comb ConsCall ("Prelude","(,)") [Lit (Intc  2),Comb FuncCall ("WUI","states2state") [Comb FuncCall ("Prelude","map") [Comb FuncCall ("Prelude",".") [Comb (FuncPartCall 1) ("Prelude","snd") [],Comb (FuncPartCall 1) ("Prelude","snd") []],Var 14]]]]])),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("Prelude","failed") [])])]))),Func ("WUI","wTree.readTree.340.checkValue.353") 6 Private (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TCons ("WUI","WTree") [TVar 1539]) (TCons ("Prelude","Bool") [])]) (FuncType (TCons ("Prelude","Bool") []) (FuncType (TCons ("WUI","WTree") [TVar 1539]) (FuncType (FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") [])) (FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (FuncType (TVar 0) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TCons ("WUI","WTree") [TVar 1539]],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TVar 0]]))))))) (Rule [1,2,3,4,5,6] (Case  Rigid (Var 2) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude","Nothing") [],Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("Prelude","apply") [Var 4,Var 5],Var 6]]),Branch (Pattern ("Prelude","False") []) (Case  Rigid (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("WUI","conditionOf") [Var 1],Var 3]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude","Just") [Var 3],Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("Prelude","apply") [Var 4,Var 5],Var 6]]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude","Nothing") [],Comb ConsCall ("Prelude","(,)") [Comb FuncCall ("WUI","renderError") [Var 4,Comb FuncCall ("WUI","errorOf") [Var 1],Var 5],Var 6]])])])),Func ("WUI","wTree.readTree.340._#selFP108#altindex") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("WUI","WuiState") []]) (TCons ("Prelude","Int") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 2)])),Func ("WUI","wTree.readTree.340._#selFP109#rab") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Int") [],TCons ("WUI","WuiState") []]) (TCons ("WUI","WuiState") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 3)])),Func ("WUI","wTree.readTree.340._#selFP105#rv") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 1539],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]) (TCons ("Prelude","Maybe") [TVar 1539])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Var 2)])])),Func ("WUI","wTree.readTree.340._#selFP106#he") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 1539],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]) (TCons ("HTML","HtmlExp") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Var 4)])])),Func ("WUI","wTree.readTree.340._#selFP107#rst") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 1539],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]) (TCons ("WUI","WuiState") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Var 5)])])),Func ("WUI","renderTuple") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") [])) (Rule [1] (Comb FuncCall ("HTML","table") [Comb ConsCall ("Prelude",":") [Comb FuncCall ("Prelude","map") [Comb (FuncPartCall 1) ("WUI","renderTuple._#lambda53") [],Var 1],Comb ConsCall ("Prelude","[]") []]])),Func ("WUI","renderTuple._#lambda53") 1 Private (FuncType (TCons ("HTML","HtmlExp") []) (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []])) (Rule [1] (Comb ConsCall ("Prelude",":") [Var 1,Comb ConsCall ("Prelude","[]") []])),Func ("WUI","unRenderTuple") 1 Private (FuncType (TCons ("HTML","HtmlExp") []) (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []])) (Rule [1] (Case  Rigid (Comb FuncCall ("WUI","unRenderTuple.isTupleTable.374") [Var 1]) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("WUI","unRenderTuple.getTupleTableElems.374") [Var 1]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude",":") [Var 1,Comb ConsCall ("Prelude","[]") []])])),Func ("WUI","unRenderTuple.isSingleElem.374") 1 Private (FuncType (TCons ("HTML","HtmlExp") []) (TCons ("Prelude","Bool") [])) (Rule [1] (Case  Rigid (Var 1) [Branch (Pattern ("HTML","HtmlStruct") [2,3,4]) (Case  Rigid (Var 2) [Branch (Pattern ("Prelude",":") [5,6]) (Let [(7,Var 5)] (Case  Rigid (Comb FuncCall ("Prelude","==") [Var 7,Lit (Charc  't')]) [Branch (Pattern ("Prelude","True") []) (Case  Rigid (Var 6) [Branch (Pattern ("Prelude",":") [8,9]) (Let [(10,Var 8)] (Case  Rigid (Comb FuncCall ("Prelude","==") [Var 10,Lit (Charc  'd')]) [Branch (Pattern ("Prelude","True") []) (Case  Rigid (Var 9) [Branch (Pattern ("Prelude","[]") []) (Case  Rigid (Var 4) [Branch (Pattern ("Prelude",":") [11,12]) (Case  Rigid (Var 12) [Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Prelude",":") [13,14]) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Prelude",":") [15,16]) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","False") [])])),Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","False") [])])),Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("HTML","HtmlText") [17]) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("HTML","HtmlCRef") [18,19]) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("HTML","HtmlEvent") [20,21]) (Comb ConsCall ("Prelude","False") [])])),Func ("WUI","unRenderTuple.isTupleTable.374") 1 Private (FuncType (TCons ("HTML","HtmlExp") []) (TCons ("Prelude","Bool") [])) (Rule [1] (Case  Rigid (Var 1) [Branch (Pattern ("HTML","HtmlStruct") [2,3,4]) (Case  Rigid (Var 2) [Branch (Pattern ("Prelude",":") [5,6]) (Let [(7,Var 5)] (Case  Rigid (Comb FuncCall ("Prelude","==") [Var 7,Lit (Charc  't')]) [Branch (Pattern ("Prelude","True") []) (Case  Rigid (Var 6) [Branch (Pattern ("Prelude",":") [8,9]) (Let [(10,Var 8)] (Case  Rigid (Comb FuncCall ("Prelude","==") [Var 10,Lit (Charc  'a')]) [Branch (Pattern ("Prelude","True") []) (Case  Rigid (Var 9) [Branch (Pattern ("Prelude",":") [11,12]) (Let [(13,Var 11)] (Case  Rigid (Comb FuncCall ("Prelude","==") [Var 13,Lit (Charc  'b')]) [Branch (Pattern ("Prelude","True") []) (Case  Rigid (Var 12) [Branch (Pattern ("Prelude",":") [14,15]) (Let [(16,Var 14)] (Case  Rigid (Comb FuncCall ("Prelude","==") [Var 16,Lit (Charc  'l')]) [Branch (Pattern ("Prelude","True") []) (Case  Rigid (Var 15) [Branch (Pattern ("Prelude",":") [17,18]) (Let [(19,Var 17)] (Case  Rigid (Comb FuncCall ("Prelude","==") [Var 19,Lit (Charc  'e')]) [Branch (Pattern ("Prelude","True") []) (Case  Rigid (Var 18) [Branch (Pattern ("Prelude","[]") []) (Case  Rigid (Var 3) [Branch (Pattern ("Prelude","[]") []) (Case  Rigid (Var 4) [Branch (Pattern ("Prelude",":") [20,21]) (Case  Rigid (Var 20) [Branch (Pattern ("HTML","HtmlStruct") [22,23,24]) (Case  Rigid (Var 22) [Branch (Pattern ("Prelude",":") [25,26]) (Let [(27,Var 25)] (Case  Rigid (Comb FuncCall ("Prelude","==") [Var 27,Lit (Charc  't')]) [Branch (Pattern ("Prelude","True") []) (Case  Rigid (Var 26) [Branch (Pattern ("Prelude",":") [28,29]) (Let [(30,Var 28)] (Case  Rigid (Comb FuncCall ("Prelude","==") [Var 30,Lit (Charc  'r')]) [Branch (Pattern ("Prelude","True") []) (Case  Rigid (Var 29) [Branch (Pattern ("Prelude","[]") []) (Case  Rigid (Var 23) [Branch (Pattern ("Prelude","[]") []) (Case  Rigid (Var 21) [Branch (Pattern ("Prelude","[]") []) (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","all") [Comb (FuncPartCall 1) ("WUI","unRenderTuple.isSingleElem.374") []],Var 24]),Branch (Pattern ("Prelude",":") [31,32]) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Prelude",":") [33,34]) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Prelude",":") [35,36]) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","False") [])])),Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","False") [])])),Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("HTML","HtmlText") [37]) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("HTML","HtmlCRef") [38,39]) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("HTML","HtmlEvent") [40,41]) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Prelude",":") [42,43]) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Prelude",":") [44,45]) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","False") [])])),Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","False") [])])),Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","False") [])])),Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","False") [])])),Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","False") [])])),Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("HTML","HtmlText") [46]) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("HTML","HtmlCRef") [47,48]) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("HTML","HtmlEvent") [49,50]) (Comb ConsCall ("Prelude","False") [])])),Func ("WUI","unRenderTuple.getTupleTableElems.374") 1 Private (FuncType (TCons ("HTML","HtmlExp") []) (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("HTML","HtmlStruct") [2,3,4]) (Case  Flex (Var 2) [Branch (Pattern ("Prelude",":") [5,6]) (Case  Flex (Var 5) [Branch (LPattern (Charc  't')) (Case  Flex (Var 6) [Branch (Pattern ("Prelude",":") [7,8]) (Case  Flex (Var 7) [Branch (LPattern (Charc  'a')) (Case  Flex (Var 8) [Branch (Pattern ("Prelude",":") [9,10]) (Case  Flex (Var 9) [Branch (LPattern (Charc  'b')) (Case  Flex (Var 10) [Branch (Pattern ("Prelude",":") [11,12]) (Case  Flex (Var 11) [Branch (LPattern (Charc  'l')) (Case  Flex (Var 12) [Branch (Pattern ("Prelude",":") [13,14]) (Case  Flex (Var 13) [Branch (LPattern (Charc  'e')) (Case  Flex (Var 14) [Branch (Pattern ("Prelude","[]") []) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","[]") []) (Case  Flex (Var 4) [Branch (Pattern ("Prelude",":") [15,16]) (Case  Flex (Var 15) [Branch (Pattern ("HTML","HtmlStruct") [17,18,19]) (Case  Flex (Var 17) [Branch (Pattern ("Prelude",":") [20,21]) (Case  Flex (Var 20) [Branch (LPattern (Charc  't')) (Case  Flex (Var 21) [Branch (Pattern ("Prelude",":") [22,23]) (Case  Flex (Var 22) [Branch (LPattern (Charc  'r')) (Case  Flex (Var 23) [Branch (Pattern ("Prelude","[]") []) (Case  Flex (Var 18) [Branch (Pattern ("Prelude","[]") []) (Case  Flex (Var 16) [Branch (Pattern ("Prelude","[]") []) (Comb FuncCall ("Prelude","map") [Comb (FuncPartCall 1) ("WUI","unRenderTuple.getTupleTableElems.374._#lambda56") [],Var 19])])])])])])])])])])])])])])])])])])])])])])])),Func ("WUI","unRenderTuple.getTupleTableElems.374._#lambda56") 1 Private (FuncType (TCons ("HTML","HtmlExp") []) (TCons ("HTML","HtmlExp") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("HTML","HtmlStruct") [2,3,4]) (Case  Flex (Var 2) [Branch (Pattern ("Prelude",":") [5,6]) (Case  Flex (Var 5) [Branch (LPattern (Charc  't')) (Case  Flex (Var 6) [Branch (Pattern ("Prelude",":") [7,8]) (Case  Flex (Var 7) [Branch (LPattern (Charc  'd')) (Case  Flex (Var 8) [Branch (Pattern ("Prelude","[]") []) (Case  Flex (Var 4) [Branch (Pattern ("Prelude",":") [9,10]) (Case  Flex (Var 10) [Branch (Pattern ("Prelude","[]") []) (Var 9)])])])])])])])])),Func ("WUI","tupleError") 0 Private (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (Rule [] (Comb ConsCall ("Prelude",":") [Lit (Charc  'I'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude",":") [Lit (Charc  'g'),Comb ConsCall ("Prelude",":") [Lit (Charc  'a'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude",":") [Lit (Charc  ' '),Comb ConsCall ("Prelude",":") [Lit (Charc  'c'),Comb ConsCall ("Prelude",":") [Lit (Charc  'o'),Comb ConsCall ("Prelude",":") [Lit (Charc  'm'),Comb ConsCall ("Prelude",":") [Lit (Charc  'b'),Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  'n'),Comb ConsCall ("Prelude",":") [Lit (Charc  'a'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  'o'),Comb ConsCall ("Prelude",":") [Lit (Charc  'n'),Comb ConsCall ("Prelude",":") [Lit (Charc  ':'),Comb ConsCall ("Prelude","[]") []]]]]]]]]]]]]]]]]]]]])),Func ("WUI","renderTaggedTuple") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]) (FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []))) (Rule [1,2] (Comb FuncCall ("HTML","table") [Comb FuncCall ("Prelude","map") [Comb (FuncPartCall 1) ("WUI","renderTaggedTuple._#lambda57") [],Comb FuncCall ("Prelude","zip") [Var 1,Var 2]]])),Func ("WUI","renderTaggedTuple._#lambda57") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("HTML","HtmlExp") []]) (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude",":") [Comb FuncCall ("HTML","bold") [Comb ConsCall ("Prelude",":") [Comb FuncCall ("HTML","htxt") [Var 2],Comb ConsCall ("Prelude","[]") []]],Comb ConsCall ("Prelude","[]") []],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude",":") [Var 3,Comb ConsCall ("Prelude","[]") []],Comb ConsCall ("Prelude","[]") []]])])),Func ("WUI","renderList") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") [])) (Rule [1] (Comb FuncCall ("HTML","addAttr") [Comb FuncCall ("WUI","mergeTableOfTable") [Comb FuncCall ("HTML","table") [Comb FuncCall ("Prelude","map") [Comb (FuncPartCall 1) ("WUI","renderList._#lambda58") [],Var 1]]],Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude",":") [Lit (Charc  'b'),Comb ConsCall ("Prelude",":") [Lit (Charc  'o'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  'd'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude","[]") []]]]]]],Comb ConsCall ("Prelude",":") [Lit (Charc  '1'),Comb ConsCall ("Prelude","[]") []]]])),Func ("WUI","renderList._#lambda58") 1 Private (FuncType (TCons ("HTML","HtmlExp") []) (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]])) (Rule [1] (Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude",":") [Var 1,Comb ConsCall ("Prelude","[]") []],Comb ConsCall ("Prelude","[]") []])),Func ("WUI","renderError") 3 Private (FuncType (FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") [])) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") [])))) (Rule [1,2,3] (Comb FuncCall ("HTML","addAttr") [Comb FuncCall ("HTML","table") [Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude",":") [Comb FuncCall ("WUI","boldRedTxt") [Var 2],Comb ConsCall ("Prelude","[]") []],Comb ConsCall ("Prelude","[]") []],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude",":") [Comb FuncCall ("Prelude","apply") [Var 1,Var 3],Comb ConsCall ("Prelude","[]") []],Comb ConsCall ("Prelude","[]") []],Comb ConsCall ("Prelude","[]") []]]],Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude",":") [Lit (Charc  'b'),Comb ConsCall ("Prelude",":") [Lit (Charc  'g'),Comb ConsCall ("Prelude",":") [Lit (Charc  'c'),Comb ConsCall ("Prelude",":") [Lit (Charc  'o'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude",":") [Lit (Charc  'o'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude","[]") []]]]]]]],Comb ConsCall ("Prelude",":") [Lit (Charc  '#'),Comb ConsCall ("Prelude",":") [Lit (Charc  'f'),Comb ConsCall ("Prelude",":") [Lit (Charc  'f'),Comb ConsCall ("Prelude",":") [Lit (Charc  'f'),Comb ConsCall ("Prelude",":") [Lit (Charc  'f'),Comb ConsCall ("Prelude",":") [Lit (Charc  '0'),Comb ConsCall ("Prelude",":") [Lit (Charc  '0'),Comb ConsCall ("Prelude","[]") []]]]]]]]]])),Func ("WUI","boldRedTxt") 1 Private (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("HTML","HtmlExp") [])) (Rule [1] (Comb ConsCall ("HTML","HtmlStruct") [Comb ConsCall ("Prelude",":") [Lit (Charc  'f'),Comb ConsCall ("Prelude",":") [Lit (Charc  'o'),Comb ConsCall ("Prelude",":") [Lit (Charc  'n'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude","[]") []]]]],Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude","(,)") [Comb ConsCall ("Prelude",":") [Lit (Charc  'c'),Comb ConsCall ("Prelude",":") [Lit (Charc  'o'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude",":") [Lit (Charc  'o'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude","[]") []]]]]],Comb ConsCall ("Prelude",":") [Lit (Charc  '#'),Comb ConsCall ("Prelude",":") [Lit (Charc  'f'),Comb ConsCall ("Prelude",":") [Lit (Charc  'f'),Comb ConsCall ("Prelude",":") [Lit (Charc  '0'),Comb ConsCall ("Prelude",":") [Lit (Charc  '0'),Comb ConsCall ("Prelude",":") [Lit (Charc  '0'),Comb ConsCall ("Prelude",":") [Lit (Charc  '0'),Comb ConsCall ("Prelude","[]") []]]]]]]]],Comb ConsCall ("Prelude","[]") []],Comb ConsCall ("Prelude",":") [Comb FuncCall ("HTML","bold") [Comb ConsCall ("Prelude",":") [Comb FuncCall ("HTML","htxt") [Var 1],Comb ConsCall ("Prelude","[]") []]],Comb ConsCall ("Prelude","[]") []]])),Func ("WUI","mergeTableOfTable") 1 Private (FuncType (TCons ("HTML","HtmlExp") []) (TCons ("HTML","HtmlExp") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("HTML","HtmlStruct") [2,3,4]) (Case  Flex (Var 2) [Branch (Pattern ("Prelude",":") [5,6]) (Case  Flex (Var 5) [Branch (LPattern (Charc  't')) (Case  Flex (Var 6) [Branch (Pattern ("Prelude",":") [7,8]) (Case  Flex (Var 7) [Branch (LPattern (Charc  'a')) (Case  Flex (Var 8) [Branch (Pattern ("Prelude",":") [9,10]) (Case  Flex (Var 9) [Branch (LPattern (Charc  'b')) (Case  Flex (Var 10) [Branch (Pattern ("Prelude",":") [11,12]) (Case  Flex (Var 11) [Branch (LPattern (Charc  'l')) (Case  Flex (Var 12) [Branch (Pattern ("Prelude",":") [13,14]) (Case  Flex (Var 13) [Branch (LPattern (Charc  'e')) (Case  Flex (Var 14) [Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("HTML","HtmlStruct") [Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  'a'),Comb ConsCall ("Prelude",":") [Lit (Charc  'b'),Comb ConsCall ("Prelude",":") [Lit (Charc  'l'),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude","[]") []]]]]],Var 3,Case  Rigid (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","all") [Comb (FuncPartCall 1) ("WUI","isRowWithSingleTableData") []],Var 4]) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("Prelude","map") [Comb (FuncPartCall 1) ("WUI","mergeRowWithSingleTableData") [],Var 4]),Branch (Pattern ("Prelude","False") []) (Var 4)]])])])])])])])])])])])])])),Func ("WUI","isRowWithSingleTableData") 1 Private (FuncType (TCons ("HTML","HtmlExp") []) (TCons ("Prelude","Bool") [])) (Rule [1] (Case  Rigid (Var 1) [Branch (Pattern ("HTML","HtmlStruct") [2,3,4]) (Case  Rigid (Var 2) [Branch (Pattern ("Prelude",":") [5,6]) (Let [(7,Var 5)] (Case  Rigid (Comb FuncCall ("Prelude","==") [Var 7,Lit (Charc  't')]) [Branch (Pattern ("Prelude","True") []) (Case  Rigid (Var 6) [Branch (Pattern ("Prelude",":") [8,9]) (Let [(10,Var 8)] (Case  Rigid (Comb FuncCall ("Prelude","==") [Var 10,Lit (Charc  'r')]) [Branch (Pattern ("Prelude","True") []) (Case  Rigid (Var 9) [Branch (Pattern ("Prelude","[]") []) (Case  Rigid (Var 3) [Branch (Pattern ("Prelude","[]") []) (Case  Rigid (Var 4) [Branch (Pattern ("Prelude",":") [11,12]) (Case  Rigid (Var 11) [Branch (Pattern ("HTML","HtmlStruct") [13,14,15]) (Case  Rigid (Var 13) [Branch (Pattern ("Prelude",":") [16,17]) (Let [(18,Var 16)] (Case  Rigid (Comb FuncCall ("Prelude","==") [Var 18,Lit (Charc  't')]) [Branch (Pattern ("Prelude","True") []) (Case  Rigid (Var 17) [Branch (Pattern ("Prelude",":") [19,20]) (Let [(21,Var 19)] (Case  Rigid (Comb FuncCall ("Prelude","==") [Var 21,Lit (Charc  'd')]) [Branch (Pattern ("Prelude","True") []) (Case  Rigid (Var 20) [Branch (Pattern ("Prelude","[]") []) (Case  Rigid (Var 14) [Branch (Pattern ("Prelude","[]") []) (Case  Rigid (Var 15) [Branch (Pattern ("Prelude",":") [22,23]) (Case  Rigid (Var 22) [Branch (Pattern ("HTML","HtmlStruct") [24,25,26]) (Case  Rigid (Var 24) [Branch (Pattern ("Prelude",":") [27,28]) (Let [(29,Var 27)] (Case  Rigid (Comb FuncCall ("Prelude","==") [Var 29,Lit (Charc  't')]) [Branch (Pattern ("Prelude","True") []) (Case  Rigid (Var 28) [Branch (Pattern ("Prelude",":") [30,31]) (Let [(32,Var 30)] (Case  Rigid (Comb FuncCall ("Prelude","==") [Var 32,Lit (Charc  'a')]) [Branch (Pattern ("Prelude","True") []) (Case  Rigid (Var 31) [Branch (Pattern ("Prelude",":") [33,34]) (Let [(35,Var 33)] (Case  Rigid (Comb FuncCall ("Prelude","==") [Var 35,Lit (Charc  'b')]) [Branch (Pattern ("Prelude","True") []) (Case  Rigid (Var 34) [Branch (Pattern ("Prelude",":") [36,37]) (Let [(38,Var 36)] (Case  Rigid (Comb FuncCall ("Prelude","==") [Var 38,Lit (Charc  'l')]) [Branch (Pattern ("Prelude","True") []) (Case  Rigid (Var 37) [Branch (Pattern ("Prelude",":") [39,40]) (Let [(41,Var 39)] (Case  Rigid (Comb FuncCall ("Prelude","==") [Var 41,Lit (Charc  'e')]) [Branch (Pattern ("Prelude","True") []) (Case  Rigid (Var 40) [Branch (Pattern ("Prelude","[]") []) (Case  Rigid (Var 26) [Branch (Pattern ("Prelude",":") [42,43]) (Case  Rigid (Var 42) [Branch (Pattern ("HTML","HtmlStruct") [44,45,46]) (Case  Rigid (Var 44) [Branch (Pattern ("Prelude",":") [47,48]) (Let [(49,Var 47)] (Case  Rigid (Comb FuncCall ("Prelude","==") [Var 49,Lit (Charc  't')]) [Branch (Pattern ("Prelude","True") []) (Case  Rigid (Var 48) [Branch (Pattern ("Prelude",":") [50,51]) (Let [(52,Var 50)] (Case  Rigid (Comb FuncCall ("Prelude","==") [Var 52,Lit (Charc  'r')]) [Branch (Pattern ("Prelude","True") []) (Case  Rigid (Var 51) [Branch (Pattern ("Prelude","[]") []) (Case  Rigid (Var 43) [Branch (Pattern ("Prelude","[]") []) (Case  Rigid (Var 23) [Branch (Pattern ("Prelude","[]") []) (Case  Rigid (Var 12) [Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude","True") []),Branch (Pattern ("Prelude",":") [53,54]) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Prelude",":") [55,56]) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Prelude",":") [57,58]) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Prelude",":") [59,60]) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","False") [])])),Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","False") [])])),Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("HTML","HtmlText") [61]) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("HTML","HtmlCRef") [62,63]) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("HTML","HtmlEvent") [64,65]) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Prelude",":") [66,67]) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","False") [])])),Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","False") [])])),Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","False") [])])),Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","False") [])])),Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","False") [])])),Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("HTML","HtmlText") [68]) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("HTML","HtmlCRef") [69,70]) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("HTML","HtmlEvent") [71,72]) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Prelude",":") [73,74]) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Prelude",":") [75,76]) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","False") [])])),Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","False") [])])),Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("HTML","HtmlText") [77]) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("HTML","HtmlCRef") [78,79]) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("HTML","HtmlEvent") [80,81]) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Prelude",":") [82,83]) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Prelude",":") [84,85]) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","False") [])])),Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude","False") [])])),Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude","False") [])]),Branch (Pattern ("HTML","HtmlText") [86]) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("HTML","HtmlCRef") [87,88]) (Comb ConsCall ("Prelude","False") []),Branch (Pattern ("HTML","HtmlEvent") [89,90]) (Comb ConsCall ("Prelude","False") [])])),Func ("WUI","mergeRowWithSingleTableData") 1 Private (FuncType (TCons ("HTML","HtmlExp") []) (TCons ("HTML","HtmlExp") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("HTML","HtmlStruct") [2,3,4]) (Case  Flex (Var 2) [Branch (Pattern ("Prelude",":") [5,6]) (Case  Flex (Var 5) [Branch (LPattern (Charc  't')) (Case  Flex (Var 6) [Branch (Pattern ("Prelude",":") [7,8]) (Case  Flex (Var 7) [Branch (LPattern (Charc  'r')) (Case  Flex (Var 8) [Branch (Pattern ("Prelude","[]") []) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","[]") []) (Case  Flex (Var 4) [Branch (Pattern ("Prelude",":") [9,10]) (Case  Flex (Var 9) [Branch (Pattern ("HTML","HtmlStruct") [11,12,13]) (Case  Flex (Var 11) [Branch (Pattern ("Prelude",":") [14,15]) (Case  Flex (Var 14) [Branch (LPattern (Charc  't')) (Case  Flex (Var 15) [Branch (Pattern ("Prelude",":") [16,17]) (Case  Flex (Var 16) [Branch (LPattern (Charc  'd')) (Case  Flex (Var 17) [Branch (Pattern ("Prelude","[]") []) (Case  Flex (Var 12) [Branch (Pattern ("Prelude","[]") []) (Case  Flex (Var 13) [Branch (Pattern ("Prelude",":") [18,19]) (Case  Flex (Var 18) [Branch (Pattern ("HTML","HtmlStruct") [20,21,22]) (Case  Flex (Var 20) [Branch (Pattern ("Prelude",":") [23,24]) (Case  Flex (Var 23) [Branch (LPattern (Charc  't')) (Case  Flex (Var 24) [Branch (Pattern ("Prelude",":") [25,26]) (Case  Flex (Var 25) [Branch (LPattern (Charc  'a')) (Case  Flex (Var 26) [Branch (Pattern ("Prelude",":") [27,28]) (Case  Flex (Var 27) [Branch (LPattern (Charc  'b')) (Case  Flex (Var 28) [Branch (Pattern ("Prelude",":") [29,30]) (Case  Flex (Var 29) [Branch (LPattern (Charc  'l')) (Case  Flex (Var 30) [Branch (Pattern ("Prelude",":") [31,32]) (Case  Flex (Var 31) [Branch (LPattern (Charc  'e')) (Case  Flex (Var 32) [Branch (Pattern ("Prelude","[]") []) (Case  Flex (Var 22) [Branch (Pattern ("Prelude",":") [33,34]) (Case  Flex (Var 34) [Branch (Pattern ("Prelude","[]") []) (Case  Flex (Var 19) [Branch (Pattern ("Prelude","[]") []) (Case  Flex (Var 10) [Branch (Pattern ("Prelude","[]") []) (Var 33)])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])])),Func ("WUI","mainWUI") 3 Public (FuncType (TCons ("WUI","WuiSpec") [TVar 0]) (FuncType (TVar 0) (FuncType (FuncType (TVar 0) (TCons ("Prelude","IO") [TCons ("HTML","HtmlForm") []])) (TCons ("Prelude","IO") [TCons ("HTML","HtmlForm") []])))) (Rule [1,2,3] (Let [(4,Comb FuncCall ("WUI","wui2html") [Var 1,Var 2,Var 3]),(5,Comb FuncCall ("WUI","mainWUI._#selFP111#hexp") [Var 4]),(6,Comb FuncCall ("WUI","mainWUI._#selFP112#handler") [Var 4])] (Comb FuncCall ("Prelude","$") [Comb (FuncPartCall 1) ("Prelude","return") [],Comb FuncCall ("HTML","form") [Comb ConsCall ("Prelude",":") [Lit (Charc  'W'),Comb ConsCall ("Prelude",":") [Lit (Charc  'U'),Comb ConsCall ("Prelude",":") [Lit (Charc  'I'),Comb ConsCall ("Prelude","[]") []]]],Comb ConsCall ("Prelude",":") [Var 5,Comb ConsCall ("Prelude",":") [Comb FuncCall ("HTML","breakline") [],Comb ConsCall ("Prelude",":") [Comb FuncCall ("WUI","wuiHandler2button") [Comb ConsCall ("Prelude",":") [Lit (Charc  'S'),Comb ConsCall ("Prelude",":") [Lit (Charc  'u'),Comb ConsCall ("Prelude",":") [Lit (Charc  'b'),Comb ConsCall ("Prelude",":") [Lit (Charc  'm'),Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude","[]") []]]]]]],Var 6],Comb ConsCall ("Prelude","[]") []]]]]]))),Func ("WUI","mainWUI._#selFP111#hexp") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiHandler") []]) (TCons ("HTML","HtmlExp") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 2)])),Func ("WUI","mainWUI._#selFP112#handler") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiHandler") []]) (TCons ("WUI","WuiHandler") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 3)])),Func ("WUI","wui2html") 3 Public (FuncType (TCons ("WUI","WuiSpec") [TVar 0]) (FuncType (TVar 0) (FuncType (FuncType (TVar 0) (TCons ("Prelude","IO") [TCons ("HTML","HtmlForm") []])) (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiHandler") []])))) (Rule [1,2,3] (Comb FuncCall ("WUI","wuiWithErrorForm") [Var 1,Var 2,Var 3,Comb (FuncPartCall 2) ("WUI","standardErrorForm") []])),Func ("WUI","standardErrorForm") 2 Private (FuncType (TCons ("HTML","HtmlExp") []) (FuncType (TCons ("WUI","WuiHandler") []) (TCons ("Prelude","IO") [TCons ("HTML","HtmlForm") []]))) (Rule [1,2] (Comb FuncCall ("Prelude","$") [Comb (FuncPartCall 1) ("Prelude","return") [],Comb FuncCall ("HTML","standardForm") [Comb ConsCall ("Prelude",":") [Lit (Charc  'I'),Comb ConsCall ("Prelude",":") [Lit (Charc  'n'),Comb ConsCall ("Prelude",":") [Lit (Charc  'p'),Comb ConsCall ("Prelude",":") [Lit (Charc  'u'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude",":") [Lit (Charc  ' '),Comb ConsCall ("Prelude",":") [Lit (Charc  'e'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude",":") [Lit (Charc  'o'),Comb ConsCall ("Prelude",":") [Lit (Charc  'r'),Comb ConsCall ("Prelude","[]") []]]]]]]]]]]],Comb ConsCall ("Prelude",":") [Var 1,Comb ConsCall ("Prelude",":") [Comb FuncCall ("WUI","wuiHandler2button") [Comb ConsCall ("Prelude",":") [Lit (Charc  'S'),Comb ConsCall ("Prelude",":") [Lit (Charc  'u'),Comb ConsCall ("Prelude",":") [Lit (Charc  'b'),Comb ConsCall ("Prelude",":") [Lit (Charc  'm'),Comb ConsCall ("Prelude",":") [Lit (Charc  'i'),Comb ConsCall ("Prelude",":") [Lit (Charc  't'),Comb ConsCall ("Prelude","[]") []]]]]]],Var 2],Comb ConsCall ("Prelude","[]") []]]]])),Func ("WUI","wuiInForm") 4 Public (FuncType (TCons ("WUI","WuiSpec") [TVar 0]) (FuncType (TVar 0) (FuncType (FuncType (TVar 0) (TCons ("Prelude","IO") [TCons ("HTML","HtmlForm") []])) (FuncType (FuncType (TCons ("HTML","HtmlExp") []) (FuncType (TCons ("WUI","WuiHandler") []) (TCons ("Prelude","IO") [TCons ("HTML","HtmlForm") []]))) (TCons ("Prelude","IO") [TCons ("HTML","HtmlForm") []]))))) (Rule [1,2,3,4] (Comb FuncCall ("WUI","wuiInForm.answerForm.431") [Var 4,Comb FuncCall ("WUI","wuiWithErrorForm") [Var 1,Var 2,Var 3,Var 4]])),Func ("WUI","wuiInForm.answerForm.431") 2 Private (FuncType (FuncType (TCons ("HTML","HtmlExp") []) (FuncType (TCons ("WUI","WuiHandler") []) (TCons ("Prelude","IO") [TCons ("HTML","HtmlForm") []]))) (FuncType (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiHandler") []]) (TCons ("Prelude","IO") [TCons ("HTML","HtmlForm") []]))) (Rule [1,2] (Case  Flex (Var 2) [Branch (Pattern ("Prelude","(,)") [3,4]) (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 1,Var 3],Var 4])])),Func ("WUI","wuiWithErrorForm") 4 Public (FuncType (TCons ("WUI","WuiSpec") [TVar 0]) (FuncType (TVar 0) (FuncType (FuncType (TVar 0) (TCons ("Prelude","IO") [TCons ("HTML","HtmlForm") []])) (FuncType (FuncType (TCons ("HTML","HtmlExp") []) (FuncType (TCons ("WUI","WuiHandler") []) (TCons ("Prelude","IO") [TCons ("HTML","HtmlForm") []]))) (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiHandler") []]))))) (Rule [1,2,3,4] (Comb FuncCall ("WUI","showAndReadWUI") [Var 1,Var 3,Var 4,Comb FuncCall ("WUI","generateWUI") [Var 1,Var 2]])),Func ("WUI","generateWUI") 2 Private (FuncType (TCons ("WUI","WuiSpec") [TVar 0]) (FuncType (TVar 0) (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 0],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]])]))) (Rule [1,2] (Case  Flex (Var 1) [Branch (Pattern ("WUI","WuiSpec") [3,4,5]) (Comb FuncCall ("WUI","generateWUI.hst2result.437") [Var 5,Var 3,Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 4,Var 3],Var 2]])])),Func ("WUI","generateWUI.hst2result.437") 3 Private (FuncType (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 1598) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (FuncType (TCons ("WUI","WuiState") []) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 1598],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]])))) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 1598) (TCons ("Prelude","Bool") [])]) (FuncType (TCons ("Prelude","(,)") [TVar 0,TCons ("WUI","WuiState") []]) (TCons ("Prelude","(,)") [TVar 0,FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 1598],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]])])))) (Rule [1,2,3] (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Comb ConsCall ("Prelude","(,)") [Var 4,Comb (FuncPartCall 1) ("WUI","generateWUI.hst2result.437._#lambda60") [Var 1,Var 2,Var 5]])])),Func ("WUI","generateWUI.hst2result.437._#lambda60") 4 Private (FuncType (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 1598) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (FuncType (TCons ("WUI","WuiState") []) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 1598],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]])))) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 1598) (TCons ("Prelude","Bool") [])]) (FuncType (TCons ("WUI","WuiState") []) (FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 1598],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]))))) (Rule [1,2,3,4] (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 1,Var 2],Var 4],Var 3])),Func ("WUI","showAndReadWUI") 4 Private (FuncType (TCons ("WUI","WuiSpec") [TVar 0]) (FuncType (FuncType (TVar 0) (TCons ("Prelude","IO") [TCons ("HTML","HtmlForm") []])) (FuncType (FuncType (TCons ("HTML","HtmlExp") []) (FuncType (TCons ("WUI","WuiHandler") []) (TCons ("Prelude","IO") [TCons ("HTML","HtmlForm") []]))) (FuncType (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 0],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]])]) (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiHandler") []]))))) (Rule [1,2,3,4] (Case  Flex (Var 4) [Branch (Pattern ("Prelude","(,)") [5,6]) (Comb ConsCall ("Prelude","(,)") [Var 5,Comb ConsCall ("WUI","WHandler") [Comb (FuncPartCall 1) ("WUI","showAndReadWUI.htmlhandler.442") [Var 3,Var 6,Var 2,Var 1]]])])),Func ("WUI","showAndReadWUI.htmlhandler.442") 5 Private (FuncType (FuncType (TCons ("HTML","HtmlExp") []) (FuncType (TCons ("WUI","WuiHandler") []) (TCons ("Prelude","IO") [TCons ("HTML","HtmlForm") []]))) (FuncType (FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 1628],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]])) (FuncType (FuncType (TVar 1628) (TCons ("Prelude","IO") [TCons ("HTML","HtmlForm") []])) (FuncType (TCons ("WUI","WuiSpec") [TVar 1628]) (FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (TCons ("Prelude","IO") [TCons ("HTML","HtmlForm") []])))))) (Rule [1,2,3,4,5] (Case  Flex (Var 4) [Branch (Pattern ("WUI","WuiSpec") [6,7,8]) (Let [(9,Comb FuncCall ("Prelude","apply") [Var 2,Var 5]),(10,Comb FuncCall ("WUI","showAndReadWUI.htmlhandler.442._#selFP117#mbnewval") [Var 9]),(11,Comb FuncCall ("WUI","showAndReadWUI.htmlhandler.442._#selFP118#htmlerrform") [Var 9]),(12,Comb FuncCall ("WUI","showAndReadWUI.htmlhandler.442._#selFP119#errwstate") [Var 9])] (Comb FuncCall ("Prelude","maybe") [Let [(13,Comb FuncCall ("WUI","showAndReadWUI") [Var 4,Var 3,Var 1,Comb ConsCall ("Prelude","(,)") [Var 11,Comb (FuncPartCall 1) ("WUI","showAndReadWUI.htmlhandler.442._#lambda61") [Var 12,Var 8,Var 6]]]),(14,Comb FuncCall ("WUI","showAndReadWUI.htmlhandler.442._#selFP115#errhexp") [Var 13]),(15,Comb FuncCall ("WUI","showAndReadWUI.htmlhandler.442._#selFP116#errhdl") [Var 13])] (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 1,Var 14],Var 15]),Comb (FuncPartCall 1) ("WUI","showAndReadWUI.htmlhandler.442._#lambda62") [Var 3],Var 10]))])),Func ("WUI","showAndReadWUI.htmlhandler.442._#selFP117#mbnewval") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 1628],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]) (TCons ("Prelude","Maybe") [TVar 1628])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Var 2)])])),Func ("WUI","showAndReadWUI.htmlhandler.442._#selFP118#htmlerrform") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 1628],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]) (TCons ("HTML","HtmlExp") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Var 4)])])),Func ("WUI","showAndReadWUI.htmlhandler.442._#selFP119#errwstate") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 1628],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]) (TCons ("WUI","WuiState") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Case  Flex (Var 3) [Branch (Pattern ("Prelude","(,)") [4,5]) (Var 5)])])),Func ("WUI","showAndReadWUI.htmlhandler.442._#lambda61") 4 Private (FuncType (TCons ("WUI","WuiState") []) (FuncType (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 1628) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (FuncType (TCons ("WUI","WuiState") []) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 1628],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]])))) (FuncType (TCons ("Prelude","(,,)") [FuncType (TCons ("Prelude","[]") [TCons ("HTML","HtmlExp") []]) (TCons ("HTML","HtmlExp") []),TCons ("Prelude","[]") [TCons ("Prelude","Char") []],FuncType (TVar 1628) (TCons ("Prelude","Bool") [])]) (FuncType (FuncType (TCons ("HTML","CgiRef") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (TCons ("Prelude","(,)") [TCons ("Prelude","Maybe") [TVar 1628],TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiState") []]]))))) (Rule [1,2,3,4] (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Comb FuncCall ("Prelude","apply") [Var 2,Var 3],Var 4],Var 1])),Func ("WUI","showAndReadWUI.htmlhandler.442._#selFP115#errhexp") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiHandler") []]) (TCons ("HTML","HtmlExp") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 2)])),Func ("WUI","showAndReadWUI.htmlhandler.442._#selFP116#errhdl") 1 Private (FuncType (TCons ("Prelude","(,)") [TCons ("HTML","HtmlExp") [],TCons ("WUI","WuiHandler") []]) (TCons ("WUI","WuiHandler") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","(,)") [2,3]) (Var 3)])),Func ("WUI","showAndReadWUI.htmlhandler.442._#lambda62") 2 Private (FuncType (FuncType (TVar 1628) (TCons ("Prelude","IO") [TCons ("HTML","HtmlForm") []])) (FuncType (TVar 1628) (TCons ("Prelude","IO") [TCons ("HTML","HtmlForm") []]))) (Rule [1,2] (Comb FuncCall ("Prelude","seq") [Comb FuncCall ("Prelude","normalForm") [Var 2],Comb FuncCall ("Prelude","apply") [Var 1,Var 2]]))] [Op ("WUI","withRendering") InfixlOp 0,Op ("WUI","withError") InfixlOp 0,Op ("WUI","withCondition") InfixlOp 0]