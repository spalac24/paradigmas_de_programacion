Prog "Random" ["Prelude","System","Time"] [] [Func ("Random","zfact") 0 Private (TCons ("Prelude","Int") []) (Rule [] (Lit (Intc  36969))),Func ("Random","wfact") 0 Private (TCons ("Prelude","Int") []) (Rule [] (Lit (Intc  18000))),Func ("Random","two16") 0 Private (TCons ("Prelude","Int") []) (Rule [] (Lit (Intc  65536))),Func ("Random","large") 0 Private (TCons ("Prelude","Int") []) (Rule [] (Lit (Intc  536870911))),Func ("Random","nextInt") 1 Public (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","[]") [TCons ("Prelude","Int") []])) (Rule [1] (Let [(2,Case  Rigid (Comb FuncCall ("Prelude","==") [Var 1,Lit (Intc  0)]) [Branch (Pattern ("Prelude","True") []) (Lit (Intc  1)),Branch (Pattern ("Prelude","False") []) (Var 1)])] (Comb FuncCall ("Random","nextInt.next2.15") [Var 2,Var 2]))),Func ("Random","nextInt.next2.15") 2 Private (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","[]") [TCons ("Prelude","Int") []]))) (Rule [1,2] (Let [(3,Comb FuncCall ("Prelude","+") [Comb FuncCall ("Prelude","*") [Comb FuncCall ("Random","zfact") [],Comb FuncCall ("Prelude","mod") [Var 2,Comb FuncCall ("Random","two16") []]],Comb FuncCall ("Prelude","*") [Var 2,Comb FuncCall ("Random","two16") []]]),(4,Comb FuncCall ("Prelude","+") [Comb FuncCall ("Prelude","*") [Comb FuncCall ("Random","wfact") [],Comb FuncCall ("Prelude","mod") [Var 1,Comb FuncCall ("Random","two16") []]],Comb FuncCall ("Prelude","*") [Var 1,Comb FuncCall ("Random","two16") []]]),(5,Comb FuncCall ("Prelude","+") [Comb FuncCall ("Prelude","div") [Var 3,Comb FuncCall ("Random","two16") []],Var 4]),(6,Case  Rigid (Comb FuncCall ("Prelude","<") [Var 5,Lit (Intc  0)]) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("Prelude","+") [Var 5,Comb FuncCall ("Random","large") []]),Branch (Pattern ("Prelude","False") []) (Var 5)])] (Comb ConsCall ("Prelude",":") [Var 6,Comb FuncCall ("Random","nextInt.next2.15") [Var 4,Var 3]]))),Func ("Random","nextIntRange") 2 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","[]") [TCons ("Prelude","Int") []]))) (Rule [1,2] (Case  Rigid (Comb FuncCall ("Prelude",">") [Var 2,Lit (Intc  0)]) [Branch (Pattern ("Prelude","True") []) (Comb FuncCall ("Prelude","map") [Comb (FuncPartCall 1) ("Prelude","flip") [Comb (FuncPartCall 2) ("Prelude","mod") [],Var 2],Comb FuncCall ("Random","nextInt") [Var 1]]),Branch (Pattern ("Prelude","False") []) (Comb FuncCall ("Prelude","failed") [])])),Func ("Random","nextBoolean") 1 Public (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","[]") [TCons ("Prelude","Bool") []])) (Rule [1] (Comb FuncCall ("Prelude","map") [Comb (FuncPartCall 1) ("Prelude","flip") [Comb (FuncPartCall 2) ("Prelude","/=") [],Lit (Intc  0)],Comb FuncCall ("Random","nextInt") [Var 1]])),Func ("Random","getRandomSeed") 0 Public (TCons ("Prelude","IO") [TCons ("Prelude","Int") []]) (Rule [] (Comb FuncCall ("Prelude",">>=") [Comb FuncCall ("Time","getClockTime") [],Comb (FuncPartCall 1) ("Random","getRandomSeed._#lambda1") []])),Func ("Random","getRandomSeed._#lambda1") 1 Private (FuncType (TCons ("Time","ClockTime") []) (TCons ("Prelude","IO") [TCons ("Prelude","Int") []])) (Rule [1] (Comb FuncCall ("Prelude",">>=") [Comb FuncCall ("System","getCPUTime") [],Comb (FuncPartCall 1) ("Random","getRandomSeed._#lambda1._#lambda2") [Var 1]])),Func ("Random","getRandomSeed._#lambda1._#lambda2") 2 Private (FuncType (TCons ("Time","ClockTime") []) (FuncType (TCons ("Prelude","Int") []) (TCons ("Prelude","IO") [TCons ("Prelude","Int") []]))) (Rule [1,2] (Let [(3,Comb FuncCall ("Time","toUTCTime") [Var 1]),(4,Comb FuncCall ("Random","getRandomSeed._#lambda1._#lambda2._#selFP2#y") [Var 3]),(5,Comb FuncCall ("Random","getRandomSeed._#lambda1._#lambda2._#selFP3#mo") [Var 3]),(6,Comb FuncCall ("Random","getRandomSeed._#lambda1._#lambda2._#selFP4#d") [Var 3]),(7,Comb FuncCall ("Random","getRandomSeed._#lambda1._#lambda2._#selFP5#h") [Var 3]),(8,Comb FuncCall ("Random","getRandomSeed._#lambda1._#lambda2._#selFP6#m") [Var 3]),(9,Comb FuncCall ("Random","getRandomSeed._#lambda1._#lambda2._#selFP7#s") [Var 3])] (Comb FuncCall ("Prelude","return") [Comb FuncCall ("Prelude","mod") [Comb FuncCall ("Prelude","+") [Comb FuncCall ("Prelude","+") [Comb FuncCall ("Prelude","+") [Comb FuncCall ("Prelude","+") [Var 4,Var 5],Var 6],Var 7],Comb FuncCall ("Prelude","*") [Comb FuncCall ("Prelude","*") [Var 8,Var 9],Comb FuncCall ("Prelude","+") [Var 2,Lit (Intc  1)]]],Comb FuncCall ("Random","two16") []]]))),Func ("Random","getRandomSeed._#lambda1._#lambda2._#selFP2#y") 1 Private (FuncType (TCons ("Time","CalendarTime") []) (TCons ("Prelude","Int") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Time","CalendarTime") [2,3,4,5,6,7,8]) (Var 2)])),Func ("Random","getRandomSeed._#lambda1._#lambda2._#selFP3#mo") 1 Private (FuncType (TCons ("Time","CalendarTime") []) (TCons ("Prelude","Int") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Time","CalendarTime") [2,3,4,5,6,7,8]) (Var 3)])),Func ("Random","getRandomSeed._#lambda1._#lambda2._#selFP4#d") 1 Private (FuncType (TCons ("Time","CalendarTime") []) (TCons ("Prelude","Int") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Time","CalendarTime") [2,3,4,5,6,7,8]) (Var 4)])),Func ("Random","getRandomSeed._#lambda1._#lambda2._#selFP5#h") 1 Private (FuncType (TCons ("Time","CalendarTime") []) (TCons ("Prelude","Int") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Time","CalendarTime") [2,3,4,5,6,7,8]) (Var 5)])),Func ("Random","getRandomSeed._#lambda1._#lambda2._#selFP6#m") 1 Private (FuncType (TCons ("Time","CalendarTime") []) (TCons ("Prelude","Int") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Time","CalendarTime") [2,3,4,5,6,7,8]) (Var 6)])),Func ("Random","getRandomSeed._#lambda1._#lambda2._#selFP7#s") 1 Private (FuncType (TCons ("Time","CalendarTime") []) (TCons ("Prelude","Int") [])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Time","CalendarTime") [2,3,4,5,6,7,8]) (Var 7)]))] []