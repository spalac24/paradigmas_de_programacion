CurryProg "Float"
 ["Prelude"]
 []
 [CFunc ("Float","+.") 2 Public (CFuncType (CTCons ("Prelude","Float") []) (CFuncType (CTCons ("Prelude","Float") []) (CTCons ("Prelude","Float") []))) (CRules CFlex [CRule [CPVar (0,"x"),CPVar (1,"y")] [(CSymbol ("Prelude","success"),CApply (CApply (CSymbol ("Prelude","$#")) (CApply (CApply (CSymbol ("Prelude","$#")) (CSymbol ("Float","prim_Float_plus"))) (CVar (1,"y")))) (CVar (0,"x")))] []]),
  CFunc ("Float","prim_Float_plus") 2 Private (CFuncType (CTCons ("Prelude","Float") []) (CFuncType (CTCons ("Prelude","Float") []) (CTCons ("Prelude","Float") []))) (CExternal "prim_Float_plus"),
  CFunc ("Float","-.") 2 Public (CFuncType (CTCons ("Prelude","Float") []) (CFuncType (CTCons ("Prelude","Float") []) (CTCons ("Prelude","Float") []))) (CRules CFlex [CRule [CPVar (0,"x"),CPVar (1,"y")] [(CSymbol ("Prelude","success"),CApply (CApply (CSymbol ("Prelude","$#")) (CApply (CApply (CSymbol ("Prelude","$#")) (CSymbol ("Float","prim_Float_minus"))) (CVar (1,"y")))) (CVar (0,"x")))] []]),
  CFunc ("Float","prim_Float_minus") 2 Private (CFuncType (CTCons ("Prelude","Float") []) (CFuncType (CTCons ("Prelude","Float") []) (CTCons ("Prelude","Float") []))) (CExternal "prim_Float_minus"),
  CFunc ("Float","*.") 2 Public (CFuncType (CTCons ("Prelude","Float") []) (CFuncType (CTCons ("Prelude","Float") []) (CTCons ("Prelude","Float") []))) (CRules CFlex [CRule [CPVar (0,"x"),CPVar (1,"y")] [(CSymbol ("Prelude","success"),CApply (CApply (CSymbol ("Prelude","$#")) (CApply (CApply (CSymbol ("Prelude","$#")) (CSymbol ("Float","prim_Float_times"))) (CVar (1,"y")))) (CVar (0,"x")))] []]),
  CFunc ("Float","prim_Float_times") 2 Private (CFuncType (CTCons ("Prelude","Float") []) (CFuncType (CTCons ("Prelude","Float") []) (CTCons ("Prelude","Float") []))) (CExternal "prim_Float_times"),
  CFunc ("Float","/.") 2 Public (CFuncType (CTCons ("Prelude","Float") []) (CFuncType (CTCons ("Prelude","Float") []) (CTCons ("Prelude","Float") []))) (CRules CFlex [CRule [CPVar (0,"x"),CPVar (1,"y")] [(CSymbol ("Prelude","success"),CApply (CApply (CSymbol ("Prelude","$#")) (CApply (CApply (CSymbol ("Prelude","$#")) (CSymbol ("Float","prim_Float_div"))) (CVar (1,"y")))) (CVar (0,"x")))] []]),
  CFunc ("Float","prim_Float_div") 2 Private (CFuncType (CTCons ("Prelude","Float") []) (CFuncType (CTCons ("Prelude","Float") []) (CTCons ("Prelude","Float") []))) (CExternal "prim_Float_div"),
  CFunc ("Float","i2f") 1 Public (CFuncType (CTCons ("Prelude","Int") []) (CTCons ("Prelude","Float") [])) (CRules CFlex [CRule [CPVar (0,"x")] [(CSymbol ("Prelude","success"),CApply (CApply (CSymbol ("Prelude","$#")) (CSymbol ("Float","prim_i2f"))) (CVar (0,"x")))] []]),
  CFunc ("Float","prim_i2f") 1 Private (CFuncType (CTCons ("Prelude","Int") []) (CTCons ("Prelude","Float") [])) (CExternal "prim_i2f"),
  CFunc ("Float","truncate") 1 Public (CFuncType (CTCons ("Prelude","Float") []) (CTCons ("Prelude","Int") [])) (CRules CFlex [CRule [CPVar (0,"x")] [(CSymbol ("Prelude","success"),CApply (CApply (CSymbol ("Prelude","$#")) (CSymbol ("Float","prim_truncate"))) (CVar (0,"x")))] []]),
  CFunc ("Float","prim_truncate") 1 Private (CFuncType (CTCons ("Prelude","Float") []) (CTCons ("Prelude","Int") [])) (CExternal "prim_truncate"),
  CFunc ("Float","round") 1 Public (CFuncType (CTCons ("Prelude","Float") []) (CTCons ("Prelude","Int") [])) (CRules CFlex [CRule [CPVar (0,"x")] [(CSymbol ("Prelude","success"),CApply (CApply (CSymbol ("Prelude","$#")) (CSymbol ("Float","prim_round"))) (CVar (0,"x")))] []]),
  CFunc ("Float","prim_round") 1 Private (CFuncType (CTCons ("Prelude","Float") []) (CTCons ("Prelude","Int") [])) (CExternal "prim_round"),
  CFunc ("Float","sqrt") 1 Public (CFuncType (CTCons ("Prelude","Float") []) (CTCons ("Prelude","Float") [])) (CRules CFlex [CRule [CPVar (0,"x")] [(CSymbol ("Prelude","success"),CApply (CApply (CSymbol ("Prelude","$#")) (CSymbol ("Float","prim_sqrt"))) (CVar (0,"x")))] []]),
  CFunc ("Float","prim_sqrt") 1 Private (CFuncType (CTCons ("Prelude","Float") []) (CTCons ("Prelude","Float") [])) (CExternal "prim_sqrt"),
  CFunc ("Float","log") 1 Public (CFuncType (CTCons ("Prelude","Float") []) (CTCons ("Prelude","Float") [])) (CRules CFlex [CRule [CPVar (0,"x")] [(CSymbol ("Prelude","success"),CApply (CApply (CSymbol ("Prelude","$#")) (CSymbol ("Float","prim_log"))) (CVar (0,"x")))] []]),
  CFunc ("Float","prim_log") 1 Private (CFuncType (CTCons ("Prelude","Float") []) (CTCons ("Prelude","Float") [])) (CExternal "prim_log"),
  CFunc ("Float","exp") 1 Public (CFuncType (CTCons ("Prelude","Float") []) (CTCons ("Prelude","Float") [])) (CRules CFlex [CRule [CPVar (0,"x")] [(CSymbol ("Prelude","success"),CApply (CApply (CSymbol ("Prelude","$#")) (CSymbol ("Float","prim_exp"))) (CVar (0,"x")))] []]),
  CFunc ("Float","prim_exp") 1 Private (CFuncType (CTCons ("Prelude","Float") []) (CTCons ("Prelude","Float") [])) (CExternal "prim_exp"),
  CFunc ("Float","sin") 1 Public (CFuncType (CTCons ("Prelude","Float") []) (CTCons ("Prelude","Float") [])) (CRules CFlex [CRule [CPVar (0,"x")] [(CSymbol ("Prelude","success"),CApply (CApply (CSymbol ("Prelude","$#")) (CSymbol ("Float","prim_sin"))) (CVar (0,"x")))] []]),
  CFunc ("Float","prim_sin") 1 Private (CFuncType (CTCons ("Prelude","Float") []) (CTCons ("Prelude","Float") [])) (CExternal "prim_sin"),
  CFunc ("Float","cos") 1 Public (CFuncType (CTCons ("Prelude","Float") []) (CTCons ("Prelude","Float") [])) (CRules CFlex [CRule [CPVar (0,"x")] [(CSymbol ("Prelude","success"),CApply (CApply (CSymbol ("Prelude","$#")) (CSymbol ("Float","prim_cos"))) (CVar (0,"x")))] []]),
  CFunc ("Float","prim_cos") 1 Private (CFuncType (CTCons ("Prelude","Float") []) (CTCons ("Prelude","Float") [])) (CExternal "prim_cos"),
  CFunc ("Float","tan") 1 Public (CFuncType (CTCons ("Prelude","Float") []) (CTCons ("Prelude","Float") [])) (CRules CFlex [CRule [CPVar (0,"x")] [(CSymbol ("Prelude","success"),CApply (CApply (CSymbol ("Prelude","$#")) (CSymbol ("Float","prim_tan"))) (CVar (0,"x")))] []]),
  CFunc ("Float","prim_tan") 1 Private (CFuncType (CTCons ("Prelude","Float") []) (CTCons ("Prelude","Float") [])) (CExternal "prim_tan"),
  CFunc ("Float","atan") 1 Public (CFuncType (CTCons ("Prelude","Float") []) (CTCons ("Prelude","Float") [])) (CRules CFlex [CRule [CPVar (0,"x")] [(CSymbol ("Prelude","success"),CApply (CApply (CSymbol ("Prelude","$#")) (CSymbol ("Float","prim_atan"))) (CVar (0,"x")))] []]),
  CFunc ("Float","prim_atan") 1 Private (CFuncType (CTCons ("Prelude","Float") []) (CTCons ("Prelude","Float") [])) (CExternal "prim_atan")]
 [COp ("Float","/.") CInfixlOp 7,COp ("Float","*.") CInfixlOp 7,COp ("Float","-.") CInfixlOp 6,COp ("Float","+.") CInfixlOp 6]
