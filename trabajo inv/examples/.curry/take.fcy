Prog "take" ["Prelude"] [] [Func ("take","myTake") 2 Public (FuncType (TCons ("Prelude","Int") []) (FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("Prelude","[]") [TVar 0]))) (Rule [1,2] (Or (Case  Flex (Var 1) [Branch (LPattern (Intc  0)) (Comb ConsCall ("Prelude","[]") [])]) (Case  Flex (Var 2) [Branch (Pattern ("Prelude",":") [3,4]) (Comb ConsCall ("Prelude",":") [Var 3,Comb FuncCall ("take","myTake") [Comb FuncCall ("Prelude","-") [Var 1,Lit (Intc  1)],Var 4]])])))] []